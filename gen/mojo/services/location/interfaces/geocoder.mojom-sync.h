// NOTE: This file was generated by the Mojo bindings generator.
#ifndef MOJO_SERVICES_LOCATION_INTERFACES_GEOCODER_MOJOM_SYNC_H_
#define MOJO_SERVICES_LOCATION_INTERFACES_GEOCODER_MOJOM_SYNC_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/array.h"
#include "mojo/public/cpp/bindings/callback.h"
#include "mojo/public/cpp/bindings/interface_handle.h"
#include "mojo/public/cpp/bindings/interface_request.h"
#include "mojo/public/cpp/bindings/map.h"
#include "mojo/public/cpp/bindings/message_validator.h"
#include "mojo/public/cpp/bindings/string.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/bindings/lib/synchronous_connector.h"
#include "mojo/services/location/interfaces/geocoder.mojom-internal.h"
#include "mojo/services/location/interfaces/geocoder.mojom-common.h"
#include "mojo/services/location/interfaces/location.mojom.h"


namespace mojo {

// --- Synchronous interface declaration ---

class Geocoder_SynchronousProxy;
class Geocoder_Synchronous
  : public internal::Geocoder_Base {
 public:
  virtual ~Geocoder_Synchronous() override {}
  
  using Proxy_ = Geocoder_SynchronousProxy;
  virtual bool AddressToLocation(
      const mojo::String& in_address, OptionsPtr in_options, mojo::String* out_status, mojo::Array<ResultPtr>* out_results)= 0;
  virtual bool LocationToAddress(
      mojo::LocationPtr in_location, OptionsPtr in_options, mojo::String* out_status, mojo::Array<ResultPtr>* out_results)= 0;
};

class Geocoder_SynchronousProxy
    : public Geocoder_Synchronous {
 public:
  explicit Geocoder_SynchronousProxy(
      mojo::internal::SynchronousConnector* connector,
      mojo::internal::MessageValidatorList&& validators);
  bool AddressToLocation(const mojo::String& in_address, OptionsPtr in_options, mojo::String* out_status, mojo::Array<ResultPtr>* out_results) override;
  bool LocationToAddress(mojo::LocationPtr in_location, OptionsPtr in_options, mojo::String* out_status, mojo::Array<ResultPtr>* out_results) override;

 private:
  // |connector_| is passed to us, and is not owned by us.
  mojo::internal::SynchronousConnector* const connector_;
  mojo::internal::MessageValidatorList const validators_;
};

}  // namespace mojo

#endif  // MOJO_SERVICES_LOCATION_INTERFACES_GEOCODER_MOJOM_SYNC_H_
