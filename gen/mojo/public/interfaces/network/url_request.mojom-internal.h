// NOTE: This file was generated by the Mojo bindings generator.
#ifndef MOJO_PUBLIC_INTERFACES_NETWORK_URL_REQUEST_MOJOM_INTERNAL_H_
#define MOJO_PUBLIC_INTERFACES_NETWORK_URL_REQUEST_MOJOM_INTERNAL_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/union_accessor.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/system/buffer.h"
#include "mojo/public/cpp/system/data_pipe.h"
#include "mojo/public/cpp/system/handle.h"
#include "mojo/public/cpp/system/message_pipe.h"
#include "mojo/public/interfaces/network/http_header.mojom-internal.h"

namespace mojo {
namespace internal {
class BoundsChecker;
}
}
namespace mojo {

class URLRequest;


namespace internal {

class URLRequest_Data;



#pragma pack(push, 1)


class URLRequest_Data {
 public:
  static URLRequest_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StringPointer url;
  mojo::internal::StringPointer method;
  mojo::internal::ArrayPointer<mojo::internal::HttpHeader_Data*> headers;
  mojo::internal::ArrayPointer<mojo::DataPipeConsumerHandle> body;
  uint32_t response_body_buffer_size;
  uint8_t auto_follow_redirects : 1;
  uint8_t pad5_[3];
  int32_t cache_mode;
  uint8_t padfinal_[4];

 private:
  URLRequest_Data();
  ~URLRequest_Data() = delete;
};
static_assert(sizeof(URLRequest_Data) == 56,
              "Bad sizeof(URLRequest_Data)");


#pragma pack(pop)

}  // namespace internal
}  // namespace mojo

#endif  // MOJO_PUBLIC_INTERFACES_NETWORK_URL_REQUEST_MOJOM_INTERNAL_H_
