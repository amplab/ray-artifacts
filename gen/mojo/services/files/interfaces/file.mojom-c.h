// This file was auto-generated by the C bindings generator.

#ifndef MOJO_SERVICES_FILES_INTERFACES_FILE_MOJOM_C_H_
#define MOJO_SERVICES_FILES_INTERFACES_FILE_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.
#include "mojo/services/files/interfaces/types.mojom-c.h"


// Forward declarations for structs.
// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.


// Interface definitions.
// --- mojo_files_File ---
#define mojo_files_File__ServiceName ((const char*)"")
#define mojo_files_File__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: ReadToStream

#define mojo_files_File_ReadToStream__Ordinal \
    ((uint32_t)3)
#define mojo_files_File_ReadToStream__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_ReadToStream_Request;
// -- mojo_files_File_ReadToStream_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_ReadToStream_Request {
  struct MojomStructHeader header_;
  MojoHandle source;  // offset,bit = 0,0
  mojo_files_Whence whence;  // offset,bit = 4,0
  int64_t offset;  // offset,bit = 8,0
  int64_t num_bytes_to_read;  // offset,bit = 16,0
  
};

struct mojo_files_File_ReadToStream_Request* mojo_files_File_ReadToStream_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_ReadToStream_Request_Init(
  struct mojo_files_File_ReadToStream_Request* in_data);

void mojo_files_File_ReadToStream_Request_CloseAllHandles(
  struct mojo_files_File_ReadToStream_Request* in_data);

struct mojo_files_File_ReadToStream_Request* mojo_files_File_ReadToStream_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_ReadToStream_Request* in_data);

size_t mojo_files_File_ReadToStream_Request_ComputeSerializedSize(
  const struct mojo_files_File_ReadToStream_Request* in_data);

MojomValidationResult mojo_files_File_ReadToStream_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_ReadToStream_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_ReadToStream_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_ReadToStream_Response;
// -- mojo_files_File_ReadToStream_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_ReadToStream_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  
};

struct mojo_files_File_ReadToStream_Response* mojo_files_File_ReadToStream_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_ReadToStream_Response_Init(
  struct mojo_files_File_ReadToStream_Response* in_data);

void mojo_files_File_ReadToStream_Response_CloseAllHandles(
  struct mojo_files_File_ReadToStream_Response* in_data);

struct mojo_files_File_ReadToStream_Response* mojo_files_File_ReadToStream_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_ReadToStream_Response* in_data);

size_t mojo_files_File_ReadToStream_Response_ComputeSerializedSize(
  const struct mojo_files_File_ReadToStream_Response* in_data);

MojomValidationResult mojo_files_File_ReadToStream_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_ReadToStream_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_ReadToStream_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: WriteFromStream

#define mojo_files_File_WriteFromStream__Ordinal \
    ((uint32_t)4)
#define mojo_files_File_WriteFromStream__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_WriteFromStream_Request;
// -- mojo_files_File_WriteFromStream_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_WriteFromStream_Request {
  struct MojomStructHeader header_;
  MojoHandle sink;  // offset,bit = 0,0
  mojo_files_Whence whence;  // offset,bit = 4,0
  int64_t offset;  // offset,bit = 8,0
  
};

struct mojo_files_File_WriteFromStream_Request* mojo_files_File_WriteFromStream_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_WriteFromStream_Request_Init(
  struct mojo_files_File_WriteFromStream_Request* in_data);

void mojo_files_File_WriteFromStream_Request_CloseAllHandles(
  struct mojo_files_File_WriteFromStream_Request* in_data);

struct mojo_files_File_WriteFromStream_Request* mojo_files_File_WriteFromStream_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_WriteFromStream_Request* in_data);

size_t mojo_files_File_WriteFromStream_Request_ComputeSerializedSize(
  const struct mojo_files_File_WriteFromStream_Request* in_data);

MojomValidationResult mojo_files_File_WriteFromStream_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_WriteFromStream_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_WriteFromStream_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_WriteFromStream_Response;
// -- mojo_files_File_WriteFromStream_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_WriteFromStream_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  
};

struct mojo_files_File_WriteFromStream_Response* mojo_files_File_WriteFromStream_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_WriteFromStream_Response_Init(
  struct mojo_files_File_WriteFromStream_Response* in_data);

void mojo_files_File_WriteFromStream_Response_CloseAllHandles(
  struct mojo_files_File_WriteFromStream_Response* in_data);

struct mojo_files_File_WriteFromStream_Response* mojo_files_File_WriteFromStream_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_WriteFromStream_Response* in_data);

size_t mojo_files_File_WriteFromStream_Response_ComputeSerializedSize(
  const struct mojo_files_File_WriteFromStream_Response* in_data);

MojomValidationResult mojo_files_File_WriteFromStream_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_WriteFromStream_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_WriteFromStream_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Tell

#define mojo_files_File_Tell__Ordinal \
    ((uint32_t)5)
#define mojo_files_File_Tell__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_Tell_Request;
// -- mojo_files_File_Tell_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Tell_Request {
  struct MojomStructHeader header_;
  
};

struct mojo_files_File_Tell_Request* mojo_files_File_Tell_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Tell_Request_Init(
  struct mojo_files_File_Tell_Request* in_data);

void mojo_files_File_Tell_Request_CloseAllHandles(
  struct mojo_files_File_Tell_Request* in_data);

struct mojo_files_File_Tell_Request* mojo_files_File_Tell_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Tell_Request* in_data);

size_t mojo_files_File_Tell_Request_ComputeSerializedSize(
  const struct mojo_files_File_Tell_Request* in_data);

MojomValidationResult mojo_files_File_Tell_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Tell_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Tell_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_Tell_Response;
// -- mojo_files_File_Tell_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Tell_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  uint8_t pad0_[4];  // padding
  int64_t position;  // offset,bit = 8,0
  
};

struct mojo_files_File_Tell_Response* mojo_files_File_Tell_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Tell_Response_Init(
  struct mojo_files_File_Tell_Response* in_data);

void mojo_files_File_Tell_Response_CloseAllHandles(
  struct mojo_files_File_Tell_Response* in_data);

struct mojo_files_File_Tell_Response* mojo_files_File_Tell_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Tell_Response* in_data);

size_t mojo_files_File_Tell_Response_ComputeSerializedSize(
  const struct mojo_files_File_Tell_Response* in_data);

MojomValidationResult mojo_files_File_Tell_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Tell_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Tell_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Seek

#define mojo_files_File_Seek__Ordinal \
    ((uint32_t)6)
#define mojo_files_File_Seek__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_Seek_Request;
// -- mojo_files_File_Seek_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Seek_Request {
  struct MojomStructHeader header_;
  int64_t offset;  // offset,bit = 0,0
  mojo_files_Whence whence;  // offset,bit = 8,0
  
};

struct mojo_files_File_Seek_Request* mojo_files_File_Seek_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Seek_Request_Init(
  struct mojo_files_File_Seek_Request* in_data);

void mojo_files_File_Seek_Request_CloseAllHandles(
  struct mojo_files_File_Seek_Request* in_data);

struct mojo_files_File_Seek_Request* mojo_files_File_Seek_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Seek_Request* in_data);

size_t mojo_files_File_Seek_Request_ComputeSerializedSize(
  const struct mojo_files_File_Seek_Request* in_data);

MojomValidationResult mojo_files_File_Seek_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Seek_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Seek_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_Seek_Response;
// -- mojo_files_File_Seek_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Seek_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  uint8_t pad0_[4];  // padding
  int64_t position;  // offset,bit = 8,0
  
};

struct mojo_files_File_Seek_Response* mojo_files_File_Seek_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Seek_Response_Init(
  struct mojo_files_File_Seek_Response* in_data);

void mojo_files_File_Seek_Response_CloseAllHandles(
  struct mojo_files_File_Seek_Response* in_data);

struct mojo_files_File_Seek_Response* mojo_files_File_Seek_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Seek_Response* in_data);

size_t mojo_files_File_Seek_Response_ComputeSerializedSize(
  const struct mojo_files_File_Seek_Response* in_data);

MojomValidationResult mojo_files_File_Seek_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Seek_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Seek_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Touch

#define mojo_files_File_Touch__Ordinal \
    ((uint32_t)9)
#define mojo_files_File_Touch__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_Touch_Request;
// -- mojo_files_File_Touch_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Touch_Request {
  struct MojomStructHeader header_;
  union mojo_files_TimespecOrNowPtr atime;  // offset,bit = 0,0
  union mojo_files_TimespecOrNowPtr mtime;  // offset,bit = 8,0
  
};

struct mojo_files_File_Touch_Request* mojo_files_File_Touch_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Touch_Request_Init(
  struct mojo_files_File_Touch_Request* in_data);

void mojo_files_File_Touch_Request_CloseAllHandles(
  struct mojo_files_File_Touch_Request* in_data);

struct mojo_files_File_Touch_Request* mojo_files_File_Touch_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Touch_Request* in_data);

size_t mojo_files_File_Touch_Request_ComputeSerializedSize(
  const struct mojo_files_File_Touch_Request* in_data);

MojomValidationResult mojo_files_File_Touch_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Touch_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Touch_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_Touch_Response;
// -- mojo_files_File_Touch_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Touch_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  
};

struct mojo_files_File_Touch_Response* mojo_files_File_Touch_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Touch_Response_Init(
  struct mojo_files_File_Touch_Response* in_data);

void mojo_files_File_Touch_Response_CloseAllHandles(
  struct mojo_files_File_Touch_Response* in_data);

struct mojo_files_File_Touch_Response* mojo_files_File_Touch_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Touch_Response* in_data);

size_t mojo_files_File_Touch_Response_ComputeSerializedSize(
  const struct mojo_files_File_Touch_Response* in_data);

MojomValidationResult mojo_files_File_Touch_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Touch_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Touch_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Ioctl

#define mojo_files_File_Ioctl__Ordinal \
    ((uint32_t)13)
#define mojo_files_File_Ioctl__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_Ioctl_Request;
// -- mojo_files_File_Ioctl_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Ioctl_Request {
  struct MojomStructHeader header_;
  uint32_t request;  // offset,bit = 0,0
  uint8_t pad0_[4];  // padding
  union MojomArrayPtr in_values;  // offset,bit = 8,0
  
};

struct mojo_files_File_Ioctl_Request* mojo_files_File_Ioctl_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Ioctl_Request_Init(
  struct mojo_files_File_Ioctl_Request* in_data);

void mojo_files_File_Ioctl_Request_CloseAllHandles(
  struct mojo_files_File_Ioctl_Request* in_data);

struct mojo_files_File_Ioctl_Request* mojo_files_File_Ioctl_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Ioctl_Request* in_data);

size_t mojo_files_File_Ioctl_Request_ComputeSerializedSize(
  const struct mojo_files_File_Ioctl_Request* in_data);

MojomValidationResult mojo_files_File_Ioctl_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Ioctl_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Ioctl_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_Ioctl_Response;
// -- mojo_files_File_Ioctl_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Ioctl_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  uint8_t pad0_[4];  // padding
  union MojomArrayPtr out_values;  // offset,bit = 8,0
  
};

struct mojo_files_File_Ioctl_Response* mojo_files_File_Ioctl_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Ioctl_Response_Init(
  struct mojo_files_File_Ioctl_Response* in_data);

void mojo_files_File_Ioctl_Response_CloseAllHandles(
  struct mojo_files_File_Ioctl_Response* in_data);

struct mojo_files_File_Ioctl_Response* mojo_files_File_Ioctl_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Ioctl_Response* in_data);

size_t mojo_files_File_Ioctl_Response_ComputeSerializedSize(
  const struct mojo_files_File_Ioctl_Response* in_data);

MojomValidationResult mojo_files_File_Ioctl_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Ioctl_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Ioctl_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Close

#define mojo_files_File_Close__Ordinal \
    ((uint32_t)0)
#define mojo_files_File_Close__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_Close_Request;
// -- mojo_files_File_Close_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Close_Request {
  struct MojomStructHeader header_;
  
};

struct mojo_files_File_Close_Request* mojo_files_File_Close_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Close_Request_Init(
  struct mojo_files_File_Close_Request* in_data);

void mojo_files_File_Close_Request_CloseAllHandles(
  struct mojo_files_File_Close_Request* in_data);

struct mojo_files_File_Close_Request* mojo_files_File_Close_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Close_Request* in_data);

size_t mojo_files_File_Close_Request_ComputeSerializedSize(
  const struct mojo_files_File_Close_Request* in_data);

MojomValidationResult mojo_files_File_Close_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Close_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Close_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_Close_Response;
// -- mojo_files_File_Close_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Close_Response {
  struct MojomStructHeader header_;
  mojo_files_Error err;  // offset,bit = 0,0
  
};

struct mojo_files_File_Close_Response* mojo_files_File_Close_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Close_Response_Init(
  struct mojo_files_File_Close_Response* in_data);

void mojo_files_File_Close_Response_CloseAllHandles(
  struct mojo_files_File_Close_Response* in_data);

struct mojo_files_File_Close_Response* mojo_files_File_Close_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Close_Response* in_data);

size_t mojo_files_File_Close_Response_ComputeSerializedSize(
  const struct mojo_files_File_Close_Response* in_data);

MojomValidationResult mojo_files_File_Close_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Close_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Close_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Read

#define mojo_files_File_Read__Ordinal \
    ((uint32_t)1)
#define mojo_files_File_Read__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_Read_Request;
// -- mojo_files_File_Read_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Read_Request {
  struct MojomStructHeader header_;
  uint32_t num_bytes_to_read;  // offset,bit = 0,0
  mojo_files_Whence whence;  // offset,bit = 4,0
  int64_t offset;  // offset,bit = 8,0
  
};

struct mojo_files_File_Read_Request* mojo_files_File_Read_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Read_Request_Init(
  struct mojo_files_File_Read_Request* in_data);

void mojo_files_File_Read_Request_CloseAllHandles(
  struct mojo_files_File_Read_Request* in_data);

struct mojo_files_File_Read_Request* mojo_files_File_Read_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Read_Request* in_data);

size_t mojo_files_File_Read_Request_ComputeSerializedSize(
  const struct mojo_files_File_Read_Request* in_data);

MojomValidationResult mojo_files_File_Read_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Read_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Read_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_Read_Response;
// -- mojo_files_File_Read_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Read_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  uint8_t pad0_[4];  // padding
  union MojomArrayPtr bytes_read;  // offset,bit = 8,0
  
};

struct mojo_files_File_Read_Response* mojo_files_File_Read_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Read_Response_Init(
  struct mojo_files_File_Read_Response* in_data);

void mojo_files_File_Read_Response_CloseAllHandles(
  struct mojo_files_File_Read_Response* in_data);

struct mojo_files_File_Read_Response* mojo_files_File_Read_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Read_Response* in_data);

size_t mojo_files_File_Read_Response_ComputeSerializedSize(
  const struct mojo_files_File_Read_Response* in_data);

MojomValidationResult mojo_files_File_Read_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Read_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Read_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Write

#define mojo_files_File_Write__Ordinal \
    ((uint32_t)2)
#define mojo_files_File_Write__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_Write_Request;
// -- mojo_files_File_Write_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Write_Request {
  struct MojomStructHeader header_;
  union MojomArrayPtr bytes_to_write;  // offset,bit = 0,0
  int64_t offset;  // offset,bit = 8,0
  mojo_files_Whence whence;  // offset,bit = 16,0
  
};

struct mojo_files_File_Write_Request* mojo_files_File_Write_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Write_Request_Init(
  struct mojo_files_File_Write_Request* in_data);

void mojo_files_File_Write_Request_CloseAllHandles(
  struct mojo_files_File_Write_Request* in_data);

struct mojo_files_File_Write_Request* mojo_files_File_Write_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Write_Request* in_data);

size_t mojo_files_File_Write_Request_ComputeSerializedSize(
  const struct mojo_files_File_Write_Request* in_data);

MojomValidationResult mojo_files_File_Write_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Write_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Write_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_Write_Response;
// -- mojo_files_File_Write_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Write_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  uint32_t num_bytes_written;  // offset,bit = 4,0
  uint8_t pad1_[4];  // padding
  
};

struct mojo_files_File_Write_Response* mojo_files_File_Write_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Write_Response_Init(
  struct mojo_files_File_Write_Response* in_data);

void mojo_files_File_Write_Response_CloseAllHandles(
  struct mojo_files_File_Write_Response* in_data);

struct mojo_files_File_Write_Response* mojo_files_File_Write_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Write_Response* in_data);

size_t mojo_files_File_Write_Response_ComputeSerializedSize(
  const struct mojo_files_File_Write_Response* in_data);

MojomValidationResult mojo_files_File_Write_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Write_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Write_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Stat

#define mojo_files_File_Stat__Ordinal \
    ((uint32_t)7)
#define mojo_files_File_Stat__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_Stat_Request;
// -- mojo_files_File_Stat_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Stat_Request {
  struct MojomStructHeader header_;
  
};

struct mojo_files_File_Stat_Request* mojo_files_File_Stat_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Stat_Request_Init(
  struct mojo_files_File_Stat_Request* in_data);

void mojo_files_File_Stat_Request_CloseAllHandles(
  struct mojo_files_File_Stat_Request* in_data);

struct mojo_files_File_Stat_Request* mojo_files_File_Stat_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Stat_Request* in_data);

size_t mojo_files_File_Stat_Request_ComputeSerializedSize(
  const struct mojo_files_File_Stat_Request* in_data);

MojomValidationResult mojo_files_File_Stat_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Stat_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Stat_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_Stat_Response;
// -- mojo_files_File_Stat_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Stat_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  uint8_t pad0_[4];  // padding
  union mojo_files_FileInformationPtr file_information;  // offset,bit = 8,0
  
};

struct mojo_files_File_Stat_Response* mojo_files_File_Stat_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Stat_Response_Init(
  struct mojo_files_File_Stat_Response* in_data);

void mojo_files_File_Stat_Response_CloseAllHandles(
  struct mojo_files_File_Stat_Response* in_data);

struct mojo_files_File_Stat_Response* mojo_files_File_Stat_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Stat_Response* in_data);

size_t mojo_files_File_Stat_Response_ComputeSerializedSize(
  const struct mojo_files_File_Stat_Response* in_data);

MojomValidationResult mojo_files_File_Stat_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Stat_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Stat_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Dup

#define mojo_files_File_Dup__Ordinal \
    ((uint32_t)10)
#define mojo_files_File_Dup__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_Dup_Request;
// -- mojo_files_File_Dup_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Dup_Request {
  struct MojomStructHeader header_;
  MojoHandle file;  // offset,bit = 0,0
  
};

struct mojo_files_File_Dup_Request* mojo_files_File_Dup_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Dup_Request_Init(
  struct mojo_files_File_Dup_Request* in_data);

void mojo_files_File_Dup_Request_CloseAllHandles(
  struct mojo_files_File_Dup_Request* in_data);

struct mojo_files_File_Dup_Request* mojo_files_File_Dup_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Dup_Request* in_data);

size_t mojo_files_File_Dup_Request_ComputeSerializedSize(
  const struct mojo_files_File_Dup_Request* in_data);

MojomValidationResult mojo_files_File_Dup_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Dup_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Dup_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_Dup_Response;
// -- mojo_files_File_Dup_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Dup_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  
};

struct mojo_files_File_Dup_Response* mojo_files_File_Dup_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Dup_Response_Init(
  struct mojo_files_File_Dup_Response* in_data);

void mojo_files_File_Dup_Response_CloseAllHandles(
  struct mojo_files_File_Dup_Response* in_data);

struct mojo_files_File_Dup_Response* mojo_files_File_Dup_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Dup_Response* in_data);

size_t mojo_files_File_Dup_Response_ComputeSerializedSize(
  const struct mojo_files_File_Dup_Response* in_data);

MojomValidationResult mojo_files_File_Dup_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Dup_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Dup_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Reopen

#define mojo_files_File_Reopen__Ordinal \
    ((uint32_t)11)
#define mojo_files_File_Reopen__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_Reopen_Request;
// -- mojo_files_File_Reopen_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Reopen_Request {
  struct MojomStructHeader header_;
  MojoHandle file;  // offset,bit = 0,0
  uint32_t open_flags;  // offset,bit = 4,0
  uint8_t pad1_[4];  // padding
  
};

struct mojo_files_File_Reopen_Request* mojo_files_File_Reopen_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Reopen_Request_Init(
  struct mojo_files_File_Reopen_Request* in_data);

void mojo_files_File_Reopen_Request_CloseAllHandles(
  struct mojo_files_File_Reopen_Request* in_data);

struct mojo_files_File_Reopen_Request* mojo_files_File_Reopen_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Reopen_Request* in_data);

size_t mojo_files_File_Reopen_Request_ComputeSerializedSize(
  const struct mojo_files_File_Reopen_Request* in_data);

MojomValidationResult mojo_files_File_Reopen_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Reopen_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Reopen_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_Reopen_Response;
// -- mojo_files_File_Reopen_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Reopen_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  
};

struct mojo_files_File_Reopen_Response* mojo_files_File_Reopen_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Reopen_Response_Init(
  struct mojo_files_File_Reopen_Response* in_data);

void mojo_files_File_Reopen_Response_CloseAllHandles(
  struct mojo_files_File_Reopen_Response* in_data);

struct mojo_files_File_Reopen_Response* mojo_files_File_Reopen_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Reopen_Response* in_data);

size_t mojo_files_File_Reopen_Response_ComputeSerializedSize(
  const struct mojo_files_File_Reopen_Response* in_data);

MojomValidationResult mojo_files_File_Reopen_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Reopen_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Reopen_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Truncate

#define mojo_files_File_Truncate__Ordinal \
    ((uint32_t)8)
#define mojo_files_File_Truncate__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_Truncate_Request;
// -- mojo_files_File_Truncate_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Truncate_Request {
  struct MojomStructHeader header_;
  int64_t size;  // offset,bit = 0,0
  
};

struct mojo_files_File_Truncate_Request* mojo_files_File_Truncate_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Truncate_Request_Init(
  struct mojo_files_File_Truncate_Request* in_data);

void mojo_files_File_Truncate_Request_CloseAllHandles(
  struct mojo_files_File_Truncate_Request* in_data);

struct mojo_files_File_Truncate_Request* mojo_files_File_Truncate_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Truncate_Request* in_data);

size_t mojo_files_File_Truncate_Request_ComputeSerializedSize(
  const struct mojo_files_File_Truncate_Request* in_data);

MojomValidationResult mojo_files_File_Truncate_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Truncate_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Truncate_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_Truncate_Response;
// -- mojo_files_File_Truncate_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_Truncate_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  
};

struct mojo_files_File_Truncate_Response* mojo_files_File_Truncate_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_Truncate_Response_Init(
  struct mojo_files_File_Truncate_Response* in_data);

void mojo_files_File_Truncate_Response_CloseAllHandles(
  struct mojo_files_File_Truncate_Response* in_data);

struct mojo_files_File_Truncate_Response* mojo_files_File_Truncate_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_Truncate_Response* in_data);

size_t mojo_files_File_Truncate_Response_ComputeSerializedSize(
  const struct mojo_files_File_Truncate_Response* in_data);

MojomValidationResult mojo_files_File_Truncate_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_Truncate_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_Truncate_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: AsBuffer

#define mojo_files_File_AsBuffer__Ordinal \
    ((uint32_t)12)
#define mojo_files_File_AsBuffer__MinVersion \
    ((uint32_t)0)

struct mojo_files_File_AsBuffer_Request;
// -- mojo_files_File_AsBuffer_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_File_AsBuffer_Request {
  struct MojomStructHeader header_;
  
};

struct mojo_files_File_AsBuffer_Request* mojo_files_File_AsBuffer_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_File_AsBuffer_Request_Init(
  struct mojo_files_File_AsBuffer_Request* in_data);

void mojo_files_File_AsBuffer_Request_CloseAllHandles(
  struct mojo_files_File_AsBuffer_Request* in_data);

struct mojo_files_File_AsBuffer_Request* mojo_files_File_AsBuffer_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_AsBuffer_Request* in_data);

size_t mojo_files_File_AsBuffer_Request_ComputeSerializedSize(
  const struct mojo_files_File_AsBuffer_Request* in_data);

MojomValidationResult mojo_files_File_AsBuffer_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_AsBuffer_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_AsBuffer_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_File_AsBuffer_Response;
// -- mojo_files_File_AsBuffer_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_File_AsBuffer_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  MojoHandle buffer;  // offset,bit = 4,0
  uint8_t pad1_[4];  // padding
  
};

struct mojo_files_File_AsBuffer_Response* mojo_files_File_AsBuffer_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_File_AsBuffer_Response_Init(
  struct mojo_files_File_AsBuffer_Response* in_data);

void mojo_files_File_AsBuffer_Response_CloseAllHandles(
  struct mojo_files_File_AsBuffer_Response* in_data);

struct mojo_files_File_AsBuffer_Response* mojo_files_File_AsBuffer_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_File_AsBuffer_Response* in_data);

size_t mojo_files_File_AsBuffer_Response_ComputeSerializedSize(
  const struct mojo_files_File_AsBuffer_Response* in_data);

MojomValidationResult mojo_files_File_AsBuffer_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_File_AsBuffer_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_File_AsBuffer_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry mojo_files_File_Reopen_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Reopen_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Dup_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Dup_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_AsBuffer_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_AsBuffer_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Truncate_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Truncate_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_WriteFromStream_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_WriteFromStream_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Tell_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Tell_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Seek_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Seek_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Touch_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Touch_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Ioctl_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Ioctl_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_ReadToStream_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_ReadToStream_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Read_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Read_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Write_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Write_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Stat_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Stat_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Close_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_File_Close_Response__PointerTable[];


#endif  // MOJO_SERVICES_FILES_INTERFACES_FILE_MOJOM_C_H_