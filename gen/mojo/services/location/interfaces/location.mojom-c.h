// This file was auto-generated by the C bindings generator.

#ifndef MOJO_SERVICES_LOCATION_INTERFACES_LOCATION_MOJOM_C_H_
#define MOJO_SERVICES_LOCATION_INTERFACES_LOCATION_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.


// Forward declarations for structs.
struct mojo_Location;
union mojo_LocationPtr {
  struct mojo_Location* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_LocationPtr) == 8,
              "union mojo_LocationPtr must be 8 bytes");

// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.
// -- mojo_Location --
// Enums
// Constants
// Struct definition
struct mojo_Location {
  struct MojomStructHeader header_;
  uint64_t time;  // offset,bit = 0,0
  bool has_elapsed_real_time_nanos : 1;  // offset,bit = 8,0
  bool has_altitude : 1;  // offset,bit = 8,1
  bool has_speed : 1;  // offset,bit = 8,2
  bool has_bearing : 1;  // offset,bit = 8,3
  bool has_accuracy : 1;  // offset,bit = 8,4
  uint8_t pad5_[3];  // padding
  float speed;  // offset,bit = 12,0
  uint64_t elapsed_real_time_nanos;  // offset,bit = 16,0
  double latitude;  // offset,bit = 24,0
  double longitude;  // offset,bit = 32,0
  double altitude;  // offset,bit = 40,0
  float bearing;  // offset,bit = 48,0
  float accuracy;  // offset,bit = 52,0
  uint8_t pad12_[4];  // padding
  
};

struct mojo_Location* mojo_Location_New(struct MojomBuffer* in_buffer);

void mojo_Location_Init(
  struct mojo_Location* in_data);

void mojo_Location_CloseAllHandles(
  struct mojo_Location* in_data);

struct mojo_Location* mojo_Location_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Location* in_data);

size_t mojo_Location_ComputeSerializedSize(
  const struct mojo_Location* in_data);

MojomValidationResult mojo_Location_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Location_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Location_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);




// Interface definitions.


// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry mojo_Location__PointerTable[];


#endif  // MOJO_SERVICES_LOCATION_INTERFACES_LOCATION_MOJOM_C_H_