// This file was auto-generated by the C bindings generator.

#ifndef MOJO_SERVICES_CLIPBOARD_INTERFACES_CLIPBOARD_MOJOM_C_H_
#define MOJO_SERVICES_CLIPBOARD_INTERFACES_CLIPBOARD_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.


// Forward declarations for structs.
// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.


// Interface definitions.
// --- mojo_Clipboard ---
#define mojo_Clipboard__ServiceName ((const char*)"mojo::Clipboard")
#define mojo_Clipboard__CurrentVersion ((uint32_t)0)

// Enums
typedef uint32_t mojo_Clipboard_Type;
enum mojo_Clipboard_Type_Enum {
  mojo_Clipboard_Type_COPY_PASTE = 0,
  mojo_Clipboard_Type_SELECTION = 1,
  mojo_Clipboard_Type_DRAG = 2,
  
  mojo_Clipboard_Type__UNKNOWN__ = 0xFFFFFFFF,
};

// Constants
const char* mojo_Clipboard_MIME_TYPE_TEXT;
const char* mojo_Clipboard_MIME_TYPE_HTML;
const char* mojo_Clipboard_MIME_TYPE_URL;


// Message: WriteClipboardData

#define mojo_Clipboard_WriteClipboardData__Ordinal \
    ((uint32_t)3)
#define mojo_Clipboard_WriteClipboardData__MinVersion \
    ((uint32_t)0)

struct mojo_Clipboard_WriteClipboardData_Request;
// -- mojo_Clipboard_WriteClipboardData_Request --
// Enums
// Constants
// Struct definition
struct mojo_Clipboard_WriteClipboardData_Request {
  struct MojomStructHeader header_;
  mojo_Clipboard_Type clipboard_type;  // offset,bit = 0,0
  uint8_t pad0_[4];  // padding
  union MojomMapPtr data;  // offset,bit = 8,0
  
};

struct mojo_Clipboard_WriteClipboardData_Request* mojo_Clipboard_WriteClipboardData_Request_New(struct MojomBuffer* in_buffer);

void mojo_Clipboard_WriteClipboardData_Request_Init(
  struct mojo_Clipboard_WriteClipboardData_Request* in_data);

void mojo_Clipboard_WriteClipboardData_Request_CloseAllHandles(
  struct mojo_Clipboard_WriteClipboardData_Request* in_data);

struct mojo_Clipboard_WriteClipboardData_Request* mojo_Clipboard_WriteClipboardData_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Clipboard_WriteClipboardData_Request* in_data);

size_t mojo_Clipboard_WriteClipboardData_Request_ComputeSerializedSize(
  const struct mojo_Clipboard_WriteClipboardData_Request* in_data);

MojomValidationResult mojo_Clipboard_WriteClipboardData_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Clipboard_WriteClipboardData_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Clipboard_WriteClipboardData_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: GetSequenceNumber

#define mojo_Clipboard_GetSequenceNumber__Ordinal \
    ((uint32_t)0)
#define mojo_Clipboard_GetSequenceNumber__MinVersion \
    ((uint32_t)0)

struct mojo_Clipboard_GetSequenceNumber_Request;
// -- mojo_Clipboard_GetSequenceNumber_Request --
// Enums
// Constants
// Struct definition
struct mojo_Clipboard_GetSequenceNumber_Request {
  struct MojomStructHeader header_;
  mojo_Clipboard_Type clipboard_type;  // offset,bit = 0,0
  
};

struct mojo_Clipboard_GetSequenceNumber_Request* mojo_Clipboard_GetSequenceNumber_Request_New(struct MojomBuffer* in_buffer);

void mojo_Clipboard_GetSequenceNumber_Request_Init(
  struct mojo_Clipboard_GetSequenceNumber_Request* in_data);

void mojo_Clipboard_GetSequenceNumber_Request_CloseAllHandles(
  struct mojo_Clipboard_GetSequenceNumber_Request* in_data);

struct mojo_Clipboard_GetSequenceNumber_Request* mojo_Clipboard_GetSequenceNumber_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Clipboard_GetSequenceNumber_Request* in_data);

size_t mojo_Clipboard_GetSequenceNumber_Request_ComputeSerializedSize(
  const struct mojo_Clipboard_GetSequenceNumber_Request* in_data);

MojomValidationResult mojo_Clipboard_GetSequenceNumber_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Clipboard_GetSequenceNumber_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Clipboard_GetSequenceNumber_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_Clipboard_GetSequenceNumber_Response;
// -- mojo_Clipboard_GetSequenceNumber_Response --
// Enums
// Constants
// Struct definition
struct mojo_Clipboard_GetSequenceNumber_Response {
  struct MojomStructHeader header_;
  uint64_t sequence;  // offset,bit = 0,0
  
};

struct mojo_Clipboard_GetSequenceNumber_Response* mojo_Clipboard_GetSequenceNumber_Response_New(struct MojomBuffer* in_buffer);

void mojo_Clipboard_GetSequenceNumber_Response_Init(
  struct mojo_Clipboard_GetSequenceNumber_Response* in_data);

void mojo_Clipboard_GetSequenceNumber_Response_CloseAllHandles(
  struct mojo_Clipboard_GetSequenceNumber_Response* in_data);

struct mojo_Clipboard_GetSequenceNumber_Response* mojo_Clipboard_GetSequenceNumber_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Clipboard_GetSequenceNumber_Response* in_data);

size_t mojo_Clipboard_GetSequenceNumber_Response_ComputeSerializedSize(
  const struct mojo_Clipboard_GetSequenceNumber_Response* in_data);

MojomValidationResult mojo_Clipboard_GetSequenceNumber_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Clipboard_GetSequenceNumber_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Clipboard_GetSequenceNumber_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: GetAvailableMimeTypes

#define mojo_Clipboard_GetAvailableMimeTypes__Ordinal \
    ((uint32_t)1)
#define mojo_Clipboard_GetAvailableMimeTypes__MinVersion \
    ((uint32_t)0)

struct mojo_Clipboard_GetAvailableMimeTypes_Request;
// -- mojo_Clipboard_GetAvailableMimeTypes_Request --
// Enums
// Constants
// Struct definition
struct mojo_Clipboard_GetAvailableMimeTypes_Request {
  struct MojomStructHeader header_;
  mojo_Clipboard_Type clipboard_types;  // offset,bit = 0,0
  
};

struct mojo_Clipboard_GetAvailableMimeTypes_Request* mojo_Clipboard_GetAvailableMimeTypes_Request_New(struct MojomBuffer* in_buffer);

void mojo_Clipboard_GetAvailableMimeTypes_Request_Init(
  struct mojo_Clipboard_GetAvailableMimeTypes_Request* in_data);

void mojo_Clipboard_GetAvailableMimeTypes_Request_CloseAllHandles(
  struct mojo_Clipboard_GetAvailableMimeTypes_Request* in_data);

struct mojo_Clipboard_GetAvailableMimeTypes_Request* mojo_Clipboard_GetAvailableMimeTypes_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Clipboard_GetAvailableMimeTypes_Request* in_data);

size_t mojo_Clipboard_GetAvailableMimeTypes_Request_ComputeSerializedSize(
  const struct mojo_Clipboard_GetAvailableMimeTypes_Request* in_data);

MojomValidationResult mojo_Clipboard_GetAvailableMimeTypes_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Clipboard_GetAvailableMimeTypes_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Clipboard_GetAvailableMimeTypes_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_Clipboard_GetAvailableMimeTypes_Response;
// -- mojo_Clipboard_GetAvailableMimeTypes_Response --
// Enums
// Constants
// Struct definition
struct mojo_Clipboard_GetAvailableMimeTypes_Response {
  struct MojomStructHeader header_;
  union MojomArrayPtr types;  // offset,bit = 0,0
  
};

struct mojo_Clipboard_GetAvailableMimeTypes_Response* mojo_Clipboard_GetAvailableMimeTypes_Response_New(struct MojomBuffer* in_buffer);

void mojo_Clipboard_GetAvailableMimeTypes_Response_Init(
  struct mojo_Clipboard_GetAvailableMimeTypes_Response* in_data);

void mojo_Clipboard_GetAvailableMimeTypes_Response_CloseAllHandles(
  struct mojo_Clipboard_GetAvailableMimeTypes_Response* in_data);

struct mojo_Clipboard_GetAvailableMimeTypes_Response* mojo_Clipboard_GetAvailableMimeTypes_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Clipboard_GetAvailableMimeTypes_Response* in_data);

size_t mojo_Clipboard_GetAvailableMimeTypes_Response_ComputeSerializedSize(
  const struct mojo_Clipboard_GetAvailableMimeTypes_Response* in_data);

MojomValidationResult mojo_Clipboard_GetAvailableMimeTypes_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Clipboard_GetAvailableMimeTypes_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Clipboard_GetAvailableMimeTypes_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: ReadMimeType

#define mojo_Clipboard_ReadMimeType__Ordinal \
    ((uint32_t)2)
#define mojo_Clipboard_ReadMimeType__MinVersion \
    ((uint32_t)0)

struct mojo_Clipboard_ReadMimeType_Request;
// -- mojo_Clipboard_ReadMimeType_Request --
// Enums
// Constants
// Struct definition
struct mojo_Clipboard_ReadMimeType_Request {
  struct MojomStructHeader header_;
  mojo_Clipboard_Type clipboard_type;  // offset,bit = 0,0
  uint8_t pad0_[4];  // padding
  union MojomStringPtr mime_type;  // offset,bit = 8,0
  
};

struct mojo_Clipboard_ReadMimeType_Request* mojo_Clipboard_ReadMimeType_Request_New(struct MojomBuffer* in_buffer);

void mojo_Clipboard_ReadMimeType_Request_Init(
  struct mojo_Clipboard_ReadMimeType_Request* in_data);

void mojo_Clipboard_ReadMimeType_Request_CloseAllHandles(
  struct mojo_Clipboard_ReadMimeType_Request* in_data);

struct mojo_Clipboard_ReadMimeType_Request* mojo_Clipboard_ReadMimeType_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Clipboard_ReadMimeType_Request* in_data);

size_t mojo_Clipboard_ReadMimeType_Request_ComputeSerializedSize(
  const struct mojo_Clipboard_ReadMimeType_Request* in_data);

MojomValidationResult mojo_Clipboard_ReadMimeType_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Clipboard_ReadMimeType_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Clipboard_ReadMimeType_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_Clipboard_ReadMimeType_Response;
// -- mojo_Clipboard_ReadMimeType_Response --
// Enums
// Constants
// Struct definition
struct mojo_Clipboard_ReadMimeType_Response {
  struct MojomStructHeader header_;
  union MojomArrayPtr data;  // offset,bit = 0,0
  
};

struct mojo_Clipboard_ReadMimeType_Response* mojo_Clipboard_ReadMimeType_Response_New(struct MojomBuffer* in_buffer);

void mojo_Clipboard_ReadMimeType_Response_Init(
  struct mojo_Clipboard_ReadMimeType_Response* in_data);

void mojo_Clipboard_ReadMimeType_Response_CloseAllHandles(
  struct mojo_Clipboard_ReadMimeType_Response* in_data);

struct mojo_Clipboard_ReadMimeType_Response* mojo_Clipboard_ReadMimeType_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Clipboard_ReadMimeType_Response* in_data);

size_t mojo_Clipboard_ReadMimeType_Response_ComputeSerializedSize(
  const struct mojo_Clipboard_ReadMimeType_Response* in_data);

MojomValidationResult mojo_Clipboard_ReadMimeType_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Clipboard_ReadMimeType_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Clipboard_ReadMimeType_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry mojo_Clipboard_GetSequenceNumber_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Clipboard_GetSequenceNumber_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Clipboard_GetAvailableMimeTypes_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Clipboard_GetAvailableMimeTypes_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Clipboard_ReadMimeType_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Clipboard_ReadMimeType_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Clipboard_WriteClipboardData_Request__PointerTable[];


#endif  // MOJO_SERVICES_CLIPBOARD_INTERFACES_CLIPBOARD_MOJOM_C_H_