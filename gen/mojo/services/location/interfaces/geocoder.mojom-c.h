// This file was auto-generated by the C bindings generator.

#ifndef MOJO_SERVICES_LOCATION_INTERFACES_GEOCODER_MOJOM_C_H_
#define MOJO_SERVICES_LOCATION_INTERFACES_GEOCODER_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.
#include "mojo/services/location/interfaces/location.mojom-c.h"


// Forward declarations for structs.
struct mojo_LocationType;
union mojo_LocationTypePtr {
  struct mojo_LocationType* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_LocationTypePtr) == 8,
              "union mojo_LocationTypePtr must be 8 bytes");

struct mojo_Bounds;
union mojo_BoundsPtr {
  struct mojo_Bounds* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_BoundsPtr) == 8,
              "union mojo_BoundsPtr must be 8 bytes");

struct mojo_ComponentRestrictions;
union mojo_ComponentRestrictionsPtr {
  struct mojo_ComponentRestrictions* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_ComponentRestrictionsPtr) == 8,
              "union mojo_ComponentRestrictionsPtr must be 8 bytes");

struct mojo_Options;
union mojo_OptionsPtr {
  struct mojo_Options* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_OptionsPtr) == 8,
              "union mojo_OptionsPtr must be 8 bytes");

struct mojo_Geometry;
union mojo_GeometryPtr {
  struct mojo_Geometry* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_GeometryPtr) == 8,
              "union mojo_GeometryPtr must be 8 bytes");

struct mojo_Result;
union mojo_ResultPtr {
  struct mojo_Result* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_ResultPtr) == 8,
              "union mojo_ResultPtr must be 8 bytes");

struct mojo_Status;
union mojo_StatusPtr {
  struct mojo_Status* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_StatusPtr) == 8,
              "union mojo_StatusPtr must be 8 bytes");

// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.
// -- mojo_LocationType --
// Enums
// Constants
const char* mojo_LocationType_ROOFTOP;
const char* mojo_LocationType_RANGE_INTERPOLATED;
const char* mojo_LocationType_GEOMETRIC_CENTER;
const char* mojo_LocationType_APPROXIMATE;
// Struct definition
struct mojo_LocationType {
  struct MojomStructHeader header_;
  
};

struct mojo_LocationType* mojo_LocationType_New(struct MojomBuffer* in_buffer);

void mojo_LocationType_Init(
  struct mojo_LocationType* in_data);

void mojo_LocationType_CloseAllHandles(
  struct mojo_LocationType* in_data);

struct mojo_LocationType* mojo_LocationType_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_LocationType* in_data);

size_t mojo_LocationType_ComputeSerializedSize(
  const struct mojo_LocationType* in_data);

MojomValidationResult mojo_LocationType_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_LocationType_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_LocationType_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_Bounds --
// Enums
// Constants
// Struct definition
struct mojo_Bounds {
  struct MojomStructHeader header_;
  union mojo_LocationPtr northeast;  // offset,bit = 0,0
  union mojo_LocationPtr southwest;  // offset,bit = 8,0
  
};

struct mojo_Bounds* mojo_Bounds_New(struct MojomBuffer* in_buffer);

void mojo_Bounds_Init(
  struct mojo_Bounds* in_data);

void mojo_Bounds_CloseAllHandles(
  struct mojo_Bounds* in_data);

struct mojo_Bounds* mojo_Bounds_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Bounds* in_data);

size_t mojo_Bounds_ComputeSerializedSize(
  const struct mojo_Bounds* in_data);

MojomValidationResult mojo_Bounds_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Bounds_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Bounds_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_ComponentRestrictions --
// Enums
// Constants
// Struct definition
struct mojo_ComponentRestrictions {
  struct MojomStructHeader header_;
  union MojomStringPtr administrative_area;  // offset,bit = 0,0
  union MojomStringPtr country;  // offset,bit = 8,0
  union MojomStringPtr locality;  // offset,bit = 16,0
  union MojomStringPtr postal_code;  // offset,bit = 24,0
  union MojomStringPtr route;  // offset,bit = 32,0
  
};

struct mojo_ComponentRestrictions* mojo_ComponentRestrictions_New(struct MojomBuffer* in_buffer);

void mojo_ComponentRestrictions_Init(
  struct mojo_ComponentRestrictions* in_data);

void mojo_ComponentRestrictions_CloseAllHandles(
  struct mojo_ComponentRestrictions* in_data);

struct mojo_ComponentRestrictions* mojo_ComponentRestrictions_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_ComponentRestrictions* in_data);

size_t mojo_ComponentRestrictions_ComputeSerializedSize(
  const struct mojo_ComponentRestrictions* in_data);

MojomValidationResult mojo_ComponentRestrictions_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_ComponentRestrictions_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_ComponentRestrictions_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_Options --
// Enums
// Constants
// Struct definition
struct mojo_Options {
  struct MojomStructHeader header_;
  union mojo_ComponentRestrictionsPtr restrictions;  // offset,bit = 0,0
  union mojo_LocationPtr location;  // offset,bit = 8,0
  union MojomStringPtr region;  // offset,bit = 16,0
  
};

struct mojo_Options* mojo_Options_New(struct MojomBuffer* in_buffer);

void mojo_Options_Init(
  struct mojo_Options* in_data);

void mojo_Options_CloseAllHandles(
  struct mojo_Options* in_data);

struct mojo_Options* mojo_Options_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Options* in_data);

size_t mojo_Options_ComputeSerializedSize(
  const struct mojo_Options* in_data);

MojomValidationResult mojo_Options_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Options_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Options_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_Geometry --
// Enums
// Constants
// Struct definition
struct mojo_Geometry {
  struct MojomStructHeader header_;
  union mojo_LocationPtr location;  // offset,bit = 0,0
  union mojo_LocationTypePtr location_type;  // offset,bit = 8,0
  union mojo_BoundsPtr viewport;  // offset,bit = 16,0
  union mojo_BoundsPtr bounds;  // offset,bit = 24,0
  
};

struct mojo_Geometry* mojo_Geometry_New(struct MojomBuffer* in_buffer);

void mojo_Geometry_Init(
  struct mojo_Geometry* in_data);

void mojo_Geometry_CloseAllHandles(
  struct mojo_Geometry* in_data);

struct mojo_Geometry* mojo_Geometry_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Geometry* in_data);

size_t mojo_Geometry_ComputeSerializedSize(
  const struct mojo_Geometry* in_data);

MojomValidationResult mojo_Geometry_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Geometry_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Geometry_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_Result --
// Enums
// Constants
// Struct definition
struct mojo_Result {
  struct MojomStructHeader header_;
  bool partial_match : 1;  // offset,bit = 0,0
  uint8_t pad0_[7];  // padding
  union mojo_GeometryPtr geometry;  // offset,bit = 8,0
  union MojomStringPtr formatted_address;  // offset,bit = 16,0
  union MojomArrayPtr types;  // offset,bit = 24,0
  
};

struct mojo_Result* mojo_Result_New(struct MojomBuffer* in_buffer);

void mojo_Result_Init(
  struct mojo_Result* in_data);

void mojo_Result_CloseAllHandles(
  struct mojo_Result* in_data);

struct mojo_Result* mojo_Result_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Result* in_data);

size_t mojo_Result_ComputeSerializedSize(
  const struct mojo_Result* in_data);

MojomValidationResult mojo_Result_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Result_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Result_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_Status --
// Enums
// Constants
const char* mojo_Status_OK;
const char* mojo_Status_ZERO_RESULTS;
const char* mojo_Status_OVER_QUERY_LIMIT;
const char* mojo_Status_REQUEST_DENIED;
const char* mojo_Status_INVALID_REQUEST;
// Struct definition
struct mojo_Status {
  struct MojomStructHeader header_;
  
};

struct mojo_Status* mojo_Status_New(struct MojomBuffer* in_buffer);

void mojo_Status_Init(
  struct mojo_Status* in_data);

void mojo_Status_CloseAllHandles(
  struct mojo_Status* in_data);

struct mojo_Status* mojo_Status_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Status* in_data);

size_t mojo_Status_ComputeSerializedSize(
  const struct mojo_Status* in_data);

MojomValidationResult mojo_Status_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Status_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Status_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);




// Interface definitions.
// --- mojo_Geocoder ---
#define mojo_Geocoder__ServiceName ((const char*)"")
#define mojo_Geocoder__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: AddressToLocation

#define mojo_Geocoder_AddressToLocation__Ordinal \
    ((uint32_t)0)
#define mojo_Geocoder_AddressToLocation__MinVersion \
    ((uint32_t)0)

struct mojo_Geocoder_AddressToLocation_Request;
// -- mojo_Geocoder_AddressToLocation_Request --
// Enums
// Constants
// Struct definition
struct mojo_Geocoder_AddressToLocation_Request {
  struct MojomStructHeader header_;
  union MojomStringPtr address;  // offset,bit = 0,0
  union mojo_OptionsPtr options;  // offset,bit = 8,0
  
};

struct mojo_Geocoder_AddressToLocation_Request* mojo_Geocoder_AddressToLocation_Request_New(struct MojomBuffer* in_buffer);

void mojo_Geocoder_AddressToLocation_Request_Init(
  struct mojo_Geocoder_AddressToLocation_Request* in_data);

void mojo_Geocoder_AddressToLocation_Request_CloseAllHandles(
  struct mojo_Geocoder_AddressToLocation_Request* in_data);

struct mojo_Geocoder_AddressToLocation_Request* mojo_Geocoder_AddressToLocation_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Geocoder_AddressToLocation_Request* in_data);

size_t mojo_Geocoder_AddressToLocation_Request_ComputeSerializedSize(
  const struct mojo_Geocoder_AddressToLocation_Request* in_data);

MojomValidationResult mojo_Geocoder_AddressToLocation_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Geocoder_AddressToLocation_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Geocoder_AddressToLocation_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_Geocoder_AddressToLocation_Response;
// -- mojo_Geocoder_AddressToLocation_Response --
// Enums
// Constants
// Struct definition
struct mojo_Geocoder_AddressToLocation_Response {
  struct MojomStructHeader header_;
  union MojomStringPtr status;  // offset,bit = 0,0
  union MojomArrayPtr results;  // offset,bit = 8,0
  
};

struct mojo_Geocoder_AddressToLocation_Response* mojo_Geocoder_AddressToLocation_Response_New(struct MojomBuffer* in_buffer);

void mojo_Geocoder_AddressToLocation_Response_Init(
  struct mojo_Geocoder_AddressToLocation_Response* in_data);

void mojo_Geocoder_AddressToLocation_Response_CloseAllHandles(
  struct mojo_Geocoder_AddressToLocation_Response* in_data);

struct mojo_Geocoder_AddressToLocation_Response* mojo_Geocoder_AddressToLocation_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Geocoder_AddressToLocation_Response* in_data);

size_t mojo_Geocoder_AddressToLocation_Response_ComputeSerializedSize(
  const struct mojo_Geocoder_AddressToLocation_Response* in_data);

MojomValidationResult mojo_Geocoder_AddressToLocation_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Geocoder_AddressToLocation_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Geocoder_AddressToLocation_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: LocationToAddress

#define mojo_Geocoder_LocationToAddress__Ordinal \
    ((uint32_t)1)
#define mojo_Geocoder_LocationToAddress__MinVersion \
    ((uint32_t)0)

struct mojo_Geocoder_LocationToAddress_Request;
// -- mojo_Geocoder_LocationToAddress_Request --
// Enums
// Constants
// Struct definition
struct mojo_Geocoder_LocationToAddress_Request {
  struct MojomStructHeader header_;
  union mojo_LocationPtr location;  // offset,bit = 0,0
  union mojo_OptionsPtr options;  // offset,bit = 8,0
  
};

struct mojo_Geocoder_LocationToAddress_Request* mojo_Geocoder_LocationToAddress_Request_New(struct MojomBuffer* in_buffer);

void mojo_Geocoder_LocationToAddress_Request_Init(
  struct mojo_Geocoder_LocationToAddress_Request* in_data);

void mojo_Geocoder_LocationToAddress_Request_CloseAllHandles(
  struct mojo_Geocoder_LocationToAddress_Request* in_data);

struct mojo_Geocoder_LocationToAddress_Request* mojo_Geocoder_LocationToAddress_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Geocoder_LocationToAddress_Request* in_data);

size_t mojo_Geocoder_LocationToAddress_Request_ComputeSerializedSize(
  const struct mojo_Geocoder_LocationToAddress_Request* in_data);

MojomValidationResult mojo_Geocoder_LocationToAddress_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Geocoder_LocationToAddress_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Geocoder_LocationToAddress_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_Geocoder_LocationToAddress_Response;
// -- mojo_Geocoder_LocationToAddress_Response --
// Enums
// Constants
// Struct definition
struct mojo_Geocoder_LocationToAddress_Response {
  struct MojomStructHeader header_;
  union MojomStringPtr status;  // offset,bit = 0,0
  union MojomArrayPtr results;  // offset,bit = 8,0
  
};

struct mojo_Geocoder_LocationToAddress_Response* mojo_Geocoder_LocationToAddress_Response_New(struct MojomBuffer* in_buffer);

void mojo_Geocoder_LocationToAddress_Response_Init(
  struct mojo_Geocoder_LocationToAddress_Response* in_data);

void mojo_Geocoder_LocationToAddress_Response_CloseAllHandles(
  struct mojo_Geocoder_LocationToAddress_Response* in_data);

struct mojo_Geocoder_LocationToAddress_Response* mojo_Geocoder_LocationToAddress_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_Geocoder_LocationToAddress_Response* in_data);

size_t mojo_Geocoder_LocationToAddress_Response_ComputeSerializedSize(
  const struct mojo_Geocoder_LocationToAddress_Response* in_data);

MojomValidationResult mojo_Geocoder_LocationToAddress_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_Geocoder_LocationToAddress_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_Geocoder_LocationToAddress_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry mojo_LocationType__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Bounds__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_ComponentRestrictions__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Options__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Geometry__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Result__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Status__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Geocoder_AddressToLocation_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Geocoder_AddressToLocation_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Geocoder_LocationToAddress_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_Geocoder_LocationToAddress_Response__PointerTable[];


#endif  // MOJO_SERVICES_LOCATION_INTERFACES_GEOCODER_MOJOM_C_H_