// NOTE: This file was generated by the Mojo bindings generator.
#ifndef MOJO_SERVICES_TERMINAL_INTERFACES_TERMINAL_MOJOM_SYNC_H_
#define MOJO_SERVICES_TERMINAL_INTERFACES_TERMINAL_MOJOM_SYNC_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/array.h"
#include "mojo/public/cpp/bindings/callback.h"
#include "mojo/public/cpp/bindings/interface_handle.h"
#include "mojo/public/cpp/bindings/interface_request.h"
#include "mojo/public/cpp/bindings/map.h"
#include "mojo/public/cpp/bindings/message_validator.h"
#include "mojo/public/cpp/bindings/string.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/bindings/lib/synchronous_connector.h"
#include "mojo/services/terminal/interfaces/terminal.mojom-internal.h"
#include "mojo/services/terminal/interfaces/terminal.mojom-common.h"
#include "mojo/services/files/interfaces/file.mojom.h"
#include "mojo/services/files/interfaces/types.mojom.h"
#include "mojo/services/terminal/interfaces/terminal_client.mojom.h"


namespace mojo {
namespace terminal {

// --- Synchronous interface declaration ---

class Terminal_SynchronousProxy;
class Terminal_Synchronous
  : public internal::Terminal_Base {
 public:
  virtual ~Terminal_Synchronous() override {}
  
  using Proxy_ = Terminal_SynchronousProxy;
  virtual bool Connect(
      mojo::InterfaceRequest<mojo::files::File> in_terminal_file, bool in_force, mojo::files::Error* out_error)= 0;
  virtual bool ConnectToClient(
      mojo::InterfaceHandle<mojo::terminal::TerminalClient> in_terminal_client, bool in_force, mojo::files::Error* out_error)= 0;
  virtual bool GetSize(
      mojo::files::Error* out_error, uint32_t* out_rows, uint32_t* out_columns)= 0;
  virtual bool SetSize(
      uint32_t in_rows, uint32_t in_columns, bool in_reset, mojo::files::Error* out_error, uint32_t* out_rows, uint32_t* out_columns)= 0;
};

class Terminal_SynchronousProxy
    : public Terminal_Synchronous {
 public:
  explicit Terminal_SynchronousProxy(
      mojo::internal::SynchronousConnector* connector,
      mojo::internal::MessageValidatorList&& validators);
  bool Connect(mojo::InterfaceRequest<mojo::files::File> in_terminal_file, bool in_force, mojo::files::Error* out_error) override;
  bool ConnectToClient(mojo::InterfaceHandle<mojo::terminal::TerminalClient> in_terminal_client, bool in_force, mojo::files::Error* out_error) override;
  bool GetSize(mojo::files::Error* out_error, uint32_t* out_rows, uint32_t* out_columns) override;
  bool SetSize(uint32_t in_rows, uint32_t in_columns, bool in_reset, mojo::files::Error* out_error, uint32_t* out_rows, uint32_t* out_columns) override;

 private:
  // |connector_| is passed to us, and is not owned by us.
  mojo::internal::SynchronousConnector* const connector_;
  mojo::internal::MessageValidatorList const validators_;
};

}  // namespace terminal
}  // namespace mojo

#endif  // MOJO_SERVICES_TERMINAL_INTERFACES_TERMINAL_MOJOM_SYNC_H_
