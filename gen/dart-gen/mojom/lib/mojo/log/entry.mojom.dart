// WARNING: DO NOT EDIT. This file was generated by a program.
// See $MOJO_SDK/tools/bindings/mojom_bindings_generator.py.

library entry_mojom;
import 'package:mojo/bindings.dart' as bindings;

const int kLogLevelVerbose = -1;
const int kLogLevelInfo = 0;
const int kLogLevelWarning = 1;
const int kLogLevelError = 2;
const int kLogLevelFatal = 3;



class Entry extends bindings.Struct {
  static const List<bindings.StructDataHeader> kVersions = const [
    const bindings.StructDataHeader(40, 0)
  ];
  int timestamp = 0;
  int logLevel = 0;
  int sourceLine = 0;
  String message = null;
  String sourceFile = null;

  Entry() : super(kVersions.last.size);

  Entry.init(
    int this.timestamp, 
    int this.logLevel, 
    int this.sourceLine, 
    String this.message, 
    String this.sourceFile
  ) : super(kVersions.last.size);

  static Entry deserialize(bindings.Message message) =>
      bindings.Struct.deserialize(decode, message);

  static Entry decode(bindings.Decoder decoder0) {
    if (decoder0 == null) {
      return null;
    }
    Entry result = new Entry();

    var mainDataHeader = bindings.Struct.checkVersion(decoder0, kVersions);
    if (mainDataHeader.version >= 0) {
      
      result.timestamp = decoder0.decodeInt64(8);
    }
    if (mainDataHeader.version >= 0) {
      
      result.logLevel = decoder0.decodeInt32(16);
    }
    if (mainDataHeader.version >= 0) {
      
      result.sourceLine = decoder0.decodeUint32(20);
    }
    if (mainDataHeader.version >= 0) {
      
      result.message = decoder0.decodeString(24, true);
    }
    if (mainDataHeader.version >= 0) {
      
      result.sourceFile = decoder0.decodeString(32, true);
    }
    return result;
  }

  void encode(bindings.Encoder encoder) {
    var encoder0 = encoder.getStructEncoderAtOffset(kVersions.last);
    const String structName = "Entry";
    String fieldName;
    try {
      fieldName = "timestamp";
      encoder0.encodeInt64(timestamp, 8);
      fieldName = "logLevel";
      encoder0.encodeInt32(logLevel, 16);
      fieldName = "sourceLine";
      encoder0.encodeUint32(sourceLine, 20);
      fieldName = "message";
      encoder0.encodeString(message, 24, true);
      fieldName = "sourceFile";
      encoder0.encodeString(sourceFile, 32, true);
    } on bindings.MojoCodecError catch(e) {
      bindings.Struct.fixErrorMessage(e, fieldName, structName);
      rethrow;
    }
  }

  String toString() {
    return "Entry("
           "timestamp: $timestamp" ", "
           "logLevel: $logLevel" ", "
           "sourceLine: $sourceLine" ", "
           "message: $message" ", "
           "sourceFile: $sourceFile" ")";
  }

  Map toJson() {
    Map map = new Map();
    map["timestamp"] = timestamp;
    map["logLevel"] = logLevel;
    map["sourceLine"] = sourceLine;
    map["message"] = message;
    map["sourceFile"] = sourceFile;
    return map;
  }
}



