// This file was auto-generated by the C bindings generator.

#ifndef MOJO_SERVICES_NETWORK_INTERFACES_WEB_SOCKET_MOJOM_C_H_
#define MOJO_SERVICES_NETWORK_INTERFACES_WEB_SOCKET_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.
#include "mojo/public/interfaces/network/network_error.mojom-c.h"


// Forward declarations for structs.
// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.


// Interface definitions.
// --- mojo_WebSocket ---
#define mojo_WebSocket__ServiceName ((const char*)"")
#define mojo_WebSocket__CurrentVersion ((uint32_t)0)

// Enums
typedef uint32_t mojo_WebSocket_MessageType;
enum mojo_WebSocket_MessageType_Enum {
  mojo_WebSocket_MessageType_CONTINUATION = 0,
  mojo_WebSocket_MessageType_TEXT = 1,
  mojo_WebSocket_MessageType_BINARY = 2,
  
  mojo_WebSocket_MessageType__UNKNOWN__ = 0xFFFFFFFF,
};

// Constants
const uint16_t mojo_WebSocket_kAbnormalCloseCode;


// Message: Close

#define mojo_WebSocket_Close__Ordinal \
    ((uint32_t)3)
#define mojo_WebSocket_Close__MinVersion \
    ((uint32_t)0)

struct mojo_WebSocket_Close_Request;
// -- mojo_WebSocket_Close_Request --
// Enums
// Constants
// Struct definition
struct mojo_WebSocket_Close_Request {
  struct MojomStructHeader header_;
  uint16_t code;  // offset,bit = 0,0
  uint8_t pad0_[6];  // padding
  union MojomStringPtr reason;  // offset,bit = 8,0
  
};

struct mojo_WebSocket_Close_Request* mojo_WebSocket_Close_Request_New(struct MojomBuffer* in_buffer);

void mojo_WebSocket_Close_Request_Init(
  struct mojo_WebSocket_Close_Request* in_data);

void mojo_WebSocket_Close_Request_CloseAllHandles(
  struct mojo_WebSocket_Close_Request* in_data);

struct mojo_WebSocket_Close_Request* mojo_WebSocket_Close_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_WebSocket_Close_Request* in_data);

size_t mojo_WebSocket_Close_Request_ComputeSerializedSize(
  const struct mojo_WebSocket_Close_Request* in_data);

MojomValidationResult mojo_WebSocket_Close_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_WebSocket_Close_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_WebSocket_Close_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Connect

#define mojo_WebSocket_Connect__Ordinal \
    ((uint32_t)0)
#define mojo_WebSocket_Connect__MinVersion \
    ((uint32_t)0)

struct mojo_WebSocket_Connect_Request;
// -- mojo_WebSocket_Connect_Request --
// Enums
// Constants
// Struct definition
struct mojo_WebSocket_Connect_Request {
  struct MojomStructHeader header_;
  union MojomStringPtr url;  // offset,bit = 0,0
  union MojomArrayPtr protocols;  // offset,bit = 8,0
  union MojomStringPtr origin;  // offset,bit = 16,0
  MojoHandle send_stream;  // offset,bit = 24,0
  struct MojomInterfaceData client;  // offset,bit = 28,0
  uint8_t pad4_[4];  // padding
  
};

struct mojo_WebSocket_Connect_Request* mojo_WebSocket_Connect_Request_New(struct MojomBuffer* in_buffer);

void mojo_WebSocket_Connect_Request_Init(
  struct mojo_WebSocket_Connect_Request* in_data);

void mojo_WebSocket_Connect_Request_CloseAllHandles(
  struct mojo_WebSocket_Connect_Request* in_data);

struct mojo_WebSocket_Connect_Request* mojo_WebSocket_Connect_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_WebSocket_Connect_Request* in_data);

size_t mojo_WebSocket_Connect_Request_ComputeSerializedSize(
  const struct mojo_WebSocket_Connect_Request* in_data);

MojomValidationResult mojo_WebSocket_Connect_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_WebSocket_Connect_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_WebSocket_Connect_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Send

#define mojo_WebSocket_Send__Ordinal \
    ((uint32_t)1)
#define mojo_WebSocket_Send__MinVersion \
    ((uint32_t)0)

struct mojo_WebSocket_Send_Request;
// -- mojo_WebSocket_Send_Request --
// Enums
// Constants
// Struct definition
struct mojo_WebSocket_Send_Request {
  struct MojomStructHeader header_;
  bool fin : 1;  // offset,bit = 0,0
  uint8_t pad0_[3];  // padding
  mojo_WebSocket_MessageType type;  // offset,bit = 4,0
  uint32_t num_bytes;  // offset,bit = 8,0
  
};

struct mojo_WebSocket_Send_Request* mojo_WebSocket_Send_Request_New(struct MojomBuffer* in_buffer);

void mojo_WebSocket_Send_Request_Init(
  struct mojo_WebSocket_Send_Request* in_data);

void mojo_WebSocket_Send_Request_CloseAllHandles(
  struct mojo_WebSocket_Send_Request* in_data);

struct mojo_WebSocket_Send_Request* mojo_WebSocket_Send_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_WebSocket_Send_Request* in_data);

size_t mojo_WebSocket_Send_Request_ComputeSerializedSize(
  const struct mojo_WebSocket_Send_Request* in_data);

MojomValidationResult mojo_WebSocket_Send_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_WebSocket_Send_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_WebSocket_Send_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: FlowControl

#define mojo_WebSocket_FlowControl__Ordinal \
    ((uint32_t)2)
#define mojo_WebSocket_FlowControl__MinVersion \
    ((uint32_t)0)

struct mojo_WebSocket_FlowControl_Request;
// -- mojo_WebSocket_FlowControl_Request --
// Enums
// Constants
// Struct definition
struct mojo_WebSocket_FlowControl_Request {
  struct MojomStructHeader header_;
  int64_t quota;  // offset,bit = 0,0
  
};

struct mojo_WebSocket_FlowControl_Request* mojo_WebSocket_FlowControl_Request_New(struct MojomBuffer* in_buffer);

void mojo_WebSocket_FlowControl_Request_Init(
  struct mojo_WebSocket_FlowControl_Request* in_data);

void mojo_WebSocket_FlowControl_Request_CloseAllHandles(
  struct mojo_WebSocket_FlowControl_Request* in_data);

struct mojo_WebSocket_FlowControl_Request* mojo_WebSocket_FlowControl_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_WebSocket_FlowControl_Request* in_data);

size_t mojo_WebSocket_FlowControl_Request_ComputeSerializedSize(
  const struct mojo_WebSocket_FlowControl_Request* in_data);

MojomValidationResult mojo_WebSocket_FlowControl_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_WebSocket_FlowControl_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_WebSocket_FlowControl_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);





// --- mojo_WebSocketClient ---
#define mojo_WebSocketClient__ServiceName ((const char*)"")
#define mojo_WebSocketClient__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: DidConnect

#define mojo_WebSocketClient_DidConnect__Ordinal \
    ((uint32_t)0)
#define mojo_WebSocketClient_DidConnect__MinVersion \
    ((uint32_t)0)

struct mojo_WebSocketClient_DidConnect_Request;
// -- mojo_WebSocketClient_DidConnect_Request --
// Enums
// Constants
// Struct definition
struct mojo_WebSocketClient_DidConnect_Request {
  struct MojomStructHeader header_;
  union MojomStringPtr selected_subprotocol;  // offset,bit = 0,0
  union MojomStringPtr extensions;  // offset,bit = 8,0
  MojoHandle receive_stream;  // offset,bit = 16,0
  
};

struct mojo_WebSocketClient_DidConnect_Request* mojo_WebSocketClient_DidConnect_Request_New(struct MojomBuffer* in_buffer);

void mojo_WebSocketClient_DidConnect_Request_Init(
  struct mojo_WebSocketClient_DidConnect_Request* in_data);

void mojo_WebSocketClient_DidConnect_Request_CloseAllHandles(
  struct mojo_WebSocketClient_DidConnect_Request* in_data);

struct mojo_WebSocketClient_DidConnect_Request* mojo_WebSocketClient_DidConnect_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_WebSocketClient_DidConnect_Request* in_data);

size_t mojo_WebSocketClient_DidConnect_Request_ComputeSerializedSize(
  const struct mojo_WebSocketClient_DidConnect_Request* in_data);

MojomValidationResult mojo_WebSocketClient_DidConnect_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_WebSocketClient_DidConnect_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_WebSocketClient_DidConnect_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: DidReceiveData

#define mojo_WebSocketClient_DidReceiveData__Ordinal \
    ((uint32_t)1)
#define mojo_WebSocketClient_DidReceiveData__MinVersion \
    ((uint32_t)0)

struct mojo_WebSocketClient_DidReceiveData_Request;
// -- mojo_WebSocketClient_DidReceiveData_Request --
// Enums
// Constants
// Struct definition
struct mojo_WebSocketClient_DidReceiveData_Request {
  struct MojomStructHeader header_;
  bool fin : 1;  // offset,bit = 0,0
  uint8_t pad0_[3];  // padding
  mojo_WebSocket_MessageType type;  // offset,bit = 4,0
  uint32_t num_bytes;  // offset,bit = 8,0
  
};

struct mojo_WebSocketClient_DidReceiveData_Request* mojo_WebSocketClient_DidReceiveData_Request_New(struct MojomBuffer* in_buffer);

void mojo_WebSocketClient_DidReceiveData_Request_Init(
  struct mojo_WebSocketClient_DidReceiveData_Request* in_data);

void mojo_WebSocketClient_DidReceiveData_Request_CloseAllHandles(
  struct mojo_WebSocketClient_DidReceiveData_Request* in_data);

struct mojo_WebSocketClient_DidReceiveData_Request* mojo_WebSocketClient_DidReceiveData_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_WebSocketClient_DidReceiveData_Request* in_data);

size_t mojo_WebSocketClient_DidReceiveData_Request_ComputeSerializedSize(
  const struct mojo_WebSocketClient_DidReceiveData_Request* in_data);

MojomValidationResult mojo_WebSocketClient_DidReceiveData_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_WebSocketClient_DidReceiveData_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_WebSocketClient_DidReceiveData_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: DidReceiveFlowControl

#define mojo_WebSocketClient_DidReceiveFlowControl__Ordinal \
    ((uint32_t)2)
#define mojo_WebSocketClient_DidReceiveFlowControl__MinVersion \
    ((uint32_t)0)

struct mojo_WebSocketClient_DidReceiveFlowControl_Request;
// -- mojo_WebSocketClient_DidReceiveFlowControl_Request --
// Enums
// Constants
// Struct definition
struct mojo_WebSocketClient_DidReceiveFlowControl_Request {
  struct MojomStructHeader header_;
  int64_t quota;  // offset,bit = 0,0
  
};

struct mojo_WebSocketClient_DidReceiveFlowControl_Request* mojo_WebSocketClient_DidReceiveFlowControl_Request_New(struct MojomBuffer* in_buffer);

void mojo_WebSocketClient_DidReceiveFlowControl_Request_Init(
  struct mojo_WebSocketClient_DidReceiveFlowControl_Request* in_data);

void mojo_WebSocketClient_DidReceiveFlowControl_Request_CloseAllHandles(
  struct mojo_WebSocketClient_DidReceiveFlowControl_Request* in_data);

struct mojo_WebSocketClient_DidReceiveFlowControl_Request* mojo_WebSocketClient_DidReceiveFlowControl_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_WebSocketClient_DidReceiveFlowControl_Request* in_data);

size_t mojo_WebSocketClient_DidReceiveFlowControl_Request_ComputeSerializedSize(
  const struct mojo_WebSocketClient_DidReceiveFlowControl_Request* in_data);

MojomValidationResult mojo_WebSocketClient_DidReceiveFlowControl_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_WebSocketClient_DidReceiveFlowControl_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_WebSocketClient_DidReceiveFlowControl_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: DidFail

#define mojo_WebSocketClient_DidFail__Ordinal \
    ((uint32_t)3)
#define mojo_WebSocketClient_DidFail__MinVersion \
    ((uint32_t)0)

struct mojo_WebSocketClient_DidFail_Request;
// -- mojo_WebSocketClient_DidFail_Request --
// Enums
// Constants
// Struct definition
struct mojo_WebSocketClient_DidFail_Request {
  struct MojomStructHeader header_;
  union MojomStringPtr message;  // offset,bit = 0,0
  
};

struct mojo_WebSocketClient_DidFail_Request* mojo_WebSocketClient_DidFail_Request_New(struct MojomBuffer* in_buffer);

void mojo_WebSocketClient_DidFail_Request_Init(
  struct mojo_WebSocketClient_DidFail_Request* in_data);

void mojo_WebSocketClient_DidFail_Request_CloseAllHandles(
  struct mojo_WebSocketClient_DidFail_Request* in_data);

struct mojo_WebSocketClient_DidFail_Request* mojo_WebSocketClient_DidFail_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_WebSocketClient_DidFail_Request* in_data);

size_t mojo_WebSocketClient_DidFail_Request_ComputeSerializedSize(
  const struct mojo_WebSocketClient_DidFail_Request* in_data);

MojomValidationResult mojo_WebSocketClient_DidFail_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_WebSocketClient_DidFail_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_WebSocketClient_DidFail_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: DidClose

#define mojo_WebSocketClient_DidClose__Ordinal \
    ((uint32_t)4)
#define mojo_WebSocketClient_DidClose__MinVersion \
    ((uint32_t)0)

struct mojo_WebSocketClient_DidClose_Request;
// -- mojo_WebSocketClient_DidClose_Request --
// Enums
// Constants
// Struct definition
struct mojo_WebSocketClient_DidClose_Request {
  struct MojomStructHeader header_;
  bool was_clean : 1;  // offset,bit = 0,0
  uint8_t pad0_[1];  // padding
  uint16_t code;  // offset,bit = 2,0
  uint8_t pad1_[4];  // padding
  union MojomStringPtr reason;  // offset,bit = 8,0
  
};

struct mojo_WebSocketClient_DidClose_Request* mojo_WebSocketClient_DidClose_Request_New(struct MojomBuffer* in_buffer);

void mojo_WebSocketClient_DidClose_Request_Init(
  struct mojo_WebSocketClient_DidClose_Request* in_data);

void mojo_WebSocketClient_DidClose_Request_CloseAllHandles(
  struct mojo_WebSocketClient_DidClose_Request* in_data);

struct mojo_WebSocketClient_DidClose_Request* mojo_WebSocketClient_DidClose_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_WebSocketClient_DidClose_Request* in_data);

size_t mojo_WebSocketClient_DidClose_Request_ComputeSerializedSize(
  const struct mojo_WebSocketClient_DidClose_Request* in_data);

MojomValidationResult mojo_WebSocketClient_DidClose_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_WebSocketClient_DidClose_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_WebSocketClient_DidClose_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry mojo_WebSocket_Connect_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_WebSocket_Send_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_WebSocket_FlowControl_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_WebSocket_Close_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_WebSocketClient_DidConnect_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_WebSocketClient_DidReceiveData_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_WebSocketClient_DidReceiveFlowControl_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_WebSocketClient_DidFail_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_WebSocketClient_DidClose_Request__PointerTable[];


#endif  // MOJO_SERVICES_NETWORK_INTERFACES_WEB_SOCKET_MOJOM_C_H_