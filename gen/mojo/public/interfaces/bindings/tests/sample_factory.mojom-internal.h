// NOTE: This file was generated by the Mojo bindings generator.
#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_FACTORY_MOJOM_INTERNAL_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_FACTORY_MOJOM_INTERNAL_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/union_accessor.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/system/buffer.h"
#include "mojo/public/cpp/system/data_pipe.h"
#include "mojo/public/cpp/system/handle.h"
#include "mojo/public/cpp/system/message_pipe.h"
#include "mojo/public/interfaces/bindings/tests/sample_import.mojom-internal.h"

namespace mojo {
namespace internal {
class BoundsChecker;
}
}
namespace sample {

class Request;
class Response;


namespace internal {

class Request_Data;
class Response_Data;



#pragma pack(push, 1)


class Request_Data {
 public:
  static Request_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t x;
  mojo::MessagePipeHandle pipe;
  mojo::internal::ArrayPointer<mojo::MessagePipeHandle> more_pipes;
  mojo::internal::Interface_Data obj;

 private:
  Request_Data();
  ~Request_Data() = delete;
};
static_assert(sizeof(Request_Data) == 32,
              "Bad sizeof(Request_Data)");

class Response_Data {
 public:
  static Response_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t x;
  mojo::MessagePipeHandle pipe;

 private:
  Response_Data();
  ~Response_Data() = delete;
};
static_assert(sizeof(Response_Data) == 16,
              "Bad sizeof(Response_Data)");


class NamedObject_SetName_Params_Data {
 public:
  static NamedObject_SetName_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StringPointer name;

 private:
  NamedObject_SetName_Params_Data();
  ~NamedObject_SetName_Params_Data() = delete;
};
static_assert(sizeof(NamedObject_SetName_Params_Data) == 16,
              "Bad sizeof(NamedObject_SetName_Params_Data)");


class NamedObject_GetName_Params_Data {
 public:
  static NamedObject_GetName_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;

 private:
  NamedObject_GetName_Params_Data();
  ~NamedObject_GetName_Params_Data() = delete;
};
static_assert(sizeof(NamedObject_GetName_Params_Data) == 8,
              "Bad sizeof(NamedObject_GetName_Params_Data)");

class NamedObject_GetName_ResponseParams_Data {
 public:
  static NamedObject_GetName_ResponseParams_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StringPointer name;

 private:
  NamedObject_GetName_ResponseParams_Data();
  ~NamedObject_GetName_ResponseParams_Data() = delete;
};
static_assert(sizeof(NamedObject_GetName_ResponseParams_Data) == 16,
              "Bad sizeof(NamedObject_GetName_ResponseParams_Data)");


class Factory_DoStuff_Params_Data {
 public:
  static Factory_DoStuff_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StructPointer<internal::Request_Data> request;
  mojo::MessagePipeHandle pipe;
  uint8_t padfinal_[4];

 private:
  Factory_DoStuff_Params_Data();
  ~Factory_DoStuff_Params_Data() = delete;
};
static_assert(sizeof(Factory_DoStuff_Params_Data) == 24,
              "Bad sizeof(Factory_DoStuff_Params_Data)");

class Factory_DoStuff_ResponseParams_Data {
 public:
  static Factory_DoStuff_ResponseParams_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StructPointer<internal::Response_Data> response;
  mojo::internal::StringPointer text;

 private:
  Factory_DoStuff_ResponseParams_Data();
  ~Factory_DoStuff_ResponseParams_Data() = delete;
};
static_assert(sizeof(Factory_DoStuff_ResponseParams_Data) == 24,
              "Bad sizeof(Factory_DoStuff_ResponseParams_Data)");


class Factory_DoStuff2_Params_Data {
 public:
  static Factory_DoStuff2_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::DataPipeConsumerHandle pipe;
  uint8_t padfinal_[4];

 private:
  Factory_DoStuff2_Params_Data();
  ~Factory_DoStuff2_Params_Data() = delete;
};
static_assert(sizeof(Factory_DoStuff2_Params_Data) == 16,
              "Bad sizeof(Factory_DoStuff2_Params_Data)");

class Factory_DoStuff2_ResponseParams_Data {
 public:
  static Factory_DoStuff2_ResponseParams_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StringPointer text;

 private:
  Factory_DoStuff2_ResponseParams_Data();
  ~Factory_DoStuff2_ResponseParams_Data() = delete;
};
static_assert(sizeof(Factory_DoStuff2_ResponseParams_Data) == 16,
              "Bad sizeof(Factory_DoStuff2_ResponseParams_Data)");


class Factory_CreateNamedObject_Params_Data {
 public:
  static Factory_CreateNamedObject_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::MessagePipeHandle obj;
  uint8_t padfinal_[4];

 private:
  Factory_CreateNamedObject_Params_Data();
  ~Factory_CreateNamedObject_Params_Data() = delete;
};
static_assert(sizeof(Factory_CreateNamedObject_Params_Data) == 16,
              "Bad sizeof(Factory_CreateNamedObject_Params_Data)");


class Factory_RequestImportedInterface_Params_Data {
 public:
  static Factory_RequestImportedInterface_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::MessagePipeHandle obj;
  uint8_t padfinal_[4];

 private:
  Factory_RequestImportedInterface_Params_Data();
  ~Factory_RequestImportedInterface_Params_Data() = delete;
};
static_assert(sizeof(Factory_RequestImportedInterface_Params_Data) == 16,
              "Bad sizeof(Factory_RequestImportedInterface_Params_Data)");

class Factory_RequestImportedInterface_ResponseParams_Data {
 public:
  static Factory_RequestImportedInterface_ResponseParams_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::MessagePipeHandle obj;
  uint8_t padfinal_[4];

 private:
  Factory_RequestImportedInterface_ResponseParams_Data();
  ~Factory_RequestImportedInterface_ResponseParams_Data() = delete;
};
static_assert(sizeof(Factory_RequestImportedInterface_ResponseParams_Data) == 16,
              "Bad sizeof(Factory_RequestImportedInterface_ResponseParams_Data)");


class Factory_TakeImportedInterface_Params_Data {
 public:
  static Factory_TakeImportedInterface_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data obj;

 private:
  Factory_TakeImportedInterface_Params_Data();
  ~Factory_TakeImportedInterface_Params_Data() = delete;
};
static_assert(sizeof(Factory_TakeImportedInterface_Params_Data) == 16,
              "Bad sizeof(Factory_TakeImportedInterface_Params_Data)");

class Factory_TakeImportedInterface_ResponseParams_Data {
 public:
  static Factory_TakeImportedInterface_ResponseParams_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data obj;

 private:
  Factory_TakeImportedInterface_ResponseParams_Data();
  ~Factory_TakeImportedInterface_ResponseParams_Data() = delete;
};
static_assert(sizeof(Factory_TakeImportedInterface_ResponseParams_Data) == 16,
              "Bad sizeof(Factory_TakeImportedInterface_ResponseParams_Data)");


#pragma pack(pop)

}  // namespace internal
}  // namespace sample

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_FACTORY_MOJOM_INTERNAL_H_
