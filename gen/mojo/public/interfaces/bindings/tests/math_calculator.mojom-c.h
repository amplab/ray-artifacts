// This file was auto-generated by the C bindings generator.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_MATH_CALCULATOR_MOJOM_C_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_MATH_CALCULATOR_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.


// Forward declarations for structs.
// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.


// Interface definitions.
// --- math_Calculator ---
#define math_Calculator__ServiceName ((const char*)"")
#define math_Calculator__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: Clear

#define math_Calculator_Clear__Ordinal \
    ((uint32_t)0)
#define math_Calculator_Clear__MinVersion \
    ((uint32_t)0)

struct math_Calculator_Clear_Request;
// -- math_Calculator_Clear_Request --
// Enums
// Constants
// Struct definition
struct math_Calculator_Clear_Request {
  struct MojomStructHeader header_;
  
};

struct math_Calculator_Clear_Request* math_Calculator_Clear_Request_New(struct MojomBuffer* in_buffer);

void math_Calculator_Clear_Request_Init(
  struct math_Calculator_Clear_Request* in_data);

void math_Calculator_Clear_Request_CloseAllHandles(
  struct math_Calculator_Clear_Request* in_data);

struct math_Calculator_Clear_Request* math_Calculator_Clear_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct math_Calculator_Clear_Request* in_data);

size_t math_Calculator_Clear_Request_ComputeSerializedSize(
  const struct math_Calculator_Clear_Request* in_data);

MojomValidationResult math_Calculator_Clear_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult math_Calculator_Clear_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult math_Calculator_Clear_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct math_Calculator_Clear_Response;
// -- math_Calculator_Clear_Response --
// Enums
// Constants
// Struct definition
struct math_Calculator_Clear_Response {
  struct MojomStructHeader header_;
  double value;  // offset,bit = 0,0
  
};

struct math_Calculator_Clear_Response* math_Calculator_Clear_Response_New(struct MojomBuffer* in_buffer);

void math_Calculator_Clear_Response_Init(
  struct math_Calculator_Clear_Response* in_data);

void math_Calculator_Clear_Response_CloseAllHandles(
  struct math_Calculator_Clear_Response* in_data);

struct math_Calculator_Clear_Response* math_Calculator_Clear_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct math_Calculator_Clear_Response* in_data);

size_t math_Calculator_Clear_Response_ComputeSerializedSize(
  const struct math_Calculator_Clear_Response* in_data);

MojomValidationResult math_Calculator_Clear_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult math_Calculator_Clear_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult math_Calculator_Clear_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Add

#define math_Calculator_Add__Ordinal \
    ((uint32_t)1)
#define math_Calculator_Add__MinVersion \
    ((uint32_t)0)

struct math_Calculator_Add_Request;
// -- math_Calculator_Add_Request --
// Enums
// Constants
// Struct definition
struct math_Calculator_Add_Request {
  struct MojomStructHeader header_;
  double value;  // offset,bit = 0,0
  
};

struct math_Calculator_Add_Request* math_Calculator_Add_Request_New(struct MojomBuffer* in_buffer);

void math_Calculator_Add_Request_Init(
  struct math_Calculator_Add_Request* in_data);

void math_Calculator_Add_Request_CloseAllHandles(
  struct math_Calculator_Add_Request* in_data);

struct math_Calculator_Add_Request* math_Calculator_Add_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct math_Calculator_Add_Request* in_data);

size_t math_Calculator_Add_Request_ComputeSerializedSize(
  const struct math_Calculator_Add_Request* in_data);

MojomValidationResult math_Calculator_Add_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult math_Calculator_Add_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult math_Calculator_Add_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct math_Calculator_Add_Response;
// -- math_Calculator_Add_Response --
// Enums
// Constants
// Struct definition
struct math_Calculator_Add_Response {
  struct MojomStructHeader header_;
  double value;  // offset,bit = 0,0
  
};

struct math_Calculator_Add_Response* math_Calculator_Add_Response_New(struct MojomBuffer* in_buffer);

void math_Calculator_Add_Response_Init(
  struct math_Calculator_Add_Response* in_data);

void math_Calculator_Add_Response_CloseAllHandles(
  struct math_Calculator_Add_Response* in_data);

struct math_Calculator_Add_Response* math_Calculator_Add_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct math_Calculator_Add_Response* in_data);

size_t math_Calculator_Add_Response_ComputeSerializedSize(
  const struct math_Calculator_Add_Response* in_data);

MojomValidationResult math_Calculator_Add_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult math_Calculator_Add_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult math_Calculator_Add_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Multiply

#define math_Calculator_Multiply__Ordinal \
    ((uint32_t)2)
#define math_Calculator_Multiply__MinVersion \
    ((uint32_t)0)

struct math_Calculator_Multiply_Request;
// -- math_Calculator_Multiply_Request --
// Enums
// Constants
// Struct definition
struct math_Calculator_Multiply_Request {
  struct MojomStructHeader header_;
  double value;  // offset,bit = 0,0
  
};

struct math_Calculator_Multiply_Request* math_Calculator_Multiply_Request_New(struct MojomBuffer* in_buffer);

void math_Calculator_Multiply_Request_Init(
  struct math_Calculator_Multiply_Request* in_data);

void math_Calculator_Multiply_Request_CloseAllHandles(
  struct math_Calculator_Multiply_Request* in_data);

struct math_Calculator_Multiply_Request* math_Calculator_Multiply_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct math_Calculator_Multiply_Request* in_data);

size_t math_Calculator_Multiply_Request_ComputeSerializedSize(
  const struct math_Calculator_Multiply_Request* in_data);

MojomValidationResult math_Calculator_Multiply_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult math_Calculator_Multiply_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult math_Calculator_Multiply_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct math_Calculator_Multiply_Response;
// -- math_Calculator_Multiply_Response --
// Enums
// Constants
// Struct definition
struct math_Calculator_Multiply_Response {
  struct MojomStructHeader header_;
  double value;  // offset,bit = 0,0
  
};

struct math_Calculator_Multiply_Response* math_Calculator_Multiply_Response_New(struct MojomBuffer* in_buffer);

void math_Calculator_Multiply_Response_Init(
  struct math_Calculator_Multiply_Response* in_data);

void math_Calculator_Multiply_Response_CloseAllHandles(
  struct math_Calculator_Multiply_Response* in_data);

struct math_Calculator_Multiply_Response* math_Calculator_Multiply_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct math_Calculator_Multiply_Response* in_data);

size_t math_Calculator_Multiply_Response_ComputeSerializedSize(
  const struct math_Calculator_Multiply_Response* in_data);

MojomValidationResult math_Calculator_Multiply_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult math_Calculator_Multiply_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult math_Calculator_Multiply_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry math_Calculator_Add_Request__PointerTable[];
extern struct MojomPointerTableStructEntry math_Calculator_Add_Response__PointerTable[];
extern struct MojomPointerTableStructEntry math_Calculator_Multiply_Request__PointerTable[];
extern struct MojomPointerTableStructEntry math_Calculator_Multiply_Response__PointerTable[];
extern struct MojomPointerTableStructEntry math_Calculator_Clear_Request__PointerTable[];
extern struct MojomPointerTableStructEntry math_Calculator_Clear_Response__PointerTable[];


#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_MATH_CALCULATOR_MOJOM_C_H_