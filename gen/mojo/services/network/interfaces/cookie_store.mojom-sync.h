// NOTE: This file was generated by the Mojo bindings generator.
#ifndef MOJO_SERVICES_NETWORK_INTERFACES_COOKIE_STORE_MOJOM_SYNC_H_
#define MOJO_SERVICES_NETWORK_INTERFACES_COOKIE_STORE_MOJOM_SYNC_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/array.h"
#include "mojo/public/cpp/bindings/callback.h"
#include "mojo/public/cpp/bindings/interface_handle.h"
#include "mojo/public/cpp/bindings/interface_request.h"
#include "mojo/public/cpp/bindings/map.h"
#include "mojo/public/cpp/bindings/message_validator.h"
#include "mojo/public/cpp/bindings/string.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/bindings/lib/synchronous_connector.h"
#include "mojo/services/network/interfaces/cookie_store.mojom-internal.h"
#include "mojo/services/network/interfaces/cookie_store.mojom-common.h"


namespace mojo {

// --- Synchronous interface declaration ---

class CookieStore_SynchronousProxy;
class CookieStore_Synchronous
  : public internal::CookieStore_Base {
 public:
  virtual ~CookieStore_Synchronous() override {}
  
  using Proxy_ = CookieStore_SynchronousProxy;
  virtual bool Get(
      const mojo::String& in_url, mojo::String* out_cookies)= 0;
  virtual bool Set(
      const mojo::String& in_url, const mojo::String& in_cookie, bool* out_success)= 0;
};

class CookieStore_SynchronousProxy
    : public CookieStore_Synchronous {
 public:
  explicit CookieStore_SynchronousProxy(
      mojo::internal::SynchronousConnector* connector,
      mojo::internal::MessageValidatorList&& validators);
  bool Get(const mojo::String& in_url, mojo::String* out_cookies) override;
  bool Set(const mojo::String& in_url, const mojo::String& in_cookie, bool* out_success) override;

 private:
  // |connector_| is passed to us, and is not owned by us.
  mojo::internal::SynchronousConnector* const connector_;
  mojo::internal::MessageValidatorList const validators_;
};

}  // namespace mojo

#endif  // MOJO_SERVICES_NETWORK_INTERFACES_COOKIE_STORE_MOJOM_SYNC_H_
