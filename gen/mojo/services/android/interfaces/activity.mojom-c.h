// This file was auto-generated by the C bindings generator.

#ifndef MOJO_SERVICES_ANDROID_INTERFACES_ACTIVITY_MOJOM_C_H_
#define MOJO_SERVICES_ANDROID_INTERFACES_ACTIVITY_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.


// Forward declarations for structs.
struct activity_StringExtra;
union activity_StringExtraPtr {
  struct activity_StringExtra* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union activity_StringExtraPtr) == 8,
              "union activity_StringExtraPtr must be 8 bytes");

struct activity_ComponentName;
union activity_ComponentNamePtr {
  struct activity_ComponentName* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union activity_ComponentNamePtr) == 8,
              "union activity_ComponentNamePtr must be 8 bytes");

struct activity_Intent;
union activity_IntentPtr {
  struct activity_Intent* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union activity_IntentPtr) == 8,
              "union activity_IntentPtr must be 8 bytes");

struct activity_TaskDescription;
union activity_TaskDescriptionPtr {
  struct activity_TaskDescription* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union activity_TaskDescriptionPtr) == 8,
              "union activity_TaskDescriptionPtr must be 8 bytes");

// Forward declarations for unions.
// Top level constants.


// Top level enums.
typedef uint32_t activity_SystemUIVisibility;
enum activity_SystemUIVisibility_Enum {
  activity_SystemUIVisibility_STANDARD = 0,
  activity_SystemUIVisibility_FULLSCREEN = 1,
  activity_SystemUIVisibility_IMMERSIVE = 2,
  
  activity_SystemUIVisibility__UNKNOWN__ = 0xFFFFFFFF,
};

typedef uint32_t activity_ScreenOrientation;
enum activity_ScreenOrientation_Enum {
  activity_ScreenOrientation_UNSPECIFIED = 0,
  activity_ScreenOrientation_LANDSCAPE = 1,
  activity_ScreenOrientation_PORTRAIT = 2,
  activity_ScreenOrientation_NOSENSOR = 3,
  
  activity_ScreenOrientation__UNKNOWN__ = 0xFFFFFFFF,
};

typedef uint32_t activity_HapticFeedbackType;
enum activity_HapticFeedbackType_Enum {
  activity_HapticFeedbackType_LONG_PRESS = 0,
  activity_HapticFeedbackType_VIRTUAL_KEY = 1,
  activity_HapticFeedbackType_KEYBOARD_TAP = 2,
  activity_HapticFeedbackType_CLOCK_TICK = 3,
  
  activity_HapticFeedbackType__UNKNOWN__ = 0xFFFFFFFF,
};

typedef uint32_t activity_AuralFeedbackType;
enum activity_AuralFeedbackType_Enum {
  activity_AuralFeedbackType_CLICK = 0,
  activity_AuralFeedbackType_NAVIGATION_LEFT = 1,
  activity_AuralFeedbackType_NAVIGATION_UP = 2,
  activity_AuralFeedbackType_NAVIGATION_RIGHT = 3,
  activity_AuralFeedbackType_NAVIGATION_DOWN = 4,
  
  activity_AuralFeedbackType__UNKNOWN__ = 0xFFFFFFFF,
};



// Union definitions.


// Struct definitions.
// -- activity_StringExtra --
// Enums
// Constants
// Struct definition
struct activity_StringExtra {
  struct MojomStructHeader header_;
  union MojomStringPtr name;  // offset,bit = 0,0
  union MojomStringPtr value;  // offset,bit = 8,0
  
};

struct activity_StringExtra* activity_StringExtra_New(struct MojomBuffer* in_buffer);

void activity_StringExtra_Init(
  struct activity_StringExtra* in_data);

void activity_StringExtra_CloseAllHandles(
  struct activity_StringExtra* in_data);

struct activity_StringExtra* activity_StringExtra_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_StringExtra* in_data);

size_t activity_StringExtra_ComputeSerializedSize(
  const struct activity_StringExtra* in_data);

MojomValidationResult activity_StringExtra_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_StringExtra_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_StringExtra_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- activity_ComponentName --
// Enums
// Constants
// Struct definition
struct activity_ComponentName {
  struct MojomStructHeader header_;
  union MojomStringPtr package_name;  // offset,bit = 0,0
  union MojomStringPtr class_name;  // offset,bit = 8,0
  
};

struct activity_ComponentName* activity_ComponentName_New(struct MojomBuffer* in_buffer);

void activity_ComponentName_Init(
  struct activity_ComponentName* in_data);

void activity_ComponentName_CloseAllHandles(
  struct activity_ComponentName* in_data);

struct activity_ComponentName* activity_ComponentName_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_ComponentName* in_data);

size_t activity_ComponentName_ComputeSerializedSize(
  const struct activity_ComponentName* in_data);

MojomValidationResult activity_ComponentName_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_ComponentName_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_ComponentName_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- activity_Intent --
// Enums
// Constants
// Struct definition
struct activity_Intent {
  struct MojomStructHeader header_;
  union MojomStringPtr action;  // offset,bit = 0,0
  union MojomStringPtr url;  // offset,bit = 8,0
  uint32_t flags;  // offset,bit = 16,0
  uint8_t pad2_[4];  // padding
  union activity_ComponentNamePtr component;  // offset,bit = 24,0
  union MojomArrayPtr string_extras;  // offset,bit = 32,0
  union MojomStringPtr type;  // offset,bit = 40,0
  
};

struct activity_Intent* activity_Intent_New(struct MojomBuffer* in_buffer);

void activity_Intent_Init(
  struct activity_Intent* in_data);

void activity_Intent_CloseAllHandles(
  struct activity_Intent* in_data);

struct activity_Intent* activity_Intent_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_Intent* in_data);

size_t activity_Intent_ComputeSerializedSize(
  const struct activity_Intent* in_data);

MojomValidationResult activity_Intent_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_Intent_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_Intent_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- activity_TaskDescription --
// Enums
// Constants
// Struct definition
struct activity_TaskDescription {
  struct MojomStructHeader header_;
  union MojomStringPtr label;  // offset,bit = 0,0
  uint32_t primaryColor;  // offset,bit = 8,0
  
};

struct activity_TaskDescription* activity_TaskDescription_New(struct MojomBuffer* in_buffer);

void activity_TaskDescription_Init(
  struct activity_TaskDescription* in_data);

void activity_TaskDescription_CloseAllHandles(
  struct activity_TaskDescription* in_data);

struct activity_TaskDescription* activity_TaskDescription_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_TaskDescription* in_data);

size_t activity_TaskDescription_ComputeSerializedSize(
  const struct activity_TaskDescription* in_data);

MojomValidationResult activity_TaskDescription_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_TaskDescription_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_TaskDescription_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);




// Interface definitions.
// --- activity_Activity ---
#define activity_Activity__ServiceName ((const char*)"activity::Activity")
#define activity_Activity__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: GetUserFeedback

#define activity_Activity_GetUserFeedback__Ordinal \
    ((uint32_t)0)
#define activity_Activity_GetUserFeedback__MinVersion \
    ((uint32_t)0)

struct activity_Activity_GetUserFeedback_Request;
// -- activity_Activity_GetUserFeedback_Request --
// Enums
// Constants
// Struct definition
struct activity_Activity_GetUserFeedback_Request {
  struct MojomStructHeader header_;
  MojoHandle user_feedback;  // offset,bit = 0,0
  
};

struct activity_Activity_GetUserFeedback_Request* activity_Activity_GetUserFeedback_Request_New(struct MojomBuffer* in_buffer);

void activity_Activity_GetUserFeedback_Request_Init(
  struct activity_Activity_GetUserFeedback_Request* in_data);

void activity_Activity_GetUserFeedback_Request_CloseAllHandles(
  struct activity_Activity_GetUserFeedback_Request* in_data);

struct activity_Activity_GetUserFeedback_Request* activity_Activity_GetUserFeedback_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_Activity_GetUserFeedback_Request* in_data);

size_t activity_Activity_GetUserFeedback_Request_ComputeSerializedSize(
  const struct activity_Activity_GetUserFeedback_Request* in_data);

MojomValidationResult activity_Activity_GetUserFeedback_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_Activity_GetUserFeedback_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_Activity_GetUserFeedback_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: StartActivity

#define activity_Activity_StartActivity__Ordinal \
    ((uint32_t)1)
#define activity_Activity_StartActivity__MinVersion \
    ((uint32_t)0)

struct activity_Activity_StartActivity_Request;
// -- activity_Activity_StartActivity_Request --
// Enums
// Constants
// Struct definition
struct activity_Activity_StartActivity_Request {
  struct MojomStructHeader header_;
  union activity_IntentPtr intent;  // offset,bit = 0,0
  
};

struct activity_Activity_StartActivity_Request* activity_Activity_StartActivity_Request_New(struct MojomBuffer* in_buffer);

void activity_Activity_StartActivity_Request_Init(
  struct activity_Activity_StartActivity_Request* in_data);

void activity_Activity_StartActivity_Request_CloseAllHandles(
  struct activity_Activity_StartActivity_Request* in_data);

struct activity_Activity_StartActivity_Request* activity_Activity_StartActivity_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_Activity_StartActivity_Request* in_data);

size_t activity_Activity_StartActivity_Request_ComputeSerializedSize(
  const struct activity_Activity_StartActivity_Request* in_data);

MojomValidationResult activity_Activity_StartActivity_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_Activity_StartActivity_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_Activity_StartActivity_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: FinishCurrentActivity

#define activity_Activity_FinishCurrentActivity__Ordinal \
    ((uint32_t)2)
#define activity_Activity_FinishCurrentActivity__MinVersion \
    ((uint32_t)0)

struct activity_Activity_FinishCurrentActivity_Request;
// -- activity_Activity_FinishCurrentActivity_Request --
// Enums
// Constants
// Struct definition
struct activity_Activity_FinishCurrentActivity_Request {
  struct MojomStructHeader header_;
  
};

struct activity_Activity_FinishCurrentActivity_Request* activity_Activity_FinishCurrentActivity_Request_New(struct MojomBuffer* in_buffer);

void activity_Activity_FinishCurrentActivity_Request_Init(
  struct activity_Activity_FinishCurrentActivity_Request* in_data);

void activity_Activity_FinishCurrentActivity_Request_CloseAllHandles(
  struct activity_Activity_FinishCurrentActivity_Request* in_data);

struct activity_Activity_FinishCurrentActivity_Request* activity_Activity_FinishCurrentActivity_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_Activity_FinishCurrentActivity_Request* in_data);

size_t activity_Activity_FinishCurrentActivity_Request_ComputeSerializedSize(
  const struct activity_Activity_FinishCurrentActivity_Request* in_data);

MojomValidationResult activity_Activity_FinishCurrentActivity_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_Activity_FinishCurrentActivity_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_Activity_FinishCurrentActivity_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: SetTaskDescription

#define activity_Activity_SetTaskDescription__Ordinal \
    ((uint32_t)3)
#define activity_Activity_SetTaskDescription__MinVersion \
    ((uint32_t)0)

struct activity_Activity_SetTaskDescription_Request;
// -- activity_Activity_SetTaskDescription_Request --
// Enums
// Constants
// Struct definition
struct activity_Activity_SetTaskDescription_Request {
  struct MojomStructHeader header_;
  union activity_TaskDescriptionPtr description;  // offset,bit = 0,0
  
};

struct activity_Activity_SetTaskDescription_Request* activity_Activity_SetTaskDescription_Request_New(struct MojomBuffer* in_buffer);

void activity_Activity_SetTaskDescription_Request_Init(
  struct activity_Activity_SetTaskDescription_Request* in_data);

void activity_Activity_SetTaskDescription_Request_CloseAllHandles(
  struct activity_Activity_SetTaskDescription_Request* in_data);

struct activity_Activity_SetTaskDescription_Request* activity_Activity_SetTaskDescription_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_Activity_SetTaskDescription_Request* in_data);

size_t activity_Activity_SetTaskDescription_Request_ComputeSerializedSize(
  const struct activity_Activity_SetTaskDescription_Request* in_data);

MojomValidationResult activity_Activity_SetTaskDescription_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_Activity_SetTaskDescription_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_Activity_SetTaskDescription_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: SetSystemUIVisibility

#define activity_Activity_SetSystemUIVisibility__Ordinal \
    ((uint32_t)4)
#define activity_Activity_SetSystemUIVisibility__MinVersion \
    ((uint32_t)0)

struct activity_Activity_SetSystemUIVisibility_Request;
// -- activity_Activity_SetSystemUIVisibility_Request --
// Enums
// Constants
// Struct definition
struct activity_Activity_SetSystemUIVisibility_Request {
  struct MojomStructHeader header_;
  activity_SystemUIVisibility visibility;  // offset,bit = 0,0
  
};

struct activity_Activity_SetSystemUIVisibility_Request* activity_Activity_SetSystemUIVisibility_Request_New(struct MojomBuffer* in_buffer);

void activity_Activity_SetSystemUIVisibility_Request_Init(
  struct activity_Activity_SetSystemUIVisibility_Request* in_data);

void activity_Activity_SetSystemUIVisibility_Request_CloseAllHandles(
  struct activity_Activity_SetSystemUIVisibility_Request* in_data);

struct activity_Activity_SetSystemUIVisibility_Request* activity_Activity_SetSystemUIVisibility_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_Activity_SetSystemUIVisibility_Request* in_data);

size_t activity_Activity_SetSystemUIVisibility_Request_ComputeSerializedSize(
  const struct activity_Activity_SetSystemUIVisibility_Request* in_data);

MojomValidationResult activity_Activity_SetSystemUIVisibility_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_Activity_SetSystemUIVisibility_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_Activity_SetSystemUIVisibility_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: SetRequestedOrientation

#define activity_Activity_SetRequestedOrientation__Ordinal \
    ((uint32_t)5)
#define activity_Activity_SetRequestedOrientation__MinVersion \
    ((uint32_t)0)

struct activity_Activity_SetRequestedOrientation_Request;
// -- activity_Activity_SetRequestedOrientation_Request --
// Enums
// Constants
// Struct definition
struct activity_Activity_SetRequestedOrientation_Request {
  struct MojomStructHeader header_;
  activity_ScreenOrientation orientation;  // offset,bit = 0,0
  
};

struct activity_Activity_SetRequestedOrientation_Request* activity_Activity_SetRequestedOrientation_Request_New(struct MojomBuffer* in_buffer);

void activity_Activity_SetRequestedOrientation_Request_Init(
  struct activity_Activity_SetRequestedOrientation_Request* in_data);

void activity_Activity_SetRequestedOrientation_Request_CloseAllHandles(
  struct activity_Activity_SetRequestedOrientation_Request* in_data);

struct activity_Activity_SetRequestedOrientation_Request* activity_Activity_SetRequestedOrientation_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_Activity_SetRequestedOrientation_Request* in_data);

size_t activity_Activity_SetRequestedOrientation_Request_ComputeSerializedSize(
  const struct activity_Activity_SetRequestedOrientation_Request* in_data);

MojomValidationResult activity_Activity_SetRequestedOrientation_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_Activity_SetRequestedOrientation_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_Activity_SetRequestedOrientation_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);





// --- activity_PathService ---
#define activity_PathService__ServiceName ((const char*)"activity::PathService")
#define activity_PathService__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: GetFilesDir

#define activity_PathService_GetFilesDir__Ordinal \
    ((uint32_t)1)
#define activity_PathService_GetFilesDir__MinVersion \
    ((uint32_t)0)

struct activity_PathService_GetFilesDir_Request;
// -- activity_PathService_GetFilesDir_Request --
// Enums
// Constants
// Struct definition
struct activity_PathService_GetFilesDir_Request {
  struct MojomStructHeader header_;
  
};

struct activity_PathService_GetFilesDir_Request* activity_PathService_GetFilesDir_Request_New(struct MojomBuffer* in_buffer);

void activity_PathService_GetFilesDir_Request_Init(
  struct activity_PathService_GetFilesDir_Request* in_data);

void activity_PathService_GetFilesDir_Request_CloseAllHandles(
  struct activity_PathService_GetFilesDir_Request* in_data);

struct activity_PathService_GetFilesDir_Request* activity_PathService_GetFilesDir_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_PathService_GetFilesDir_Request* in_data);

size_t activity_PathService_GetFilesDir_Request_ComputeSerializedSize(
  const struct activity_PathService_GetFilesDir_Request* in_data);

MojomValidationResult activity_PathService_GetFilesDir_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_PathService_GetFilesDir_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_PathService_GetFilesDir_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct activity_PathService_GetFilesDir_Response;
// -- activity_PathService_GetFilesDir_Response --
// Enums
// Constants
// Struct definition
struct activity_PathService_GetFilesDir_Response {
  struct MojomStructHeader header_;
  union MojomStringPtr path;  // offset,bit = 0,0
  
};

struct activity_PathService_GetFilesDir_Response* activity_PathService_GetFilesDir_Response_New(struct MojomBuffer* in_buffer);

void activity_PathService_GetFilesDir_Response_Init(
  struct activity_PathService_GetFilesDir_Response* in_data);

void activity_PathService_GetFilesDir_Response_CloseAllHandles(
  struct activity_PathService_GetFilesDir_Response* in_data);

struct activity_PathService_GetFilesDir_Response* activity_PathService_GetFilesDir_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_PathService_GetFilesDir_Response* in_data);

size_t activity_PathService_GetFilesDir_Response_ComputeSerializedSize(
  const struct activity_PathService_GetFilesDir_Response* in_data);

MojomValidationResult activity_PathService_GetFilesDir_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_PathService_GetFilesDir_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_PathService_GetFilesDir_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: GetCacheDir

#define activity_PathService_GetCacheDir__Ordinal \
    ((uint32_t)2)
#define activity_PathService_GetCacheDir__MinVersion \
    ((uint32_t)0)

struct activity_PathService_GetCacheDir_Request;
// -- activity_PathService_GetCacheDir_Request --
// Enums
// Constants
// Struct definition
struct activity_PathService_GetCacheDir_Request {
  struct MojomStructHeader header_;
  
};

struct activity_PathService_GetCacheDir_Request* activity_PathService_GetCacheDir_Request_New(struct MojomBuffer* in_buffer);

void activity_PathService_GetCacheDir_Request_Init(
  struct activity_PathService_GetCacheDir_Request* in_data);

void activity_PathService_GetCacheDir_Request_CloseAllHandles(
  struct activity_PathService_GetCacheDir_Request* in_data);

struct activity_PathService_GetCacheDir_Request* activity_PathService_GetCacheDir_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_PathService_GetCacheDir_Request* in_data);

size_t activity_PathService_GetCacheDir_Request_ComputeSerializedSize(
  const struct activity_PathService_GetCacheDir_Request* in_data);

MojomValidationResult activity_PathService_GetCacheDir_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_PathService_GetCacheDir_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_PathService_GetCacheDir_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct activity_PathService_GetCacheDir_Response;
// -- activity_PathService_GetCacheDir_Response --
// Enums
// Constants
// Struct definition
struct activity_PathService_GetCacheDir_Response {
  struct MojomStructHeader header_;
  union MojomStringPtr path;  // offset,bit = 0,0
  
};

struct activity_PathService_GetCacheDir_Response* activity_PathService_GetCacheDir_Response_New(struct MojomBuffer* in_buffer);

void activity_PathService_GetCacheDir_Response_Init(
  struct activity_PathService_GetCacheDir_Response* in_data);

void activity_PathService_GetCacheDir_Response_CloseAllHandles(
  struct activity_PathService_GetCacheDir_Response* in_data);

struct activity_PathService_GetCacheDir_Response* activity_PathService_GetCacheDir_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_PathService_GetCacheDir_Response* in_data);

size_t activity_PathService_GetCacheDir_Response_ComputeSerializedSize(
  const struct activity_PathService_GetCacheDir_Response* in_data);

MojomValidationResult activity_PathService_GetCacheDir_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_PathService_GetCacheDir_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_PathService_GetCacheDir_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: GetAppDataDir

#define activity_PathService_GetAppDataDir__Ordinal \
    ((uint32_t)0)
#define activity_PathService_GetAppDataDir__MinVersion \
    ((uint32_t)0)

struct activity_PathService_GetAppDataDir_Request;
// -- activity_PathService_GetAppDataDir_Request --
// Enums
// Constants
// Struct definition
struct activity_PathService_GetAppDataDir_Request {
  struct MojomStructHeader header_;
  
};

struct activity_PathService_GetAppDataDir_Request* activity_PathService_GetAppDataDir_Request_New(struct MojomBuffer* in_buffer);

void activity_PathService_GetAppDataDir_Request_Init(
  struct activity_PathService_GetAppDataDir_Request* in_data);

void activity_PathService_GetAppDataDir_Request_CloseAllHandles(
  struct activity_PathService_GetAppDataDir_Request* in_data);

struct activity_PathService_GetAppDataDir_Request* activity_PathService_GetAppDataDir_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_PathService_GetAppDataDir_Request* in_data);

size_t activity_PathService_GetAppDataDir_Request_ComputeSerializedSize(
  const struct activity_PathService_GetAppDataDir_Request* in_data);

MojomValidationResult activity_PathService_GetAppDataDir_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_PathService_GetAppDataDir_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_PathService_GetAppDataDir_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct activity_PathService_GetAppDataDir_Response;
// -- activity_PathService_GetAppDataDir_Response --
// Enums
// Constants
// Struct definition
struct activity_PathService_GetAppDataDir_Response {
  struct MojomStructHeader header_;
  union MojomStringPtr path;  // offset,bit = 0,0
  
};

struct activity_PathService_GetAppDataDir_Response* activity_PathService_GetAppDataDir_Response_New(struct MojomBuffer* in_buffer);

void activity_PathService_GetAppDataDir_Response_Init(
  struct activity_PathService_GetAppDataDir_Response* in_data);

void activity_PathService_GetAppDataDir_Response_CloseAllHandles(
  struct activity_PathService_GetAppDataDir_Response* in_data);

struct activity_PathService_GetAppDataDir_Response* activity_PathService_GetAppDataDir_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_PathService_GetAppDataDir_Response* in_data);

size_t activity_PathService_GetAppDataDir_Response_ComputeSerializedSize(
  const struct activity_PathService_GetAppDataDir_Response* in_data);

MojomValidationResult activity_PathService_GetAppDataDir_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_PathService_GetAppDataDir_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_PathService_GetAppDataDir_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);





// --- activity_UserFeedback ---
#define activity_UserFeedback__ServiceName ((const char*)"")
#define activity_UserFeedback__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: PerformHapticFeedback

#define activity_UserFeedback_PerformHapticFeedback__Ordinal \
    ((uint32_t)0)
#define activity_UserFeedback_PerformHapticFeedback__MinVersion \
    ((uint32_t)0)

struct activity_UserFeedback_PerformHapticFeedback_Request;
// -- activity_UserFeedback_PerformHapticFeedback_Request --
// Enums
// Constants
// Struct definition
struct activity_UserFeedback_PerformHapticFeedback_Request {
  struct MojomStructHeader header_;
  activity_HapticFeedbackType type;  // offset,bit = 0,0
  
};

struct activity_UserFeedback_PerformHapticFeedback_Request* activity_UserFeedback_PerformHapticFeedback_Request_New(struct MojomBuffer* in_buffer);

void activity_UserFeedback_PerformHapticFeedback_Request_Init(
  struct activity_UserFeedback_PerformHapticFeedback_Request* in_data);

void activity_UserFeedback_PerformHapticFeedback_Request_CloseAllHandles(
  struct activity_UserFeedback_PerformHapticFeedback_Request* in_data);

struct activity_UserFeedback_PerformHapticFeedback_Request* activity_UserFeedback_PerformHapticFeedback_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_UserFeedback_PerformHapticFeedback_Request* in_data);

size_t activity_UserFeedback_PerformHapticFeedback_Request_ComputeSerializedSize(
  const struct activity_UserFeedback_PerformHapticFeedback_Request* in_data);

MojomValidationResult activity_UserFeedback_PerformHapticFeedback_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_UserFeedback_PerformHapticFeedback_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_UserFeedback_PerformHapticFeedback_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: PerformAuralFeedback

#define activity_UserFeedback_PerformAuralFeedback__Ordinal \
    ((uint32_t)1)
#define activity_UserFeedback_PerformAuralFeedback__MinVersion \
    ((uint32_t)0)

struct activity_UserFeedback_PerformAuralFeedback_Request;
// -- activity_UserFeedback_PerformAuralFeedback_Request --
// Enums
// Constants
// Struct definition
struct activity_UserFeedback_PerformAuralFeedback_Request {
  struct MojomStructHeader header_;
  activity_AuralFeedbackType type;  // offset,bit = 0,0
  
};

struct activity_UserFeedback_PerformAuralFeedback_Request* activity_UserFeedback_PerformAuralFeedback_Request_New(struct MojomBuffer* in_buffer);

void activity_UserFeedback_PerformAuralFeedback_Request_Init(
  struct activity_UserFeedback_PerformAuralFeedback_Request* in_data);

void activity_UserFeedback_PerformAuralFeedback_Request_CloseAllHandles(
  struct activity_UserFeedback_PerformAuralFeedback_Request* in_data);

struct activity_UserFeedback_PerformAuralFeedback_Request* activity_UserFeedback_PerformAuralFeedback_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct activity_UserFeedback_PerformAuralFeedback_Request* in_data);

size_t activity_UserFeedback_PerformAuralFeedback_Request_ComputeSerializedSize(
  const struct activity_UserFeedback_PerformAuralFeedback_Request* in_data);

MojomValidationResult activity_UserFeedback_PerformAuralFeedback_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult activity_UserFeedback_PerformAuralFeedback_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult activity_UserFeedback_PerformAuralFeedback_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry activity_StringExtra__PointerTable[];
extern struct MojomPointerTableStructEntry activity_ComponentName__PointerTable[];
extern struct MojomPointerTableStructEntry activity_Intent__PointerTable[];
extern struct MojomPointerTableStructEntry activity_TaskDescription__PointerTable[];
extern struct MojomPointerTableStructEntry activity_Activity_SetRequestedOrientation_Request__PointerTable[];
extern struct MojomPointerTableStructEntry activity_Activity_GetUserFeedback_Request__PointerTable[];
extern struct MojomPointerTableStructEntry activity_Activity_StartActivity_Request__PointerTable[];
extern struct MojomPointerTableStructEntry activity_Activity_FinishCurrentActivity_Request__PointerTable[];
extern struct MojomPointerTableStructEntry activity_Activity_SetTaskDescription_Request__PointerTable[];
extern struct MojomPointerTableStructEntry activity_Activity_SetSystemUIVisibility_Request__PointerTable[];
extern struct MojomPointerTableStructEntry activity_PathService_GetCacheDir_Request__PointerTable[];
extern struct MojomPointerTableStructEntry activity_PathService_GetCacheDir_Response__PointerTable[];
extern struct MojomPointerTableStructEntry activity_PathService_GetAppDataDir_Request__PointerTable[];
extern struct MojomPointerTableStructEntry activity_PathService_GetAppDataDir_Response__PointerTable[];
extern struct MojomPointerTableStructEntry activity_PathService_GetFilesDir_Request__PointerTable[];
extern struct MojomPointerTableStructEntry activity_PathService_GetFilesDir_Response__PointerTable[];
extern struct MojomPointerTableStructEntry activity_UserFeedback_PerformHapticFeedback_Request__PointerTable[];
extern struct MojomPointerTableStructEntry activity_UserFeedback_PerformAuralFeedback_Request__PointerTable[];


#endif  // MOJO_SERVICES_ANDROID_INTERFACES_ACTIVITY_MOJOM_C_H_