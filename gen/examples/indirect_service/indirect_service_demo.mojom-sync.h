// NOTE: This file was generated by the Mojo bindings generator.
#ifndef EXAMPLES_INDIRECT_SERVICE_INDIRECT_SERVICE_DEMO_MOJOM_SYNC_H_
#define EXAMPLES_INDIRECT_SERVICE_INDIRECT_SERVICE_DEMO_MOJOM_SYNC_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/array.h"
#include "mojo/public/cpp/bindings/callback.h"
#include "mojo/public/cpp/bindings/interface_handle.h"
#include "mojo/public/cpp/bindings/interface_request.h"
#include "mojo/public/cpp/bindings/map.h"
#include "mojo/public/cpp/bindings/message_validator.h"
#include "mojo/public/cpp/bindings/string.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/bindings/lib/synchronous_connector.h"
#include "examples/indirect_service/indirect_service_demo.mojom-internal.h"
#include "examples/indirect_service/indirect_service_demo.mojom-common.h"


namespace mojo {
namespace examples {

// --- Synchronous interface declaration ---

class IntegerService_SynchronousProxy;
class IntegerService_Synchronous
  : public internal::IntegerService_Base {
 public:
  virtual ~IntegerService_Synchronous() override {}
  
  using Proxy_ = IntegerService_SynchronousProxy;
  virtual bool Increment(
      int32_t* out_value)= 0;
};

class IntegerService_SynchronousProxy
    : public IntegerService_Synchronous {
 public:
  explicit IntegerService_SynchronousProxy(
      mojo::internal::SynchronousConnector* connector,
      mojo::internal::MessageValidatorList&& validators);
  bool Increment(int32_t* out_value) override;

 private:
  // |connector_| is passed to us, and is not owned by us.
  mojo::internal::SynchronousConnector* const connector_;
  mojo::internal::MessageValidatorList const validators_;
};

class IndirectIntegerService_SynchronousProxy;
class IndirectIntegerService_Synchronous
  : public internal::IndirectIntegerService_Base {
 public:
  virtual ~IndirectIntegerService_Synchronous() override {}
  
  using Proxy_ = IndirectIntegerService_SynchronousProxy;
  virtual bool Set(
      mojo::InterfaceHandle<IntegerService> in_service)const= 0;
  virtual bool Get(
      mojo::InterfaceRequest<IntegerService> in_service)const= 0;
};

class IndirectIntegerService_SynchronousProxy
    : public IndirectIntegerService_Synchronous {
 public:
  explicit IndirectIntegerService_SynchronousProxy(
      mojo::internal::SynchronousConnector* connector,
      mojo::internal::MessageValidatorList&& validators);
  bool Set(mojo::InterfaceHandle<IntegerService> in_service) const  override;
  bool Get(mojo::InterfaceRequest<IntegerService> in_service) const  override;

 private:
  // |connector_| is passed to us, and is not owned by us.
  mojo::internal::SynchronousConnector* const connector_;
  mojo::internal::MessageValidatorList const validators_;
};

}  // namespace examples
}  // namespace mojo

#endif  // EXAMPLES_INDIRECT_SERVICE_INDIRECT_SERVICE_DEMO_MOJOM_SYNC_H_
