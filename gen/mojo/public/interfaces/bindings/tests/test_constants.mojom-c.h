// This file was auto-generated by the C bindings generator.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_CONSTANTS_MOJOM_C_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_CONSTANTS_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.


// Forward declarations for structs.
struct mojo_test_StructWithConstants;
union mojo_test_StructWithConstantsPtr {
  struct mojo_test_StructWithConstants* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructWithConstantsPtr) == 8,
              "union mojo_test_StructWithConstantsPtr must be 8 bytes");

// Forward declarations for unions.
// Top level constants.
const bool mojo_test_kBoolValue;
const int8_t mojo_test_kInt8Value;
const uint8_t mojo_test_kUint8Value;
const int16_t mojo_test_kInt16Value;
const uint16_t mojo_test_kUint16Value;
const int32_t mojo_test_kInt32Value;
const uint32_t mojo_test_kUint32Value;
const int64_t mojo_test_kInt64Value;
const uint64_t mojo_test_kUint64Value;
const double mojo_test_kDoubleValue;
const double mojo_test_kDoubleInfinity;
const double mojo_test_kDoubleNegativeInfinity;
const double mojo_test_kDoubleNaN;
const float mojo_test_kFloatValue;
const float mojo_test_kFloatInfinity;
const float mojo_test_kFloatNegativeInfinity;
const float mojo_test_kFloatNaN;


// Top level enums.


// Union definitions.


// Struct definitions.
// -- mojo_test_StructWithConstants --
// Enums
// Constants
const int8_t mojo_test_StructWithConstants_kInt8Value;
const float mojo_test_StructWithConstants_kFloatValue;
// Struct definition
struct mojo_test_StructWithConstants {
  struct MojomStructHeader header_;
  
};

struct mojo_test_StructWithConstants* mojo_test_StructWithConstants_New(struct MojomBuffer* in_buffer);

void mojo_test_StructWithConstants_Init(
  struct mojo_test_StructWithConstants* in_data);

void mojo_test_StructWithConstants_CloseAllHandles(
  struct mojo_test_StructWithConstants* in_data);

struct mojo_test_StructWithConstants* mojo_test_StructWithConstants_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructWithConstants* in_data);

size_t mojo_test_StructWithConstants_ComputeSerializedSize(
  const struct mojo_test_StructWithConstants* in_data);

MojomValidationResult mojo_test_StructWithConstants_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructWithConstants_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructWithConstants_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);




// Interface definitions.
// --- mojo_test_InterfaceWithConstants ---
#define mojo_test_InterfaceWithConstants__ServiceName ((const char*)"")
#define mojo_test_InterfaceWithConstants__CurrentVersion ((uint32_t)0)

// Enums
// Constants
const uint32_t mojo_test_InterfaceWithConstants_kUint32Value;
const double mojo_test_InterfaceWithConstants_kDoubleValue;






// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry mojo_test_StructWithConstants__PointerTable[];


#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_CONSTANTS_MOJOM_C_H_