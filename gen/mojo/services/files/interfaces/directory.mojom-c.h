// This file was auto-generated by the C bindings generator.

#ifndef MOJO_SERVICES_FILES_INTERFACES_DIRECTORY_MOJOM_C_H_
#define MOJO_SERVICES_FILES_INTERFACES_DIRECTORY_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.
#include "mojo/services/files/interfaces/file.mojom-c.h"
#include "mojo/services/files/interfaces/types.mojom-c.h"


// Forward declarations for structs.
// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.


// Interface definitions.
// --- mojo_files_Directory ---
#define mojo_files_Directory__ServiceName ((const char*)"")
#define mojo_files_Directory__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: OpenDirectory

#define mojo_files_Directory_OpenDirectory__Ordinal \
    ((uint32_t)4)
#define mojo_files_Directory_OpenDirectory__MinVersion \
    ((uint32_t)0)

struct mojo_files_Directory_OpenDirectory_Request;
// -- mojo_files_Directory_OpenDirectory_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_OpenDirectory_Request {
  struct MojomStructHeader header_;
  union MojomStringPtr path;  // offset,bit = 0,0
  MojoHandle directory;  // offset,bit = 8,0
  uint32_t open_flags;  // offset,bit = 12,0
  uint8_t pad2_[4];  // padding
  
};

struct mojo_files_Directory_OpenDirectory_Request* mojo_files_Directory_OpenDirectory_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_OpenDirectory_Request_Init(
  struct mojo_files_Directory_OpenDirectory_Request* in_data);

void mojo_files_Directory_OpenDirectory_Request_CloseAllHandles(
  struct mojo_files_Directory_OpenDirectory_Request* in_data);

struct mojo_files_Directory_OpenDirectory_Request* mojo_files_Directory_OpenDirectory_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_OpenDirectory_Request* in_data);

size_t mojo_files_Directory_OpenDirectory_Request_ComputeSerializedSize(
  const struct mojo_files_Directory_OpenDirectory_Request* in_data);

MojomValidationResult mojo_files_Directory_OpenDirectory_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_OpenDirectory_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_OpenDirectory_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_Directory_OpenDirectory_Response;
// -- mojo_files_Directory_OpenDirectory_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_OpenDirectory_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  
};

struct mojo_files_Directory_OpenDirectory_Response* mojo_files_Directory_OpenDirectory_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_OpenDirectory_Response_Init(
  struct mojo_files_Directory_OpenDirectory_Response* in_data);

void mojo_files_Directory_OpenDirectory_Response_CloseAllHandles(
  struct mojo_files_Directory_OpenDirectory_Response* in_data);

struct mojo_files_Directory_OpenDirectory_Response* mojo_files_Directory_OpenDirectory_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_OpenDirectory_Response* in_data);

size_t mojo_files_Directory_OpenDirectory_Response_ComputeSerializedSize(
  const struct mojo_files_Directory_OpenDirectory_Response* in_data);

MojomValidationResult mojo_files_Directory_OpenDirectory_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_OpenDirectory_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_OpenDirectory_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Rename

#define mojo_files_Directory_Rename__Ordinal \
    ((uint32_t)5)
#define mojo_files_Directory_Rename__MinVersion \
    ((uint32_t)0)

struct mojo_files_Directory_Rename_Request;
// -- mojo_files_Directory_Rename_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_Rename_Request {
  struct MojomStructHeader header_;
  union MojomStringPtr path;  // offset,bit = 0,0
  union MojomStringPtr new_path;  // offset,bit = 8,0
  
};

struct mojo_files_Directory_Rename_Request* mojo_files_Directory_Rename_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_Rename_Request_Init(
  struct mojo_files_Directory_Rename_Request* in_data);

void mojo_files_Directory_Rename_Request_CloseAllHandles(
  struct mojo_files_Directory_Rename_Request* in_data);

struct mojo_files_Directory_Rename_Request* mojo_files_Directory_Rename_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_Rename_Request* in_data);

size_t mojo_files_Directory_Rename_Request_ComputeSerializedSize(
  const struct mojo_files_Directory_Rename_Request* in_data);

MojomValidationResult mojo_files_Directory_Rename_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_Rename_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_Rename_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_Directory_Rename_Response;
// -- mojo_files_Directory_Rename_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_Rename_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  
};

struct mojo_files_Directory_Rename_Response* mojo_files_Directory_Rename_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_Rename_Response_Init(
  struct mojo_files_Directory_Rename_Response* in_data);

void mojo_files_Directory_Rename_Response_CloseAllHandles(
  struct mojo_files_Directory_Rename_Response* in_data);

struct mojo_files_Directory_Rename_Response* mojo_files_Directory_Rename_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_Rename_Response* in_data);

size_t mojo_files_Directory_Rename_Response_ComputeSerializedSize(
  const struct mojo_files_Directory_Rename_Response* in_data);

MojomValidationResult mojo_files_Directory_Rename_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_Rename_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_Rename_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Delete

#define mojo_files_Directory_Delete__Ordinal \
    ((uint32_t)6)
#define mojo_files_Directory_Delete__MinVersion \
    ((uint32_t)0)

struct mojo_files_Directory_Delete_Request;
// -- mojo_files_Directory_Delete_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_Delete_Request {
  struct MojomStructHeader header_;
  union MojomStringPtr path;  // offset,bit = 0,0
  uint32_t delete_flags;  // offset,bit = 8,0
  
};

struct mojo_files_Directory_Delete_Request* mojo_files_Directory_Delete_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_Delete_Request_Init(
  struct mojo_files_Directory_Delete_Request* in_data);

void mojo_files_Directory_Delete_Request_CloseAllHandles(
  struct mojo_files_Directory_Delete_Request* in_data);

struct mojo_files_Directory_Delete_Request* mojo_files_Directory_Delete_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_Delete_Request* in_data);

size_t mojo_files_Directory_Delete_Request_ComputeSerializedSize(
  const struct mojo_files_Directory_Delete_Request* in_data);

MojomValidationResult mojo_files_Directory_Delete_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_Delete_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_Delete_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_Directory_Delete_Response;
// -- mojo_files_Directory_Delete_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_Delete_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  
};

struct mojo_files_Directory_Delete_Response* mojo_files_Directory_Delete_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_Delete_Response_Init(
  struct mojo_files_Directory_Delete_Response* in_data);

void mojo_files_Directory_Delete_Response_CloseAllHandles(
  struct mojo_files_Directory_Delete_Response* in_data);

struct mojo_files_Directory_Delete_Response* mojo_files_Directory_Delete_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_Delete_Response* in_data);

size_t mojo_files_Directory_Delete_Response_ComputeSerializedSize(
  const struct mojo_files_Directory_Delete_Response* in_data);

MojomValidationResult mojo_files_Directory_Delete_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_Delete_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_Delete_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Read

#define mojo_files_Directory_Read__Ordinal \
    ((uint32_t)0)
#define mojo_files_Directory_Read__MinVersion \
    ((uint32_t)0)

struct mojo_files_Directory_Read_Request;
// -- mojo_files_Directory_Read_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_Read_Request {
  struct MojomStructHeader header_;
  
};

struct mojo_files_Directory_Read_Request* mojo_files_Directory_Read_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_Read_Request_Init(
  struct mojo_files_Directory_Read_Request* in_data);

void mojo_files_Directory_Read_Request_CloseAllHandles(
  struct mojo_files_Directory_Read_Request* in_data);

struct mojo_files_Directory_Read_Request* mojo_files_Directory_Read_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_Read_Request* in_data);

size_t mojo_files_Directory_Read_Request_ComputeSerializedSize(
  const struct mojo_files_Directory_Read_Request* in_data);

MojomValidationResult mojo_files_Directory_Read_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_Read_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_Read_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_Directory_Read_Response;
// -- mojo_files_Directory_Read_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_Read_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  uint8_t pad0_[4];  // padding
  union MojomArrayPtr directory_contents;  // offset,bit = 8,0
  
};

struct mojo_files_Directory_Read_Response* mojo_files_Directory_Read_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_Read_Response_Init(
  struct mojo_files_Directory_Read_Response* in_data);

void mojo_files_Directory_Read_Response_CloseAllHandles(
  struct mojo_files_Directory_Read_Response* in_data);

struct mojo_files_Directory_Read_Response* mojo_files_Directory_Read_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_Read_Response* in_data);

size_t mojo_files_Directory_Read_Response_ComputeSerializedSize(
  const struct mojo_files_Directory_Read_Response* in_data);

MojomValidationResult mojo_files_Directory_Read_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_Read_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_Read_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Stat

#define mojo_files_Directory_Stat__Ordinal \
    ((uint32_t)1)
#define mojo_files_Directory_Stat__MinVersion \
    ((uint32_t)0)

struct mojo_files_Directory_Stat_Request;
// -- mojo_files_Directory_Stat_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_Stat_Request {
  struct MojomStructHeader header_;
  
};

struct mojo_files_Directory_Stat_Request* mojo_files_Directory_Stat_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_Stat_Request_Init(
  struct mojo_files_Directory_Stat_Request* in_data);

void mojo_files_Directory_Stat_Request_CloseAllHandles(
  struct mojo_files_Directory_Stat_Request* in_data);

struct mojo_files_Directory_Stat_Request* mojo_files_Directory_Stat_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_Stat_Request* in_data);

size_t mojo_files_Directory_Stat_Request_ComputeSerializedSize(
  const struct mojo_files_Directory_Stat_Request* in_data);

MojomValidationResult mojo_files_Directory_Stat_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_Stat_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_Stat_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_Directory_Stat_Response;
// -- mojo_files_Directory_Stat_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_Stat_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  uint8_t pad0_[4];  // padding
  union mojo_files_FileInformationPtr file_information;  // offset,bit = 8,0
  
};

struct mojo_files_Directory_Stat_Response* mojo_files_Directory_Stat_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_Stat_Response_Init(
  struct mojo_files_Directory_Stat_Response* in_data);

void mojo_files_Directory_Stat_Response_CloseAllHandles(
  struct mojo_files_Directory_Stat_Response* in_data);

struct mojo_files_Directory_Stat_Response* mojo_files_Directory_Stat_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_Stat_Response* in_data);

size_t mojo_files_Directory_Stat_Response_ComputeSerializedSize(
  const struct mojo_files_Directory_Stat_Response* in_data);

MojomValidationResult mojo_files_Directory_Stat_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_Stat_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_Stat_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Touch

#define mojo_files_Directory_Touch__Ordinal \
    ((uint32_t)2)
#define mojo_files_Directory_Touch__MinVersion \
    ((uint32_t)0)

struct mojo_files_Directory_Touch_Request;
// -- mojo_files_Directory_Touch_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_Touch_Request {
  struct MojomStructHeader header_;
  union mojo_files_TimespecOrNowPtr atime;  // offset,bit = 0,0
  union mojo_files_TimespecOrNowPtr mtime;  // offset,bit = 8,0
  
};

struct mojo_files_Directory_Touch_Request* mojo_files_Directory_Touch_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_Touch_Request_Init(
  struct mojo_files_Directory_Touch_Request* in_data);

void mojo_files_Directory_Touch_Request_CloseAllHandles(
  struct mojo_files_Directory_Touch_Request* in_data);

struct mojo_files_Directory_Touch_Request* mojo_files_Directory_Touch_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_Touch_Request* in_data);

size_t mojo_files_Directory_Touch_Request_ComputeSerializedSize(
  const struct mojo_files_Directory_Touch_Request* in_data);

MojomValidationResult mojo_files_Directory_Touch_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_Touch_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_Touch_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_Directory_Touch_Response;
// -- mojo_files_Directory_Touch_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_Touch_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  
};

struct mojo_files_Directory_Touch_Response* mojo_files_Directory_Touch_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_Touch_Response_Init(
  struct mojo_files_Directory_Touch_Response* in_data);

void mojo_files_Directory_Touch_Response_CloseAllHandles(
  struct mojo_files_Directory_Touch_Response* in_data);

struct mojo_files_Directory_Touch_Response* mojo_files_Directory_Touch_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_Touch_Response* in_data);

size_t mojo_files_Directory_Touch_Response_ComputeSerializedSize(
  const struct mojo_files_Directory_Touch_Response* in_data);

MojomValidationResult mojo_files_Directory_Touch_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_Touch_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_Touch_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: OpenFile

#define mojo_files_Directory_OpenFile__Ordinal \
    ((uint32_t)3)
#define mojo_files_Directory_OpenFile__MinVersion \
    ((uint32_t)0)

struct mojo_files_Directory_OpenFile_Request;
// -- mojo_files_Directory_OpenFile_Request --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_OpenFile_Request {
  struct MojomStructHeader header_;
  union MojomStringPtr path;  // offset,bit = 0,0
  MojoHandle file;  // offset,bit = 8,0
  uint32_t open_flags;  // offset,bit = 12,0
  uint8_t pad2_[4];  // padding
  
};

struct mojo_files_Directory_OpenFile_Request* mojo_files_Directory_OpenFile_Request_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_OpenFile_Request_Init(
  struct mojo_files_Directory_OpenFile_Request* in_data);

void mojo_files_Directory_OpenFile_Request_CloseAllHandles(
  struct mojo_files_Directory_OpenFile_Request* in_data);

struct mojo_files_Directory_OpenFile_Request* mojo_files_Directory_OpenFile_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_OpenFile_Request* in_data);

size_t mojo_files_Directory_OpenFile_Request_ComputeSerializedSize(
  const struct mojo_files_Directory_OpenFile_Request* in_data);

MojomValidationResult mojo_files_Directory_OpenFile_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_OpenFile_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_OpenFile_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_files_Directory_OpenFile_Response;
// -- mojo_files_Directory_OpenFile_Response --
// Enums
// Constants
// Struct definition
struct mojo_files_Directory_OpenFile_Response {
  struct MojomStructHeader header_;
  mojo_files_Error error;  // offset,bit = 0,0
  
};

struct mojo_files_Directory_OpenFile_Response* mojo_files_Directory_OpenFile_Response_New(struct MojomBuffer* in_buffer);

void mojo_files_Directory_OpenFile_Response_Init(
  struct mojo_files_Directory_OpenFile_Response* in_data);

void mojo_files_Directory_OpenFile_Response_CloseAllHandles(
  struct mojo_files_Directory_OpenFile_Response* in_data);

struct mojo_files_Directory_OpenFile_Response* mojo_files_Directory_OpenFile_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_files_Directory_OpenFile_Response* in_data);

size_t mojo_files_Directory_OpenFile_Response_ComputeSerializedSize(
  const struct mojo_files_Directory_OpenFile_Response* in_data);

MojomValidationResult mojo_files_Directory_OpenFile_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_files_Directory_OpenFile_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_files_Directory_OpenFile_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry mojo_files_Directory_Read_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_Read_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_Stat_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_Stat_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_Touch_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_Touch_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_OpenFile_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_OpenFile_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_OpenDirectory_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_OpenDirectory_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_Rename_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_Rename_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_Delete_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_files_Directory_Delete_Response__PointerTable[];


#endif  // MOJO_SERVICES_FILES_INTERFACES_DIRECTORY_MOJOM_C_H_