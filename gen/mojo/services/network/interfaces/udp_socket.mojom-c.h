// This file was auto-generated by the C bindings generator.

#ifndef MOJO_SERVICES_NETWORK_INTERFACES_UDP_SOCKET_MOJOM_C_H_
#define MOJO_SERVICES_NETWORK_INTERFACES_UDP_SOCKET_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.
#include "mojo/public/interfaces/network/network_error.mojom-c.h"
#include "mojo/services/network/interfaces/net_address.mojom-c.h"


// Forward declarations for structs.
// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.


// Interface definitions.
// --- mojo_UDPSocket ---
#define mojo_UDPSocket__ServiceName ((const char*)"")
#define mojo_UDPSocket__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: AllowAddressReuse

#define mojo_UDPSocket_AllowAddressReuse__Ordinal \
    ((uint32_t)0)
#define mojo_UDPSocket_AllowAddressReuse__MinVersion \
    ((uint32_t)0)

struct mojo_UDPSocket_AllowAddressReuse_Request;
// -- mojo_UDPSocket_AllowAddressReuse_Request --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_AllowAddressReuse_Request {
  struct MojomStructHeader header_;
  
};

struct mojo_UDPSocket_AllowAddressReuse_Request* mojo_UDPSocket_AllowAddressReuse_Request_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_AllowAddressReuse_Request_Init(
  struct mojo_UDPSocket_AllowAddressReuse_Request* in_data);

void mojo_UDPSocket_AllowAddressReuse_Request_CloseAllHandles(
  struct mojo_UDPSocket_AllowAddressReuse_Request* in_data);

struct mojo_UDPSocket_AllowAddressReuse_Request* mojo_UDPSocket_AllowAddressReuse_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_AllowAddressReuse_Request* in_data);

size_t mojo_UDPSocket_AllowAddressReuse_Request_ComputeSerializedSize(
  const struct mojo_UDPSocket_AllowAddressReuse_Request* in_data);

MojomValidationResult mojo_UDPSocket_AllowAddressReuse_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_AllowAddressReuse_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_AllowAddressReuse_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_UDPSocket_AllowAddressReuse_Response;
// -- mojo_UDPSocket_AllowAddressReuse_Response --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_AllowAddressReuse_Response {
  struct MojomStructHeader header_;
  union mojo_NetworkErrorPtr result;  // offset,bit = 0,0
  
};

struct mojo_UDPSocket_AllowAddressReuse_Response* mojo_UDPSocket_AllowAddressReuse_Response_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_AllowAddressReuse_Response_Init(
  struct mojo_UDPSocket_AllowAddressReuse_Response* in_data);

void mojo_UDPSocket_AllowAddressReuse_Response_CloseAllHandles(
  struct mojo_UDPSocket_AllowAddressReuse_Response* in_data);

struct mojo_UDPSocket_AllowAddressReuse_Response* mojo_UDPSocket_AllowAddressReuse_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_AllowAddressReuse_Response* in_data);

size_t mojo_UDPSocket_AllowAddressReuse_Response_ComputeSerializedSize(
  const struct mojo_UDPSocket_AllowAddressReuse_Response* in_data);

MojomValidationResult mojo_UDPSocket_AllowAddressReuse_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_AllowAddressReuse_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_AllowAddressReuse_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Bind

#define mojo_UDPSocket_Bind__Ordinal \
    ((uint32_t)1)
#define mojo_UDPSocket_Bind__MinVersion \
    ((uint32_t)0)

struct mojo_UDPSocket_Bind_Request;
// -- mojo_UDPSocket_Bind_Request --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_Bind_Request {
  struct MojomStructHeader header_;
  union mojo_NetAddressPtr addr;  // offset,bit = 0,0
  
};

struct mojo_UDPSocket_Bind_Request* mojo_UDPSocket_Bind_Request_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_Bind_Request_Init(
  struct mojo_UDPSocket_Bind_Request* in_data);

void mojo_UDPSocket_Bind_Request_CloseAllHandles(
  struct mojo_UDPSocket_Bind_Request* in_data);

struct mojo_UDPSocket_Bind_Request* mojo_UDPSocket_Bind_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_Bind_Request* in_data);

size_t mojo_UDPSocket_Bind_Request_ComputeSerializedSize(
  const struct mojo_UDPSocket_Bind_Request* in_data);

MojomValidationResult mojo_UDPSocket_Bind_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_Bind_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_Bind_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_UDPSocket_Bind_Response;
// -- mojo_UDPSocket_Bind_Response --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_Bind_Response {
  struct MojomStructHeader header_;
  union mojo_NetworkErrorPtr result;  // offset,bit = 0,0
  union mojo_NetAddressPtr bound_addr;  // offset,bit = 8,0
  MojoHandle receiver;  // offset,bit = 16,0
  
};

struct mojo_UDPSocket_Bind_Response* mojo_UDPSocket_Bind_Response_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_Bind_Response_Init(
  struct mojo_UDPSocket_Bind_Response* in_data);

void mojo_UDPSocket_Bind_Response_CloseAllHandles(
  struct mojo_UDPSocket_Bind_Response* in_data);

struct mojo_UDPSocket_Bind_Response* mojo_UDPSocket_Bind_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_Bind_Response* in_data);

size_t mojo_UDPSocket_Bind_Response_ComputeSerializedSize(
  const struct mojo_UDPSocket_Bind_Response* in_data);

MojomValidationResult mojo_UDPSocket_Bind_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_Bind_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_Bind_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Connect

#define mojo_UDPSocket_Connect__Ordinal \
    ((uint32_t)2)
#define mojo_UDPSocket_Connect__MinVersion \
    ((uint32_t)0)

struct mojo_UDPSocket_Connect_Request;
// -- mojo_UDPSocket_Connect_Request --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_Connect_Request {
  struct MojomStructHeader header_;
  union mojo_NetAddressPtr remote_addr;  // offset,bit = 0,0
  
};

struct mojo_UDPSocket_Connect_Request* mojo_UDPSocket_Connect_Request_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_Connect_Request_Init(
  struct mojo_UDPSocket_Connect_Request* in_data);

void mojo_UDPSocket_Connect_Request_CloseAllHandles(
  struct mojo_UDPSocket_Connect_Request* in_data);

struct mojo_UDPSocket_Connect_Request* mojo_UDPSocket_Connect_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_Connect_Request* in_data);

size_t mojo_UDPSocket_Connect_Request_ComputeSerializedSize(
  const struct mojo_UDPSocket_Connect_Request* in_data);

MojomValidationResult mojo_UDPSocket_Connect_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_Connect_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_Connect_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_UDPSocket_Connect_Response;
// -- mojo_UDPSocket_Connect_Response --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_Connect_Response {
  struct MojomStructHeader header_;
  union mojo_NetworkErrorPtr result;  // offset,bit = 0,0
  union mojo_NetAddressPtr local_addr;  // offset,bit = 8,0
  MojoHandle receiver;  // offset,bit = 16,0
  
};

struct mojo_UDPSocket_Connect_Response* mojo_UDPSocket_Connect_Response_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_Connect_Response_Init(
  struct mojo_UDPSocket_Connect_Response* in_data);

void mojo_UDPSocket_Connect_Response_CloseAllHandles(
  struct mojo_UDPSocket_Connect_Response* in_data);

struct mojo_UDPSocket_Connect_Response* mojo_UDPSocket_Connect_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_Connect_Response* in_data);

size_t mojo_UDPSocket_Connect_Response_ComputeSerializedSize(
  const struct mojo_UDPSocket_Connect_Response* in_data);

MojomValidationResult mojo_UDPSocket_Connect_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_Connect_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_Connect_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: SetSendBufferSize

#define mojo_UDPSocket_SetSendBufferSize__Ordinal \
    ((uint32_t)3)
#define mojo_UDPSocket_SetSendBufferSize__MinVersion \
    ((uint32_t)0)

struct mojo_UDPSocket_SetSendBufferSize_Request;
// -- mojo_UDPSocket_SetSendBufferSize_Request --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_SetSendBufferSize_Request {
  struct MojomStructHeader header_;
  uint32_t size;  // offset,bit = 0,0
  
};

struct mojo_UDPSocket_SetSendBufferSize_Request* mojo_UDPSocket_SetSendBufferSize_Request_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_SetSendBufferSize_Request_Init(
  struct mojo_UDPSocket_SetSendBufferSize_Request* in_data);

void mojo_UDPSocket_SetSendBufferSize_Request_CloseAllHandles(
  struct mojo_UDPSocket_SetSendBufferSize_Request* in_data);

struct mojo_UDPSocket_SetSendBufferSize_Request* mojo_UDPSocket_SetSendBufferSize_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_SetSendBufferSize_Request* in_data);

size_t mojo_UDPSocket_SetSendBufferSize_Request_ComputeSerializedSize(
  const struct mojo_UDPSocket_SetSendBufferSize_Request* in_data);

MojomValidationResult mojo_UDPSocket_SetSendBufferSize_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_SetSendBufferSize_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_SetSendBufferSize_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_UDPSocket_SetSendBufferSize_Response;
// -- mojo_UDPSocket_SetSendBufferSize_Response --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_SetSendBufferSize_Response {
  struct MojomStructHeader header_;
  union mojo_NetworkErrorPtr result;  // offset,bit = 0,0
  
};

struct mojo_UDPSocket_SetSendBufferSize_Response* mojo_UDPSocket_SetSendBufferSize_Response_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_SetSendBufferSize_Response_Init(
  struct mojo_UDPSocket_SetSendBufferSize_Response* in_data);

void mojo_UDPSocket_SetSendBufferSize_Response_CloseAllHandles(
  struct mojo_UDPSocket_SetSendBufferSize_Response* in_data);

struct mojo_UDPSocket_SetSendBufferSize_Response* mojo_UDPSocket_SetSendBufferSize_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_SetSendBufferSize_Response* in_data);

size_t mojo_UDPSocket_SetSendBufferSize_Response_ComputeSerializedSize(
  const struct mojo_UDPSocket_SetSendBufferSize_Response* in_data);

MojomValidationResult mojo_UDPSocket_SetSendBufferSize_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_SetSendBufferSize_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_SetSendBufferSize_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: SetReceiveBufferSize

#define mojo_UDPSocket_SetReceiveBufferSize__Ordinal \
    ((uint32_t)4)
#define mojo_UDPSocket_SetReceiveBufferSize__MinVersion \
    ((uint32_t)0)

struct mojo_UDPSocket_SetReceiveBufferSize_Request;
// -- mojo_UDPSocket_SetReceiveBufferSize_Request --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_SetReceiveBufferSize_Request {
  struct MojomStructHeader header_;
  uint32_t size;  // offset,bit = 0,0
  
};

struct mojo_UDPSocket_SetReceiveBufferSize_Request* mojo_UDPSocket_SetReceiveBufferSize_Request_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_SetReceiveBufferSize_Request_Init(
  struct mojo_UDPSocket_SetReceiveBufferSize_Request* in_data);

void mojo_UDPSocket_SetReceiveBufferSize_Request_CloseAllHandles(
  struct mojo_UDPSocket_SetReceiveBufferSize_Request* in_data);

struct mojo_UDPSocket_SetReceiveBufferSize_Request* mojo_UDPSocket_SetReceiveBufferSize_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_SetReceiveBufferSize_Request* in_data);

size_t mojo_UDPSocket_SetReceiveBufferSize_Request_ComputeSerializedSize(
  const struct mojo_UDPSocket_SetReceiveBufferSize_Request* in_data);

MojomValidationResult mojo_UDPSocket_SetReceiveBufferSize_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_SetReceiveBufferSize_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_SetReceiveBufferSize_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_UDPSocket_SetReceiveBufferSize_Response;
// -- mojo_UDPSocket_SetReceiveBufferSize_Response --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_SetReceiveBufferSize_Response {
  struct MojomStructHeader header_;
  union mojo_NetworkErrorPtr result;  // offset,bit = 0,0
  
};

struct mojo_UDPSocket_SetReceiveBufferSize_Response* mojo_UDPSocket_SetReceiveBufferSize_Response_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_SetReceiveBufferSize_Response_Init(
  struct mojo_UDPSocket_SetReceiveBufferSize_Response* in_data);

void mojo_UDPSocket_SetReceiveBufferSize_Response_CloseAllHandles(
  struct mojo_UDPSocket_SetReceiveBufferSize_Response* in_data);

struct mojo_UDPSocket_SetReceiveBufferSize_Response* mojo_UDPSocket_SetReceiveBufferSize_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_SetReceiveBufferSize_Response* in_data);

size_t mojo_UDPSocket_SetReceiveBufferSize_Response_ComputeSerializedSize(
  const struct mojo_UDPSocket_SetReceiveBufferSize_Response* in_data);

MojomValidationResult mojo_UDPSocket_SetReceiveBufferSize_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_SetReceiveBufferSize_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_SetReceiveBufferSize_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: NegotiateMaxPendingSendRequests

#define mojo_UDPSocket_NegotiateMaxPendingSendRequests__Ordinal \
    ((uint32_t)5)
#define mojo_UDPSocket_NegotiateMaxPendingSendRequests__MinVersion \
    ((uint32_t)0)

struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request;
// -- mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request {
  struct MojomStructHeader header_;
  uint32_t requested_size;  // offset,bit = 0,0
  
};

struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request* mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request_Init(
  struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request* in_data);

void mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request_CloseAllHandles(
  struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request* in_data);

struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request* mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request* in_data);

size_t mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request_ComputeSerializedSize(
  const struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request* in_data);

MojomValidationResult mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response;
// -- mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response {
  struct MojomStructHeader header_;
  uint32_t actual_size;  // offset,bit = 0,0
  
};

struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response* mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response_Init(
  struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response* in_data);

void mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response_CloseAllHandles(
  struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response* in_data);

struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response* mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response* in_data);

size_t mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response_ComputeSerializedSize(
  const struct mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response* in_data);

MojomValidationResult mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: ReceiveMore

#define mojo_UDPSocket_ReceiveMore__Ordinal \
    ((uint32_t)6)
#define mojo_UDPSocket_ReceiveMore__MinVersion \
    ((uint32_t)0)

struct mojo_UDPSocket_ReceiveMore_Request;
// -- mojo_UDPSocket_ReceiveMore_Request --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_ReceiveMore_Request {
  struct MojomStructHeader header_;
  uint32_t datagram_number;  // offset,bit = 0,0
  
};

struct mojo_UDPSocket_ReceiveMore_Request* mojo_UDPSocket_ReceiveMore_Request_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_ReceiveMore_Request_Init(
  struct mojo_UDPSocket_ReceiveMore_Request* in_data);

void mojo_UDPSocket_ReceiveMore_Request_CloseAllHandles(
  struct mojo_UDPSocket_ReceiveMore_Request* in_data);

struct mojo_UDPSocket_ReceiveMore_Request* mojo_UDPSocket_ReceiveMore_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_ReceiveMore_Request* in_data);

size_t mojo_UDPSocket_ReceiveMore_Request_ComputeSerializedSize(
  const struct mojo_UDPSocket_ReceiveMore_Request* in_data);

MojomValidationResult mojo_UDPSocket_ReceiveMore_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_ReceiveMore_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_ReceiveMore_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: SendTo

#define mojo_UDPSocket_SendTo__Ordinal \
    ((uint32_t)7)
#define mojo_UDPSocket_SendTo__MinVersion \
    ((uint32_t)0)

struct mojo_UDPSocket_SendTo_Request;
// -- mojo_UDPSocket_SendTo_Request --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_SendTo_Request {
  struct MojomStructHeader header_;
  union mojo_NetAddressPtr dest_addr;  // offset,bit = 0,0
  union MojomArrayPtr data;  // offset,bit = 8,0
  
};

struct mojo_UDPSocket_SendTo_Request* mojo_UDPSocket_SendTo_Request_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_SendTo_Request_Init(
  struct mojo_UDPSocket_SendTo_Request* in_data);

void mojo_UDPSocket_SendTo_Request_CloseAllHandles(
  struct mojo_UDPSocket_SendTo_Request* in_data);

struct mojo_UDPSocket_SendTo_Request* mojo_UDPSocket_SendTo_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_SendTo_Request* in_data);

size_t mojo_UDPSocket_SendTo_Request_ComputeSerializedSize(
  const struct mojo_UDPSocket_SendTo_Request* in_data);

MojomValidationResult mojo_UDPSocket_SendTo_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_SendTo_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_SendTo_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_UDPSocket_SendTo_Response;
// -- mojo_UDPSocket_SendTo_Response --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocket_SendTo_Response {
  struct MojomStructHeader header_;
  union mojo_NetworkErrorPtr result;  // offset,bit = 0,0
  
};

struct mojo_UDPSocket_SendTo_Response* mojo_UDPSocket_SendTo_Response_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocket_SendTo_Response_Init(
  struct mojo_UDPSocket_SendTo_Response* in_data);

void mojo_UDPSocket_SendTo_Response_CloseAllHandles(
  struct mojo_UDPSocket_SendTo_Response* in_data);

struct mojo_UDPSocket_SendTo_Response* mojo_UDPSocket_SendTo_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocket_SendTo_Response* in_data);

size_t mojo_UDPSocket_SendTo_Response_ComputeSerializedSize(
  const struct mojo_UDPSocket_SendTo_Response* in_data);

MojomValidationResult mojo_UDPSocket_SendTo_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocket_SendTo_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocket_SendTo_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);





// --- mojo_UDPSocketReceiver ---
#define mojo_UDPSocketReceiver__ServiceName ((const char*)"")
#define mojo_UDPSocketReceiver__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: OnReceived

#define mojo_UDPSocketReceiver_OnReceived__Ordinal \
    ((uint32_t)0)
#define mojo_UDPSocketReceiver_OnReceived__MinVersion \
    ((uint32_t)0)

struct mojo_UDPSocketReceiver_OnReceived_Request;
// -- mojo_UDPSocketReceiver_OnReceived_Request --
// Enums
// Constants
// Struct definition
struct mojo_UDPSocketReceiver_OnReceived_Request {
  struct MojomStructHeader header_;
  union mojo_NetworkErrorPtr result;  // offset,bit = 0,0
  union mojo_NetAddressPtr src_addr;  // offset,bit = 8,0
  union MojomArrayPtr data;  // offset,bit = 16,0
  
};

struct mojo_UDPSocketReceiver_OnReceived_Request* mojo_UDPSocketReceiver_OnReceived_Request_New(struct MojomBuffer* in_buffer);

void mojo_UDPSocketReceiver_OnReceived_Request_Init(
  struct mojo_UDPSocketReceiver_OnReceived_Request* in_data);

void mojo_UDPSocketReceiver_OnReceived_Request_CloseAllHandles(
  struct mojo_UDPSocketReceiver_OnReceived_Request* in_data);

struct mojo_UDPSocketReceiver_OnReceived_Request* mojo_UDPSocketReceiver_OnReceived_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_UDPSocketReceiver_OnReceived_Request* in_data);

size_t mojo_UDPSocketReceiver_OnReceived_Request_ComputeSerializedSize(
  const struct mojo_UDPSocketReceiver_OnReceived_Request* in_data);

MojomValidationResult mojo_UDPSocketReceiver_OnReceived_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_UDPSocketReceiver_OnReceived_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_UDPSocketReceiver_OnReceived_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry mojo_UDPSocket_AllowAddressReuse_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_AllowAddressReuse_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_Bind_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_Bind_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_Connect_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_Connect_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_SetSendBufferSize_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_SetSendBufferSize_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_SetReceiveBufferSize_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_SetReceiveBufferSize_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_NegotiateMaxPendingSendRequests_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_NegotiateMaxPendingSendRequests_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_ReceiveMore_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_SendTo_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocket_SendTo_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_UDPSocketReceiver_OnReceived_Request__PointerTable[];


#endif  // MOJO_SERVICES_NETWORK_INTERFACES_UDP_SOCKET_MOJOM_C_H_