// This file was auto-generated by the C bindings generator.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SERIALIZATION_TEST_STRUCTS_MOJOM_C_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SERIALIZATION_TEST_STRUCTS_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.


// Forward declarations for structs.
struct mojo_test_Struct1;
union mojo_test_Struct1Ptr {
  struct mojo_test_Struct1* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_Struct1Ptr) == 8,
              "union mojo_test_Struct1Ptr must be 8 bytes");

struct mojo_test_Struct2;
union mojo_test_Struct2Ptr {
  struct mojo_test_Struct2* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_Struct2Ptr) == 8,
              "union mojo_test_Struct2Ptr must be 8 bytes");

struct mojo_test_Struct3;
union mojo_test_Struct3Ptr {
  struct mojo_test_Struct3* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_Struct3Ptr) == 8,
              "union mojo_test_Struct3Ptr must be 8 bytes");

struct mojo_test_Struct4;
union mojo_test_Struct4Ptr {
  struct mojo_test_Struct4* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_Struct4Ptr) == 8,
              "union mojo_test_Struct4Ptr must be 8 bytes");

struct mojo_test_Struct5;
union mojo_test_Struct5Ptr {
  struct mojo_test_Struct5* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_Struct5Ptr) == 8,
              "union mojo_test_Struct5Ptr must be 8 bytes");

struct mojo_test_Struct6;
union mojo_test_Struct6Ptr {
  struct mojo_test_Struct6* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_Struct6Ptr) == 8,
              "union mojo_test_Struct6Ptr must be 8 bytes");

struct mojo_test_StructOfNullables;
union mojo_test_StructOfNullablesPtr {
  struct mojo_test_StructOfNullables* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructOfNullablesPtr) == 8,
              "union mojo_test_StructOfNullablesPtr must be 8 bytes");

// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.
// -- mojo_test_Struct1 --
// Enums
// Constants
// Struct definition
struct mojo_test_Struct1 {
  struct MojomStructHeader header_;
  uint8_t i;  // offset,bit = 0,0
  
};

struct mojo_test_Struct1* mojo_test_Struct1_New(struct MojomBuffer* in_buffer);

void mojo_test_Struct1_Init(
  struct mojo_test_Struct1* in_data);

void mojo_test_Struct1_CloseAllHandles(
  struct mojo_test_Struct1* in_data);

struct mojo_test_Struct1* mojo_test_Struct1_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_Struct1* in_data);

size_t mojo_test_Struct1_ComputeSerializedSize(
  const struct mojo_test_Struct1* in_data);

MojomValidationResult mojo_test_Struct1_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_Struct1_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_Struct1_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_Struct2 --
// Enums
// Constants
// Struct definition
struct mojo_test_Struct2 {
  struct MojomStructHeader header_;
  MojoHandle hdl;  // offset,bit = 0,0
  
};

struct mojo_test_Struct2* mojo_test_Struct2_New(struct MojomBuffer* in_buffer);

void mojo_test_Struct2_Init(
  struct mojo_test_Struct2* in_data);

void mojo_test_Struct2_CloseAllHandles(
  struct mojo_test_Struct2* in_data);

struct mojo_test_Struct2* mojo_test_Struct2_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_Struct2* in_data);

size_t mojo_test_Struct2_ComputeSerializedSize(
  const struct mojo_test_Struct2* in_data);

MojomValidationResult mojo_test_Struct2_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_Struct2_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_Struct2_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_Struct3 --
// Enums
// Constants
// Struct definition
struct mojo_test_Struct3 {
  struct MojomStructHeader header_;
  union mojo_test_Struct1Ptr struct_1;  // offset,bit = 0,0
  
};

struct mojo_test_Struct3* mojo_test_Struct3_New(struct MojomBuffer* in_buffer);

void mojo_test_Struct3_Init(
  struct mojo_test_Struct3* in_data);

void mojo_test_Struct3_CloseAllHandles(
  struct mojo_test_Struct3* in_data);

struct mojo_test_Struct3* mojo_test_Struct3_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_Struct3* in_data);

size_t mojo_test_Struct3_ComputeSerializedSize(
  const struct mojo_test_Struct3* in_data);

MojomValidationResult mojo_test_Struct3_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_Struct3_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_Struct3_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_Struct4 --
// Enums
// Constants
// Struct definition
struct mojo_test_Struct4 {
  struct MojomStructHeader header_;
  union MojomArrayPtr data;  // offset,bit = 0,0
  
};

struct mojo_test_Struct4* mojo_test_Struct4_New(struct MojomBuffer* in_buffer);

void mojo_test_Struct4_Init(
  struct mojo_test_Struct4* in_data);

void mojo_test_Struct4_CloseAllHandles(
  struct mojo_test_Struct4* in_data);

struct mojo_test_Struct4* mojo_test_Struct4_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_Struct4* in_data);

size_t mojo_test_Struct4_ComputeSerializedSize(
  const struct mojo_test_Struct4* in_data);

MojomValidationResult mojo_test_Struct4_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_Struct4_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_Struct4_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_Struct5 --
// Enums
// Constants
// Struct definition
struct mojo_test_Struct5 {
  struct MojomStructHeader header_;
  union MojomArrayPtr pair;  // offset,bit = 0,0
  
};

struct mojo_test_Struct5* mojo_test_Struct5_New(struct MojomBuffer* in_buffer);

void mojo_test_Struct5_Init(
  struct mojo_test_Struct5* in_data);

void mojo_test_Struct5_CloseAllHandles(
  struct mojo_test_Struct5* in_data);

struct mojo_test_Struct5* mojo_test_Struct5_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_Struct5* in_data);

size_t mojo_test_Struct5_ComputeSerializedSize(
  const struct mojo_test_Struct5* in_data);

MojomValidationResult mojo_test_Struct5_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_Struct5_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_Struct5_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_Struct6 --
// Enums
// Constants
// Struct definition
struct mojo_test_Struct6 {
  struct MojomStructHeader header_;
  union MojomStringPtr str;  // offset,bit = 0,0
  
};

struct mojo_test_Struct6* mojo_test_Struct6_New(struct MojomBuffer* in_buffer);

void mojo_test_Struct6_Init(
  struct mojo_test_Struct6* in_data);

void mojo_test_Struct6_CloseAllHandles(
  struct mojo_test_Struct6* in_data);

struct mojo_test_Struct6* mojo_test_Struct6_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_Struct6* in_data);

size_t mojo_test_Struct6_ComputeSerializedSize(
  const struct mojo_test_Struct6* in_data);

MojomValidationResult mojo_test_Struct6_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_Struct6_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_Struct6_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructOfNullables --
// Enums
// Constants
// Struct definition
struct mojo_test_StructOfNullables {
  struct MojomStructHeader header_;
  MojoHandle hdl;  // offset,bit = 0,0
  union mojo_test_Struct1Ptr struct_1;  // offset,bit = 8,0
  union MojomStringPtr str;  // offset,bit = 16,0
  
};

struct mojo_test_StructOfNullables* mojo_test_StructOfNullables_New(struct MojomBuffer* in_buffer);

void mojo_test_StructOfNullables_Init(
  struct mojo_test_StructOfNullables* in_data);

void mojo_test_StructOfNullables_CloseAllHandles(
  struct mojo_test_StructOfNullables* in_data);

struct mojo_test_StructOfNullables* mojo_test_StructOfNullables_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructOfNullables* in_data);

size_t mojo_test_StructOfNullables_ComputeSerializedSize(
  const struct mojo_test_StructOfNullables* in_data);

MojomValidationResult mojo_test_StructOfNullables_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructOfNullables_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructOfNullables_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);




// Interface definitions.


// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry mojo_test_Struct1__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_Struct2__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_Struct3__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_Struct4__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_Struct5__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_Struct6__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructOfNullables__PointerTable[];


#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SERIALIZATION_TEST_STRUCTS_MOJOM_C_H_