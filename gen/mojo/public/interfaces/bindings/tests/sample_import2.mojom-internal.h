// NOTE: This file was generated by the Mojo bindings generator.
#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_IMPORT2_MOJOM_INTERNAL_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_IMPORT2_MOJOM_INTERNAL_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/union_accessor.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/system/buffer.h"
#include "mojo/public/cpp/system/data_pipe.h"
#include "mojo/public/cpp/system/handle.h"
#include "mojo/public/cpp/system/message_pipe.h"
#include "mojo/public/interfaces/bindings/tests/sample_import.mojom-internal.h"

namespace mojo {
namespace internal {
class BoundsChecker;
}
}
namespace imported {

class Size;
class Thing;


namespace internal {

class Size_Data;
class Thing_Data;



#pragma pack(push, 1)


class Size_Data {
 public:
  static Size_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t width;
  int32_t height;

 private:
  Size_Data();
  ~Size_Data() = delete;
};
static_assert(sizeof(Size_Data) == 16,
              "Bad sizeof(Size_Data)");

class Thing_Data {
 public:
  static Thing_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t shape;
  int32_t color;
  mojo::internal::StructPointer<imported::internal::Point_Data> location;
  mojo::internal::StructPointer<internal::Size_Data> size;

 private:
  Thing_Data();
  ~Thing_Data() = delete;
};
static_assert(sizeof(Thing_Data) == 32,
              "Bad sizeof(Thing_Data)");


#pragma pack(pop)

}  // namespace internal
}  // namespace imported

#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_IMPORT2_MOJOM_INTERNAL_H_
