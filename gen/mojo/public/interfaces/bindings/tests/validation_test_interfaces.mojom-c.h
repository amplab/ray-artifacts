// This file was auto-generated by the C bindings generator.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_VALIDATION_TEST_INTERFACES_MOJOM_C_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_VALIDATION_TEST_INTERFACES_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.


// Forward declarations for structs.
struct mojo_test_StructA;
union mojo_test_StructAPtr {
  struct mojo_test_StructA* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructAPtr) == 8,
              "union mojo_test_StructAPtr must be 8 bytes");

struct mojo_test_StructB;
union mojo_test_StructBPtr {
  struct mojo_test_StructB* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructBPtr) == 8,
              "union mojo_test_StructBPtr must be 8 bytes");

struct mojo_test_StructC;
union mojo_test_StructCPtr {
  struct mojo_test_StructC* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructCPtr) == 8,
              "union mojo_test_StructCPtr must be 8 bytes");

struct mojo_test_StructD;
union mojo_test_StructDPtr {
  struct mojo_test_StructD* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructDPtr) == 8,
              "union mojo_test_StructDPtr must be 8 bytes");

struct mojo_test_StructE;
union mojo_test_StructEPtr {
  struct mojo_test_StructE* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructEPtr) == 8,
              "union mojo_test_StructEPtr must be 8 bytes");

struct mojo_test_StructF;
union mojo_test_StructFPtr {
  struct mojo_test_StructF* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructFPtr) == 8,
              "union mojo_test_StructFPtr must be 8 bytes");

struct mojo_test_StructG;
union mojo_test_StructGPtr {
  struct mojo_test_StructG* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructGPtr) == 8,
              "union mojo_test_StructGPtr must be 8 bytes");

struct mojo_test_StructH;
union mojo_test_StructHPtr {
  struct mojo_test_StructH* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructHPtr) == 8,
              "union mojo_test_StructHPtr must be 8 bytes");

struct mojo_test_BasicStruct;
union mojo_test_BasicStructPtr {
  struct mojo_test_BasicStruct* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_BasicStructPtr) == 8,
              "union mojo_test_BasicStructPtr must be 8 bytes");

struct mojo_test_StructWithEnum;
union mojo_test_StructWithEnumPtr {
  struct mojo_test_StructWithEnum* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructWithEnumPtr) == 8,
              "union mojo_test_StructWithEnumPtr must be 8 bytes");

// Forward declarations for unions.
struct mojo_test_UnionA;
union mojo_test_UnionAPtr {
  struct mojo_test_UnionA* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_UnionAPtr) == 8,
             "union mojo_test_UnionA must be 8 bytes");

struct mojo_test_UnionB;
union mojo_test_UnionBPtr {
  struct mojo_test_UnionB* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_UnionBPtr) == 8,
             "union mojo_test_UnionB must be 8 bytes");

// Top level constants.


// Top level enums.
typedef uint32_t mojo_test_BasicEnum;
enum mojo_test_BasicEnum_Enum {
  mojo_test_BasicEnum_A = 0,
  mojo_test_BasicEnum_B = 1,
  mojo_test_BasicEnum_C = 0,
  mojo_test_BasicEnum_D = -3,
  mojo_test_BasicEnum_E = 10,
  
  mojo_test_BasicEnum__UNKNOWN__ = 0xFFFFFFFF,
};



// Union definitions.
// -- mojo_test_UnionA --
// Enum describing the union tags.
typedef uint32_t mojo_test_UnionA_Tag;
enum mojo_test_UnionA_Tag_Enum {
  mojo_test_UnionA_Tag_a = 0,
  mojo_test_UnionA_Tag_b = 1,
  mojo_test_UnionA_Tag_c = 2,
  mojo_test_UnionA_Tag_d = 3,
  mojo_test_UnionA_Tag_e = 4,
  mojo_test_UnionA_Tag_f = 5,
  mojo_test_UnionA_Tag_g = 6,
  mojo_test_UnionA_Tag_h = 7,
  mojo_test_UnionA_Tag_i = 8,
  mojo_test_UnionA_Tag_j = 9,
  
  mojo_test_UnionA_Tag__UNKNOWN__ = 0xFFFFFFFF,
};


struct mojo_test_UnionA {
  uint32_t size;
  mojo_test_UnionA_Tag tag;
  
  union {
    uint16_t f_a;
    uint32_t f_b;
    union mojo_test_StructAPtr f_c;
    union MojomArrayPtr f_d;
    union MojomMapPtr f_e;
    union mojo_test_UnionBPtr f_f;
    union mojo_test_StructAPtr f_g;
    union MojomArrayPtr f_h;
    union MojomMapPtr f_i;
    union mojo_test_UnionBPtr f_j;
    
    uint64_t unknown;
  } data;
};

MOJO_STATIC_ASSERT(sizeof(struct mojo_test_UnionA) == 16,
             "struct mojo_test_UnionA must be 16 bytes");

// -- mojo_test_UnionB --
// Enum describing the union tags.
typedef uint32_t mojo_test_UnionB_Tag;
enum mojo_test_UnionB_Tag_Enum {
  mojo_test_UnionB_Tag_a = 0,
  mojo_test_UnionB_Tag_b = 1,
  mojo_test_UnionB_Tag_c = 2,
  mojo_test_UnionB_Tag_d = 3,
  
  mojo_test_UnionB_Tag__UNKNOWN__ = 0xFFFFFFFF,
};


struct mojo_test_UnionB {
  uint32_t size;
  mojo_test_UnionB_Tag tag;
  
  union {
    uint16_t f_a;
    uint32_t f_b;
    uint64_t f_c;
    uint32_t f_d;
    
    uint64_t unknown;
  } data;
};

MOJO_STATIC_ASSERT(sizeof(struct mojo_test_UnionB) == 16,
             "struct mojo_test_UnionB must be 16 bytes");



// Struct definitions.
// -- mojo_test_StructA --
// Enums
// Constants
// Struct definition
struct mojo_test_StructA {
  struct MojomStructHeader header_;
  uint64_t i;  // offset,bit = 0,0
  
};

struct mojo_test_StructA* mojo_test_StructA_New(struct MojomBuffer* in_buffer);

void mojo_test_StructA_Init(
  struct mojo_test_StructA* in_data);

void mojo_test_StructA_CloseAllHandles(
  struct mojo_test_StructA* in_data);

struct mojo_test_StructA* mojo_test_StructA_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructA* in_data);

size_t mojo_test_StructA_ComputeSerializedSize(
  const struct mojo_test_StructA* in_data);

MojomValidationResult mojo_test_StructA_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructA_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructA_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructB --
// Enums
// Constants
// Struct definition
struct mojo_test_StructB {
  struct MojomStructHeader header_;
  union mojo_test_StructAPtr struct_a;  // offset,bit = 0,0
  
};

struct mojo_test_StructB* mojo_test_StructB_New(struct MojomBuffer* in_buffer);

void mojo_test_StructB_Init(
  struct mojo_test_StructB* in_data);

void mojo_test_StructB_CloseAllHandles(
  struct mojo_test_StructB* in_data);

struct mojo_test_StructB* mojo_test_StructB_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructB* in_data);

size_t mojo_test_StructB_ComputeSerializedSize(
  const struct mojo_test_StructB* in_data);

MojomValidationResult mojo_test_StructB_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructB_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructB_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructC --
// Enums
// Constants
// Struct definition
struct mojo_test_StructC {
  struct MojomStructHeader header_;
  union MojomArrayPtr data;  // offset,bit = 0,0
  
};

struct mojo_test_StructC* mojo_test_StructC_New(struct MojomBuffer* in_buffer);

void mojo_test_StructC_Init(
  struct mojo_test_StructC* in_data);

void mojo_test_StructC_CloseAllHandles(
  struct mojo_test_StructC* in_data);

struct mojo_test_StructC* mojo_test_StructC_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructC* in_data);

size_t mojo_test_StructC_ComputeSerializedSize(
  const struct mojo_test_StructC* in_data);

MojomValidationResult mojo_test_StructC_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructC_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructC_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructD --
// Enums
// Constants
// Struct definition
struct mojo_test_StructD {
  struct MojomStructHeader header_;
  union MojomArrayPtr message_pipes;  // offset,bit = 0,0
  
};

struct mojo_test_StructD* mojo_test_StructD_New(struct MojomBuffer* in_buffer);

void mojo_test_StructD_Init(
  struct mojo_test_StructD* in_data);

void mojo_test_StructD_CloseAllHandles(
  struct mojo_test_StructD* in_data);

struct mojo_test_StructD* mojo_test_StructD_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructD* in_data);

size_t mojo_test_StructD_ComputeSerializedSize(
  const struct mojo_test_StructD* in_data);

MojomValidationResult mojo_test_StructD_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructD_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructD_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructE --
// Enums
// Constants
// Struct definition
struct mojo_test_StructE {
  struct MojomStructHeader header_;
  union mojo_test_StructDPtr struct_d;  // offset,bit = 0,0
  MojoHandle data_pipe_consumer;  // offset,bit = 8,0
  
};

struct mojo_test_StructE* mojo_test_StructE_New(struct MojomBuffer* in_buffer);

void mojo_test_StructE_Init(
  struct mojo_test_StructE* in_data);

void mojo_test_StructE_CloseAllHandles(
  struct mojo_test_StructE* in_data);

struct mojo_test_StructE* mojo_test_StructE_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructE* in_data);

size_t mojo_test_StructE_ComputeSerializedSize(
  const struct mojo_test_StructE* in_data);

MojomValidationResult mojo_test_StructE_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructE_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructE_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructF --
// Enums
// Constants
// Struct definition
struct mojo_test_StructF {
  struct MojomStructHeader header_;
  union MojomArrayPtr fixed_size_array;  // offset,bit = 0,0
  
};

struct mojo_test_StructF* mojo_test_StructF_New(struct MojomBuffer* in_buffer);

void mojo_test_StructF_Init(
  struct mojo_test_StructF* in_data);

void mojo_test_StructF_CloseAllHandles(
  struct mojo_test_StructF* in_data);

struct mojo_test_StructF* mojo_test_StructF_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructF* in_data);

size_t mojo_test_StructF_ComputeSerializedSize(
  const struct mojo_test_StructF* in_data);

MojomValidationResult mojo_test_StructF_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructF_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructF_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructG --
// Enums
// Constants
// Struct definition
struct mojo_test_StructG {
  struct MojomStructHeader header_;
  int32_t i;  // offset,bit = 0,0
  bool b : 1;  // offset,bit = 4,0
  uint8_t pad1_[3];  // padding
  union mojo_test_StructAPtr struct_a;  // offset,bit = 8,0
  union MojomStringPtr str;  // offset,bit = 16,0
  
};

struct mojo_test_StructG* mojo_test_StructG_New(struct MojomBuffer* in_buffer);

void mojo_test_StructG_Init(
  struct mojo_test_StructG* in_data);

void mojo_test_StructG_CloseAllHandles(
  struct mojo_test_StructG* in_data);

struct mojo_test_StructG* mojo_test_StructG_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructG* in_data);

size_t mojo_test_StructG_ComputeSerializedSize(
  const struct mojo_test_StructG* in_data);

MojomValidationResult mojo_test_StructG_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructG_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructG_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructH --
// Enums
// Constants
// Struct definition
struct mojo_test_StructH {
  struct MojomStructHeader header_;
  bool a : 1;  // offset,bit = 0,0
  uint8_t b;  // offset,bit = 1,0
  uint8_t pad1_[6];  // padding
  struct mojo_test_UnionA c;  // offset,bit = 8,0
  uint8_t pad2_[8];  // padding
  union MojomArrayPtr d;  // offset,bit = 24,0
  union MojomMapPtr e;  // offset,bit = 32,0
  
};

struct mojo_test_StructH* mojo_test_StructH_New(struct MojomBuffer* in_buffer);

void mojo_test_StructH_Init(
  struct mojo_test_StructH* in_data);

void mojo_test_StructH_CloseAllHandles(
  struct mojo_test_StructH* in_data);

struct mojo_test_StructH* mojo_test_StructH_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructH* in_data);

size_t mojo_test_StructH_ComputeSerializedSize(
  const struct mojo_test_StructH* in_data);

MojomValidationResult mojo_test_StructH_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructH_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructH_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_BasicStruct --
// Enums
// Constants
// Struct definition
struct mojo_test_BasicStruct {
  struct MojomStructHeader header_;
  int32_t a;  // offset,bit = 0,0
  
};

struct mojo_test_BasicStruct* mojo_test_BasicStruct_New(struct MojomBuffer* in_buffer);

void mojo_test_BasicStruct_Init(
  struct mojo_test_BasicStruct* in_data);

void mojo_test_BasicStruct_CloseAllHandles(
  struct mojo_test_BasicStruct* in_data);

struct mojo_test_BasicStruct* mojo_test_BasicStruct_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_BasicStruct* in_data);

size_t mojo_test_BasicStruct_ComputeSerializedSize(
  const struct mojo_test_BasicStruct* in_data);

MojomValidationResult mojo_test_BasicStruct_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_BasicStruct_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_BasicStruct_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructWithEnum --
// Enums
typedef uint32_t mojo_test_StructWithEnum_EnumWithin;
enum mojo_test_StructWithEnum_EnumWithin_Enum {
  mojo_test_StructWithEnum_EnumWithin_A = 0,
  mojo_test_StructWithEnum_EnumWithin_B = 1,
  mojo_test_StructWithEnum_EnumWithin_C = 2,
  mojo_test_StructWithEnum_EnumWithin_D = 3,
  
  mojo_test_StructWithEnum_EnumWithin__UNKNOWN__ = 0xFFFFFFFF,
};

// Constants
// Struct definition
struct mojo_test_StructWithEnum {
  struct MojomStructHeader header_;
  
};

struct mojo_test_StructWithEnum* mojo_test_StructWithEnum_New(struct MojomBuffer* in_buffer);

void mojo_test_StructWithEnum_Init(
  struct mojo_test_StructWithEnum* in_data);

void mojo_test_StructWithEnum_CloseAllHandles(
  struct mojo_test_StructWithEnum* in_data);

struct mojo_test_StructWithEnum* mojo_test_StructWithEnum_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructWithEnum* in_data);

size_t mojo_test_StructWithEnum_ComputeSerializedSize(
  const struct mojo_test_StructWithEnum* in_data);

MojomValidationResult mojo_test_StructWithEnum_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructWithEnum_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructWithEnum_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);




// Interface definitions.
// --- mojo_test_InterfaceA ---
#define mojo_test_InterfaceA__ServiceName ((const char*)"")
#define mojo_test_InterfaceA__CurrentVersion ((uint32_t)0)

// Enums
// Constants




// --- mojo_test_BoundsCheckTestInterface ---
#define mojo_test_BoundsCheckTestInterface__ServiceName ((const char*)"this.is.the.service.name.for.BoundsCheckTestInterface")
#define mojo_test_BoundsCheckTestInterface__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: Method0

#define mojo_test_BoundsCheckTestInterface_Method0__Ordinal \
    ((uint32_t)0)
#define mojo_test_BoundsCheckTestInterface_Method0__MinVersion \
    ((uint32_t)0)

struct mojo_test_BoundsCheckTestInterface_Method0_Request;
// -- mojo_test_BoundsCheckTestInterface_Method0_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_BoundsCheckTestInterface_Method0_Request {
  struct MojomStructHeader header_;
  uint8_t param0;  // offset,bit = 0,0
  
};

struct mojo_test_BoundsCheckTestInterface_Method0_Request* mojo_test_BoundsCheckTestInterface_Method0_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_BoundsCheckTestInterface_Method0_Request_Init(
  struct mojo_test_BoundsCheckTestInterface_Method0_Request* in_data);

void mojo_test_BoundsCheckTestInterface_Method0_Request_CloseAllHandles(
  struct mojo_test_BoundsCheckTestInterface_Method0_Request* in_data);

struct mojo_test_BoundsCheckTestInterface_Method0_Request* mojo_test_BoundsCheckTestInterface_Method0_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_BoundsCheckTestInterface_Method0_Request* in_data);

size_t mojo_test_BoundsCheckTestInterface_Method0_Request_ComputeSerializedSize(
  const struct mojo_test_BoundsCheckTestInterface_Method0_Request* in_data);

MojomValidationResult mojo_test_BoundsCheckTestInterface_Method0_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_BoundsCheckTestInterface_Method0_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_BoundsCheckTestInterface_Method0_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_test_BoundsCheckTestInterface_Method0_Response;
// -- mojo_test_BoundsCheckTestInterface_Method0_Response --
// Enums
// Constants
// Struct definition
struct mojo_test_BoundsCheckTestInterface_Method0_Response {
  struct MojomStructHeader header_;
  uint8_t param0;  // offset,bit = 0,0
  
};

struct mojo_test_BoundsCheckTestInterface_Method0_Response* mojo_test_BoundsCheckTestInterface_Method0_Response_New(struct MojomBuffer* in_buffer);

void mojo_test_BoundsCheckTestInterface_Method0_Response_Init(
  struct mojo_test_BoundsCheckTestInterface_Method0_Response* in_data);

void mojo_test_BoundsCheckTestInterface_Method0_Response_CloseAllHandles(
  struct mojo_test_BoundsCheckTestInterface_Method0_Response* in_data);

struct mojo_test_BoundsCheckTestInterface_Method0_Response* mojo_test_BoundsCheckTestInterface_Method0_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_BoundsCheckTestInterface_Method0_Response* in_data);

size_t mojo_test_BoundsCheckTestInterface_Method0_Response_ComputeSerializedSize(
  const struct mojo_test_BoundsCheckTestInterface_Method0_Response* in_data);

MojomValidationResult mojo_test_BoundsCheckTestInterface_Method0_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_BoundsCheckTestInterface_Method0_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_BoundsCheckTestInterface_Method0_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method1

#define mojo_test_BoundsCheckTestInterface_Method1__Ordinal \
    ((uint32_t)1)
#define mojo_test_BoundsCheckTestInterface_Method1__MinVersion \
    ((uint32_t)0)

struct mojo_test_BoundsCheckTestInterface_Method1_Request;
// -- mojo_test_BoundsCheckTestInterface_Method1_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_BoundsCheckTestInterface_Method1_Request {
  struct MojomStructHeader header_;
  uint8_t param0;  // offset,bit = 0,0
  
};

struct mojo_test_BoundsCheckTestInterface_Method1_Request* mojo_test_BoundsCheckTestInterface_Method1_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_BoundsCheckTestInterface_Method1_Request_Init(
  struct mojo_test_BoundsCheckTestInterface_Method1_Request* in_data);

void mojo_test_BoundsCheckTestInterface_Method1_Request_CloseAllHandles(
  struct mojo_test_BoundsCheckTestInterface_Method1_Request* in_data);

struct mojo_test_BoundsCheckTestInterface_Method1_Request* mojo_test_BoundsCheckTestInterface_Method1_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_BoundsCheckTestInterface_Method1_Request* in_data);

size_t mojo_test_BoundsCheckTestInterface_Method1_Request_ComputeSerializedSize(
  const struct mojo_test_BoundsCheckTestInterface_Method1_Request* in_data);

MojomValidationResult mojo_test_BoundsCheckTestInterface_Method1_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_BoundsCheckTestInterface_Method1_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_BoundsCheckTestInterface_Method1_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);





// --- mojo_test_ConformanceTestInterface ---
#define mojo_test_ConformanceTestInterface__ServiceName ((const char*)"")
#define mojo_test_ConformanceTestInterface__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: Method4

#define mojo_test_ConformanceTestInterface_Method4__Ordinal \
    ((uint32_t)4)
#define mojo_test_ConformanceTestInterface_Method4__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method4_Request;
// -- mojo_test_ConformanceTestInterface_Method4_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method4_Request {
  struct MojomStructHeader header_;
  union mojo_test_StructCPtr param0;  // offset,bit = 0,0
  union MojomArrayPtr param1;  // offset,bit = 8,0
  
};

struct mojo_test_ConformanceTestInterface_Method4_Request* mojo_test_ConformanceTestInterface_Method4_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method4_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method4_Request* in_data);

void mojo_test_ConformanceTestInterface_Method4_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method4_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method4_Request* mojo_test_ConformanceTestInterface_Method4_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method4_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method4_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method4_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method4_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method4_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method4_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method6

#define mojo_test_ConformanceTestInterface_Method6__Ordinal \
    ((uint32_t)6)
#define mojo_test_ConformanceTestInterface_Method6__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method6_Request;
// -- mojo_test_ConformanceTestInterface_Method6_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method6_Request {
  struct MojomStructHeader header_;
  union MojomArrayPtr param0;  // offset,bit = 0,0
  
};

struct mojo_test_ConformanceTestInterface_Method6_Request* mojo_test_ConformanceTestInterface_Method6_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method6_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method6_Request* in_data);

void mojo_test_ConformanceTestInterface_Method6_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method6_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method6_Request* mojo_test_ConformanceTestInterface_Method6_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method6_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method6_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method6_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method6_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method6_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method6_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method2

#define mojo_test_ConformanceTestInterface_Method2__Ordinal \
    ((uint32_t)2)
#define mojo_test_ConformanceTestInterface_Method2__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method2_Request;
// -- mojo_test_ConformanceTestInterface_Method2_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method2_Request {
  struct MojomStructHeader header_;
  union mojo_test_StructBPtr param0;  // offset,bit = 0,0
  union mojo_test_StructAPtr param1;  // offset,bit = 8,0
  
};

struct mojo_test_ConformanceTestInterface_Method2_Request* mojo_test_ConformanceTestInterface_Method2_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method2_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method2_Request* in_data);

void mojo_test_ConformanceTestInterface_Method2_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method2_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method2_Request* mojo_test_ConformanceTestInterface_Method2_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method2_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method2_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method2_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method2_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method2_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method2_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method12

#define mojo_test_ConformanceTestInterface_Method12__Ordinal \
    ((uint32_t)12)
#define mojo_test_ConformanceTestInterface_Method12__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method12_Request;
// -- mojo_test_ConformanceTestInterface_Method12_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method12_Request {
  struct MojomStructHeader header_;
  float param0;  // offset,bit = 0,0
  
};

struct mojo_test_ConformanceTestInterface_Method12_Request* mojo_test_ConformanceTestInterface_Method12_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method12_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method12_Request* in_data);

void mojo_test_ConformanceTestInterface_Method12_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method12_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method12_Request* mojo_test_ConformanceTestInterface_Method12_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method12_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method12_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method12_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method12_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method12_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method12_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_test_ConformanceTestInterface_Method12_Response;
// -- mojo_test_ConformanceTestInterface_Method12_Response --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method12_Response {
  struct MojomStructHeader header_;
  float param0;  // offset,bit = 0,0
  
};

struct mojo_test_ConformanceTestInterface_Method12_Response* mojo_test_ConformanceTestInterface_Method12_Response_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method12_Response_Init(
  struct mojo_test_ConformanceTestInterface_Method12_Response* in_data);

void mojo_test_ConformanceTestInterface_Method12_Response_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method12_Response* in_data);

struct mojo_test_ConformanceTestInterface_Method12_Response* mojo_test_ConformanceTestInterface_Method12_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method12_Response* in_data);

size_t mojo_test_ConformanceTestInterface_Method12_Response_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method12_Response* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method12_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method12_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method12_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method10

#define mojo_test_ConformanceTestInterface_Method10__Ordinal \
    ((uint32_t)10)
#define mojo_test_ConformanceTestInterface_Method10__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method10_Request;
// -- mojo_test_ConformanceTestInterface_Method10_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method10_Request {
  struct MojomStructHeader header_;
  union MojomMapPtr param0;  // offset,bit = 0,0
  
};

struct mojo_test_ConformanceTestInterface_Method10_Request* mojo_test_ConformanceTestInterface_Method10_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method10_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method10_Request* in_data);

void mojo_test_ConformanceTestInterface_Method10_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method10_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method10_Request* mojo_test_ConformanceTestInterface_Method10_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method10_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method10_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method10_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method10_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method10_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method10_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method5

#define mojo_test_ConformanceTestInterface_Method5__Ordinal \
    ((uint32_t)5)
#define mojo_test_ConformanceTestInterface_Method5__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method5_Request;
// -- mojo_test_ConformanceTestInterface_Method5_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method5_Request {
  struct MojomStructHeader header_;
  union mojo_test_StructEPtr param0;  // offset,bit = 0,0
  MojoHandle param1;  // offset,bit = 8,0
  
};

struct mojo_test_ConformanceTestInterface_Method5_Request* mojo_test_ConformanceTestInterface_Method5_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method5_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method5_Request* in_data);

void mojo_test_ConformanceTestInterface_Method5_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method5_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method5_Request* mojo_test_ConformanceTestInterface_Method5_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method5_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method5_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method5_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method5_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method5_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method5_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method7

#define mojo_test_ConformanceTestInterface_Method7__Ordinal \
    ((uint32_t)7)
#define mojo_test_ConformanceTestInterface_Method7__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method7_Request;
// -- mojo_test_ConformanceTestInterface_Method7_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method7_Request {
  struct MojomStructHeader header_;
  union mojo_test_StructFPtr param0;  // offset,bit = 0,0
  union MojomArrayPtr param1;  // offset,bit = 8,0
  
};

struct mojo_test_ConformanceTestInterface_Method7_Request* mojo_test_ConformanceTestInterface_Method7_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method7_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method7_Request* in_data);

void mojo_test_ConformanceTestInterface_Method7_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method7_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method7_Request* mojo_test_ConformanceTestInterface_Method7_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method7_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method7_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method7_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method7_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method7_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method7_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method8

#define mojo_test_ConformanceTestInterface_Method8__Ordinal \
    ((uint32_t)8)
#define mojo_test_ConformanceTestInterface_Method8__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method8_Request;
// -- mojo_test_ConformanceTestInterface_Method8_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method8_Request {
  struct MojomStructHeader header_;
  union MojomArrayPtr param0;  // offset,bit = 0,0
  
};

struct mojo_test_ConformanceTestInterface_Method8_Request* mojo_test_ConformanceTestInterface_Method8_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method8_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method8_Request* in_data);

void mojo_test_ConformanceTestInterface_Method8_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method8_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method8_Request* mojo_test_ConformanceTestInterface_Method8_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method8_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method8_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method8_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method8_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method8_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method8_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method11

#define mojo_test_ConformanceTestInterface_Method11__Ordinal \
    ((uint32_t)11)
#define mojo_test_ConformanceTestInterface_Method11__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method11_Request;
// -- mojo_test_ConformanceTestInterface_Method11_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method11_Request {
  struct MojomStructHeader header_;
  union mojo_test_StructGPtr param0;  // offset,bit = 0,0
  
};

struct mojo_test_ConformanceTestInterface_Method11_Request* mojo_test_ConformanceTestInterface_Method11_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method11_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method11_Request* in_data);

void mojo_test_ConformanceTestInterface_Method11_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method11_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method11_Request* mojo_test_ConformanceTestInterface_Method11_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method11_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method11_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method11_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method11_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method11_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method11_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method15

#define mojo_test_ConformanceTestInterface_Method15__Ordinal \
    ((uint32_t)15)
#define mojo_test_ConformanceTestInterface_Method15__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method15_Request;
// -- mojo_test_ConformanceTestInterface_Method15_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method15_Request {
  struct MojomStructHeader header_;
  union mojo_test_StructHPtr param0;  // offset,bit = 0,0
  
};

struct mojo_test_ConformanceTestInterface_Method15_Request* mojo_test_ConformanceTestInterface_Method15_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method15_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method15_Request* in_data);

void mojo_test_ConformanceTestInterface_Method15_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method15_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method15_Request* mojo_test_ConformanceTestInterface_Method15_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method15_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method15_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method15_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method15_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method15_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method15_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method0

#define mojo_test_ConformanceTestInterface_Method0__Ordinal \
    ((uint32_t)0)
#define mojo_test_ConformanceTestInterface_Method0__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method0_Request;
// -- mojo_test_ConformanceTestInterface_Method0_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method0_Request {
  struct MojomStructHeader header_;
  float param0;  // offset,bit = 0,0
  
};

struct mojo_test_ConformanceTestInterface_Method0_Request* mojo_test_ConformanceTestInterface_Method0_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method0_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method0_Request* in_data);

void mojo_test_ConformanceTestInterface_Method0_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method0_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method0_Request* mojo_test_ConformanceTestInterface_Method0_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method0_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method0_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method0_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method0_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method0_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method0_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method3

#define mojo_test_ConformanceTestInterface_Method3__Ordinal \
    ((uint32_t)3)
#define mojo_test_ConformanceTestInterface_Method3__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method3_Request;
// -- mojo_test_ConformanceTestInterface_Method3_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method3_Request {
  struct MojomStructHeader header_;
  union MojomArrayPtr param0;  // offset,bit = 0,0
  
};

struct mojo_test_ConformanceTestInterface_Method3_Request* mojo_test_ConformanceTestInterface_Method3_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method3_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method3_Request* in_data);

void mojo_test_ConformanceTestInterface_Method3_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method3_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method3_Request* mojo_test_ConformanceTestInterface_Method3_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method3_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method3_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method3_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method3_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method3_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method3_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method9

#define mojo_test_ConformanceTestInterface_Method9__Ordinal \
    ((uint32_t)9)
#define mojo_test_ConformanceTestInterface_Method9__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method9_Request;
// -- mojo_test_ConformanceTestInterface_Method9_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method9_Request {
  struct MojomStructHeader header_;
  union MojomArrayPtr param0;  // offset,bit = 0,0
  
};

struct mojo_test_ConformanceTestInterface_Method9_Request* mojo_test_ConformanceTestInterface_Method9_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method9_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method9_Request* in_data);

void mojo_test_ConformanceTestInterface_Method9_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method9_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method9_Request* mojo_test_ConformanceTestInterface_Method9_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method9_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method9_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method9_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method9_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method9_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method9_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method13

#define mojo_test_ConformanceTestInterface_Method13__Ordinal \
    ((uint32_t)13)
#define mojo_test_ConformanceTestInterface_Method13__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method13_Request;
// -- mojo_test_ConformanceTestInterface_Method13_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method13_Request {
  struct MojomStructHeader header_;
  struct MojomInterfaceData param0;  // offset,bit = 0,0
  uint32_t param1;  // offset,bit = 8,0
  struct MojomInterfaceData param2;  // offset,bit = 12,0
  uint8_t pad2_[4];  // padding
  
};

struct mojo_test_ConformanceTestInterface_Method13_Request* mojo_test_ConformanceTestInterface_Method13_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method13_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method13_Request* in_data);

void mojo_test_ConformanceTestInterface_Method13_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method13_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method13_Request* mojo_test_ConformanceTestInterface_Method13_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method13_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method13_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method13_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method13_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method13_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method13_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method14

#define mojo_test_ConformanceTestInterface_Method14__Ordinal \
    ((uint32_t)14)
#define mojo_test_ConformanceTestInterface_Method14__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method14_Request;
// -- mojo_test_ConformanceTestInterface_Method14_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method14_Request {
  struct MojomStructHeader header_;
  struct mojo_test_UnionA param0;  // offset,bit = 0,0
  
};

struct mojo_test_ConformanceTestInterface_Method14_Request* mojo_test_ConformanceTestInterface_Method14_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method14_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method14_Request* in_data);

void mojo_test_ConformanceTestInterface_Method14_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method14_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method14_Request* mojo_test_ConformanceTestInterface_Method14_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method14_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method14_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method14_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method14_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method14_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method14_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Method1

#define mojo_test_ConformanceTestInterface_Method1__Ordinal \
    ((uint32_t)1)
#define mojo_test_ConformanceTestInterface_Method1__MinVersion \
    ((uint32_t)0)

struct mojo_test_ConformanceTestInterface_Method1_Request;
// -- mojo_test_ConformanceTestInterface_Method1_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_ConformanceTestInterface_Method1_Request {
  struct MojomStructHeader header_;
  union mojo_test_StructAPtr param0;  // offset,bit = 0,0
  
};

struct mojo_test_ConformanceTestInterface_Method1_Request* mojo_test_ConformanceTestInterface_Method1_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_ConformanceTestInterface_Method1_Request_Init(
  struct mojo_test_ConformanceTestInterface_Method1_Request* in_data);

void mojo_test_ConformanceTestInterface_Method1_Request_CloseAllHandles(
  struct mojo_test_ConformanceTestInterface_Method1_Request* in_data);

struct mojo_test_ConformanceTestInterface_Method1_Request* mojo_test_ConformanceTestInterface_Method1_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_ConformanceTestInterface_Method1_Request* in_data);

size_t mojo_test_ConformanceTestInterface_Method1_Request_ComputeSerializedSize(
  const struct mojo_test_ConformanceTestInterface_Method1_Request* in_data);

MojomValidationResult mojo_test_ConformanceTestInterface_Method1_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method1_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_ConformanceTestInterface_Method1_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);





// --- mojo_test_IntegrationTestInterface ---
#define mojo_test_IntegrationTestInterface__ServiceName ((const char*)"")
#define mojo_test_IntegrationTestInterface__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: Method0

#define mojo_test_IntegrationTestInterface_Method0__Ordinal \
    ((uint32_t)0)
#define mojo_test_IntegrationTestInterface_Method0__MinVersion \
    ((uint32_t)0)

struct mojo_test_IntegrationTestInterface_Method0_Request;
// -- mojo_test_IntegrationTestInterface_Method0_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_IntegrationTestInterface_Method0_Request {
  struct MojomStructHeader header_;
  union mojo_test_BasicStructPtr param0;  // offset,bit = 0,0
  
};

struct mojo_test_IntegrationTestInterface_Method0_Request* mojo_test_IntegrationTestInterface_Method0_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_IntegrationTestInterface_Method0_Request_Init(
  struct mojo_test_IntegrationTestInterface_Method0_Request* in_data);

void mojo_test_IntegrationTestInterface_Method0_Request_CloseAllHandles(
  struct mojo_test_IntegrationTestInterface_Method0_Request* in_data);

struct mojo_test_IntegrationTestInterface_Method0_Request* mojo_test_IntegrationTestInterface_Method0_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_IntegrationTestInterface_Method0_Request* in_data);

size_t mojo_test_IntegrationTestInterface_Method0_Request_ComputeSerializedSize(
  const struct mojo_test_IntegrationTestInterface_Method0_Request* in_data);

MojomValidationResult mojo_test_IntegrationTestInterface_Method0_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_IntegrationTestInterface_Method0_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_IntegrationTestInterface_Method0_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct mojo_test_IntegrationTestInterface_Method0_Response;
// -- mojo_test_IntegrationTestInterface_Method0_Response --
// Enums
// Constants
// Struct definition
struct mojo_test_IntegrationTestInterface_Method0_Response {
  struct MojomStructHeader header_;
  union MojomArrayPtr param0;  // offset,bit = 0,0
  
};

struct mojo_test_IntegrationTestInterface_Method0_Response* mojo_test_IntegrationTestInterface_Method0_Response_New(struct MojomBuffer* in_buffer);

void mojo_test_IntegrationTestInterface_Method0_Response_Init(
  struct mojo_test_IntegrationTestInterface_Method0_Response* in_data);

void mojo_test_IntegrationTestInterface_Method0_Response_CloseAllHandles(
  struct mojo_test_IntegrationTestInterface_Method0_Response* in_data);

struct mojo_test_IntegrationTestInterface_Method0_Response* mojo_test_IntegrationTestInterface_Method0_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_IntegrationTestInterface_Method0_Response* in_data);

size_t mojo_test_IntegrationTestInterface_Method0_Response_ComputeSerializedSize(
  const struct mojo_test_IntegrationTestInterface_Method0_Response* in_data);

MojomValidationResult mojo_test_IntegrationTestInterface_Method0_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_IntegrationTestInterface_Method0_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_IntegrationTestInterface_Method0_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.

extern struct MojomPointerTableUnionEntry mojo_test_UnionA__PointerTable[];
extern struct MojomPointerTableUnionEntry mojo_test_UnionB__PointerTable[];


extern struct MojomPointerTableStructEntry mojo_test_StructA__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructB__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructC__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructD__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructE__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructF__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructG__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructH__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_BasicStruct__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructWithEnum__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_BoundsCheckTestInterface_Method0_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_BoundsCheckTestInterface_Method0_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_BoundsCheckTestInterface_Method1_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method0_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method5_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method7_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method8_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method11_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method15_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method1_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method3_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method9_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method13_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method14_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method2_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method4_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method6_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method10_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method12_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_ConformanceTestInterface_Method12_Response__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_IntegrationTestInterface_Method0_Request__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_IntegrationTestInterface_Method0_Response__PointerTable[];


#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_VALIDATION_TEST_INTERFACES_MOJOM_C_H_