// NOTE: This file was generated by the Mojo bindings generator.
#ifndef MOJO_SERVICES_GPU_INTERFACES_COMMAND_BUFFER_MOJOM_INTERNAL_H_
#define MOJO_SERVICES_GPU_INTERFACES_COMMAND_BUFFER_MOJOM_INTERNAL_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/union_accessor.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/system/buffer.h"
#include "mojo/public/cpp/system/data_pipe.h"
#include "mojo/public/cpp/system/handle.h"
#include "mojo/public/cpp/system/message_pipe.h"
#include "mojo/services/gpu/interfaces/gpu_capabilities.mojom-internal.h"

namespace mojo {
namespace internal {
class BoundsChecker;
}
}
namespace mojo {

class CommandBufferState;


namespace internal {

class CommandBufferState_Data;



#pragma pack(push, 1)


class CommandBufferState_Data {
 public:
  static CommandBufferState_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t num_entries;
  int32_t get_offset;
  int32_t put_offset;
  int32_t token;
  int32_t error;
  int32_t context_lost_reason;
  uint32_t generation;
  uint8_t padfinal_[4];

 private:
  CommandBufferState_Data();
  ~CommandBufferState_Data() = delete;
};
static_assert(sizeof(CommandBufferState_Data) == 40,
              "Bad sizeof(CommandBufferState_Data)");


class CommandBufferSyncClient_DidInitialize_Params_Data {
 public:
  static CommandBufferSyncClient_DidInitialize_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  uint8_t success : 1;
  uint8_t pad0_[7];
  mojo::internal::StructPointer<mojo::internal::GpuCapabilities_Data> capabilities;

 private:
  CommandBufferSyncClient_DidInitialize_Params_Data();
  ~CommandBufferSyncClient_DidInitialize_Params_Data() = delete;
};
static_assert(sizeof(CommandBufferSyncClient_DidInitialize_Params_Data) == 24,
              "Bad sizeof(CommandBufferSyncClient_DidInitialize_Params_Data)");


class CommandBufferSyncClient_DidMakeProgress_Params_Data {
 public:
  static CommandBufferSyncClient_DidMakeProgress_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StructPointer<internal::CommandBufferState_Data> state;

 private:
  CommandBufferSyncClient_DidMakeProgress_Params_Data();
  ~CommandBufferSyncClient_DidMakeProgress_Params_Data() = delete;
};
static_assert(sizeof(CommandBufferSyncClient_DidMakeProgress_Params_Data) == 16,
              "Bad sizeof(CommandBufferSyncClient_DidMakeProgress_Params_Data)");


class CommandBufferSyncPointClient_DidInsertSyncPoint_Params_Data {
 public:
  static CommandBufferSyncPointClient_DidInsertSyncPoint_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  uint32_t sync_point;
  uint8_t padfinal_[4];

 private:
  CommandBufferSyncPointClient_DidInsertSyncPoint_Params_Data();
  ~CommandBufferSyncPointClient_DidInsertSyncPoint_Params_Data() = delete;
};
static_assert(sizeof(CommandBufferSyncPointClient_DidInsertSyncPoint_Params_Data) == 16,
              "Bad sizeof(CommandBufferSyncPointClient_DidInsertSyncPoint_Params_Data)");


class CommandBufferLostContextObserver_DidLoseContext_Params_Data {
 public:
  static CommandBufferLostContextObserver_DidLoseContext_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t context_lost_reason;
  uint8_t padfinal_[4];

 private:
  CommandBufferLostContextObserver_DidLoseContext_Params_Data();
  ~CommandBufferLostContextObserver_DidLoseContext_Params_Data() = delete;
};
static_assert(sizeof(CommandBufferLostContextObserver_DidLoseContext_Params_Data) == 16,
              "Bad sizeof(CommandBufferLostContextObserver_DidLoseContext_Params_Data)");


class CommandBuffer_Initialize_Params_Data {
 public:
  static CommandBuffer_Initialize_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data sync_client;
  mojo::internal::Interface_Data sync_point_client;
  mojo::internal::Interface_Data lost_observer;
  mojo::SharedBufferHandle shared_state;
  uint8_t padfinal_[4];

 private:
  CommandBuffer_Initialize_Params_Data();
  ~CommandBuffer_Initialize_Params_Data() = delete;
};
static_assert(sizeof(CommandBuffer_Initialize_Params_Data) == 40,
              "Bad sizeof(CommandBuffer_Initialize_Params_Data)");


class CommandBuffer_SetGetBuffer_Params_Data {
 public:
  static CommandBuffer_SetGetBuffer_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t buffer;
  uint8_t padfinal_[4];

 private:
  CommandBuffer_SetGetBuffer_Params_Data();
  ~CommandBuffer_SetGetBuffer_Params_Data() = delete;
};
static_assert(sizeof(CommandBuffer_SetGetBuffer_Params_Data) == 16,
              "Bad sizeof(CommandBuffer_SetGetBuffer_Params_Data)");


class CommandBuffer_Flush_Params_Data {
 public:
  static CommandBuffer_Flush_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t put_offset;
  uint8_t padfinal_[4];

 private:
  CommandBuffer_Flush_Params_Data();
  ~CommandBuffer_Flush_Params_Data() = delete;
};
static_assert(sizeof(CommandBuffer_Flush_Params_Data) == 16,
              "Bad sizeof(CommandBuffer_Flush_Params_Data)");


class CommandBuffer_MakeProgress_Params_Data {
 public:
  static CommandBuffer_MakeProgress_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t last_get_offset;
  uint8_t padfinal_[4];

 private:
  CommandBuffer_MakeProgress_Params_Data();
  ~CommandBuffer_MakeProgress_Params_Data() = delete;
};
static_assert(sizeof(CommandBuffer_MakeProgress_Params_Data) == 16,
              "Bad sizeof(CommandBuffer_MakeProgress_Params_Data)");


class CommandBuffer_RegisterTransferBuffer_Params_Data {
 public:
  static CommandBuffer_RegisterTransferBuffer_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t id;
  mojo::SharedBufferHandle transfer_buffer;
  uint32_t size;
  uint8_t padfinal_[4];

 private:
  CommandBuffer_RegisterTransferBuffer_Params_Data();
  ~CommandBuffer_RegisterTransferBuffer_Params_Data() = delete;
};
static_assert(sizeof(CommandBuffer_RegisterTransferBuffer_Params_Data) == 24,
              "Bad sizeof(CommandBuffer_RegisterTransferBuffer_Params_Data)");


class CommandBuffer_DestroyTransferBuffer_Params_Data {
 public:
  static CommandBuffer_DestroyTransferBuffer_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t id;
  uint8_t padfinal_[4];

 private:
  CommandBuffer_DestroyTransferBuffer_Params_Data();
  ~CommandBuffer_DestroyTransferBuffer_Params_Data() = delete;
};
static_assert(sizeof(CommandBuffer_DestroyTransferBuffer_Params_Data) == 16,
              "Bad sizeof(CommandBuffer_DestroyTransferBuffer_Params_Data)");


class CommandBuffer_InsertSyncPoint_Params_Data {
 public:
  static CommandBuffer_InsertSyncPoint_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  uint8_t retire : 1;
  uint8_t padfinal_[7];

 private:
  CommandBuffer_InsertSyncPoint_Params_Data();
  ~CommandBuffer_InsertSyncPoint_Params_Data() = delete;
};
static_assert(sizeof(CommandBuffer_InsertSyncPoint_Params_Data) == 16,
              "Bad sizeof(CommandBuffer_InsertSyncPoint_Params_Data)");


class CommandBuffer_RetireSyncPoint_Params_Data {
 public:
  static CommandBuffer_RetireSyncPoint_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  uint32_t sync_point;
  uint8_t padfinal_[4];

 private:
  CommandBuffer_RetireSyncPoint_Params_Data();
  ~CommandBuffer_RetireSyncPoint_Params_Data() = delete;
};
static_assert(sizeof(CommandBuffer_RetireSyncPoint_Params_Data) == 16,
              "Bad sizeof(CommandBuffer_RetireSyncPoint_Params_Data)");


class CommandBuffer_Echo_Params_Data {
 public:
  static CommandBuffer_Echo_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;

 private:
  CommandBuffer_Echo_Params_Data();
  ~CommandBuffer_Echo_Params_Data() = delete;
};
static_assert(sizeof(CommandBuffer_Echo_Params_Data) == 8,
              "Bad sizeof(CommandBuffer_Echo_Params_Data)");

class CommandBuffer_Echo_ResponseParams_Data {
 public:
  static CommandBuffer_Echo_ResponseParams_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;

 private:
  CommandBuffer_Echo_ResponseParams_Data();
  ~CommandBuffer_Echo_ResponseParams_Data() = delete;
};
static_assert(sizeof(CommandBuffer_Echo_ResponseParams_Data) == 8,
              "Bad sizeof(CommandBuffer_Echo_ResponseParams_Data)");


#pragma pack(pop)

}  // namespace internal
}  // namespace mojo

#endif  // MOJO_SERVICES_GPU_INTERFACES_COMMAND_BUFFER_MOJOM_INTERNAL_H_
