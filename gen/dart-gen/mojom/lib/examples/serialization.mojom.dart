// WARNING: DO NOT EDIT. This file was generated by a program.
// See $MOJO_SDK/tools/bindings/mojom_bindings_generator.py.

library serialization_mojom;
import 'package:mojo/bindings.dart' as bindings;




class MyStruct extends bindings.Struct {
  static const List<bindings.StructDataHeader> kVersions = const [
    const bindings.StructDataHeader(24, 0)
  ];
  int a = 0;
  double b = 0.0;
  String c = null;

  MyStruct() : super(kVersions.last.size);

  MyStruct.init(
    int this.a, 
    double this.b, 
    String this.c
  ) : super(kVersions.last.size);

  static MyStruct deserialize(bindings.Message message) =>
      bindings.Struct.deserialize(decode, message);

  static MyStruct decode(bindings.Decoder decoder0) {
    if (decoder0 == null) {
      return null;
    }
    MyStruct result = new MyStruct();

    var mainDataHeader = bindings.Struct.checkVersion(decoder0, kVersions);
    if (mainDataHeader.version >= 0) {
      
      result.a = decoder0.decodeInt32(8);
    }
    if (mainDataHeader.version >= 0) {
      
      result.b = decoder0.decodeFloat(12);
    }
    if (mainDataHeader.version >= 0) {
      
      result.c = decoder0.decodeString(16, false);
    }
    return result;
  }

  void encode(bindings.Encoder encoder) {
    var encoder0 = encoder.getStructEncoderAtOffset(kVersions.last);
    const String structName = "MyStruct";
    String fieldName;
    try {
      fieldName = "a";
      encoder0.encodeInt32(a, 8);
      fieldName = "b";
      encoder0.encodeFloat(b, 12);
      fieldName = "c";
      encoder0.encodeString(c, 16, false);
    } on bindings.MojoCodecError catch(e) {
      bindings.Struct.fixErrorMessage(e, fieldName, structName);
      rethrow;
    }
  }

  String toString() {
    return "MyStruct("
           "a: $a" ", "
           "b: $b" ", "
           "c: $c" ")";
  }

  Map toJson() {
    Map map = new Map();
    map["a"] = a;
    map["b"] = b;
    map["c"] = c;
    return map;
  }
}



