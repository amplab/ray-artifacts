// NOTE: This file was generated by the Mojo bindings generator.
#ifndef MOJO_SERVICES_CLIPBOARD_INTERFACES_CLIPBOARD_MOJOM_SYNC_H_
#define MOJO_SERVICES_CLIPBOARD_INTERFACES_CLIPBOARD_MOJOM_SYNC_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/array.h"
#include "mojo/public/cpp/bindings/callback.h"
#include "mojo/public/cpp/bindings/interface_handle.h"
#include "mojo/public/cpp/bindings/interface_request.h"
#include "mojo/public/cpp/bindings/map.h"
#include "mojo/public/cpp/bindings/message_validator.h"
#include "mojo/public/cpp/bindings/string.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/bindings/lib/synchronous_connector.h"
#include "mojo/services/clipboard/interfaces/clipboard.mojom-internal.h"
#include "mojo/services/clipboard/interfaces/clipboard.mojom-common.h"


namespace mojo {

// --- Synchronous interface declaration ---

class Clipboard_SynchronousProxy;
class Clipboard_Synchronous
  : public internal::Clipboard_Base {
 public:
  virtual ~Clipboard_Synchronous() override {}
  
  using Proxy_ = Clipboard_SynchronousProxy;
  virtual bool GetSequenceNumber(
      Clipboard::Type in_clipboard_type, uint64_t* out_sequence)= 0;
  virtual bool GetAvailableMimeTypes(
      Clipboard::Type in_clipboard_types, mojo::Array<mojo::String>* out_types)= 0;
  virtual bool ReadMimeType(
      Clipboard::Type in_clipboard_type, const mojo::String& in_mime_type, mojo::Array<uint8_t>* out_data)= 0;
  virtual bool WriteClipboardData(
      Clipboard::Type in_clipboard_type, mojo::Map<mojo::String, mojo::Array<uint8_t> > in_data)const= 0;
};

class Clipboard_SynchronousProxy
    : public Clipboard_Synchronous {
 public:
  explicit Clipboard_SynchronousProxy(
      mojo::internal::SynchronousConnector* connector,
      mojo::internal::MessageValidatorList&& validators);
  bool GetSequenceNumber(Clipboard::Type in_clipboard_type, uint64_t* out_sequence) override;
  bool GetAvailableMimeTypes(Clipboard::Type in_clipboard_types, mojo::Array<mojo::String>* out_types) override;
  bool ReadMimeType(Clipboard::Type in_clipboard_type, const mojo::String& in_mime_type, mojo::Array<uint8_t>* out_data) override;
  bool WriteClipboardData(Clipboard::Type in_clipboard_type, mojo::Map<mojo::String, mojo::Array<uint8_t> > in_data) const  override;

 private:
  // |connector_| is passed to us, and is not owned by us.
  mojo::internal::SynchronousConnector* const connector_;
  mojo::internal::MessageValidatorList const validators_;
};

}  // namespace mojo

#endif  // MOJO_SERVICES_CLIPBOARD_INTERFACES_CLIPBOARD_MOJOM_SYNC_H_
