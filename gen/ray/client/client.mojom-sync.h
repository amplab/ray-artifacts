// NOTE: This file was generated by the Mojo bindings generator.
#ifndef RAY_CLIENT_CLIENT_MOJOM_SYNC_H_
#define RAY_CLIENT_CLIENT_MOJOM_SYNC_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/array.h"
#include "mojo/public/cpp/bindings/callback.h"
#include "mojo/public/cpp/bindings/interface_handle.h"
#include "mojo/public/cpp/bindings/interface_request.h"
#include "mojo/public/cpp/bindings/map.h"
#include "mojo/public/cpp/bindings/message_validator.h"
#include "mojo/public/cpp/bindings/string.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/bindings/lib/synchronous_connector.h"
#include "ray/client/client.mojom-internal.h"
#include "ray/client/client.mojom-common.h"


namespace ray {

// --- Synchronous interface declaration ---

class Client_SynchronousProxy;
class Client_Synchronous
  : public internal::Client_Base {
 public:
  virtual ~Client_Synchronous() override {}
  
  using Proxy_ = Client_SynchronousProxy;
};

class Client_SynchronousProxy
    : public Client_Synchronous {
 public:
  explicit Client_SynchronousProxy(
      mojo::internal::SynchronousConnector* connector,
      mojo::internal::MessageValidatorList&& validators);

 private:
  // |connector_| is passed to us, and is not owned by us.
  mojo::internal::SynchronousConnector* const connector_;
  mojo::internal::MessageValidatorList const validators_;
};

}  // namespace ray

#endif  // RAY_CLIENT_CLIENT_MOJOM_SYNC_H_
