// This file was auto-generated by the C bindings generator.

#ifndef SERVICES_JS_TEST_PINGPONG_SERVICE_MOJOM_C_H_
#define SERVICES_JS_TEST_PINGPONG_SERVICE_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.


// Forward declarations for structs.
// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.


// Interface definitions.
// --- js_PingPongService ---
#define js_PingPongService__ServiceName ((const char*)"js::PingPongService")
#define js_PingPongService__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: Quit

#define js_PingPongService_Quit__Ordinal \
    ((uint32_t)5)
#define js_PingPongService_Quit__MinVersion \
    ((uint32_t)0)

struct js_PingPongService_Quit_Request;
// -- js_PingPongService_Quit_Request --
// Enums
// Constants
// Struct definition
struct js_PingPongService_Quit_Request {
  struct MojomStructHeader header_;
  
};

struct js_PingPongService_Quit_Request* js_PingPongService_Quit_Request_New(struct MojomBuffer* in_buffer);

void js_PingPongService_Quit_Request_Init(
  struct js_PingPongService_Quit_Request* in_data);

void js_PingPongService_Quit_Request_CloseAllHandles(
  struct js_PingPongService_Quit_Request* in_data);

struct js_PingPongService_Quit_Request* js_PingPongService_Quit_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_PingPongService_Quit_Request* in_data);

size_t js_PingPongService_Quit_Request_ComputeSerializedSize(
  const struct js_PingPongService_Quit_Request* in_data);

MojomValidationResult js_PingPongService_Quit_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_PingPongService_Quit_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_PingPongService_Quit_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: SetClient

#define js_PingPongService_SetClient__Ordinal \
    ((uint32_t)0)
#define js_PingPongService_SetClient__MinVersion \
    ((uint32_t)0)

struct js_PingPongService_SetClient_Request;
// -- js_PingPongService_SetClient_Request --
// Enums
// Constants
// Struct definition
struct js_PingPongService_SetClient_Request {
  struct MojomStructHeader header_;
  struct MojomInterfaceData client;  // offset,bit = 0,0
  
};

struct js_PingPongService_SetClient_Request* js_PingPongService_SetClient_Request_New(struct MojomBuffer* in_buffer);

void js_PingPongService_SetClient_Request_Init(
  struct js_PingPongService_SetClient_Request* in_data);

void js_PingPongService_SetClient_Request_CloseAllHandles(
  struct js_PingPongService_SetClient_Request* in_data);

struct js_PingPongService_SetClient_Request* js_PingPongService_SetClient_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_PingPongService_SetClient_Request* in_data);

size_t js_PingPongService_SetClient_Request_ComputeSerializedSize(
  const struct js_PingPongService_SetClient_Request* in_data);

MojomValidationResult js_PingPongService_SetClient_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_PingPongService_SetClient_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_PingPongService_SetClient_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Ping

#define js_PingPongService_Ping__Ordinal \
    ((uint32_t)1)
#define js_PingPongService_Ping__MinVersion \
    ((uint32_t)0)

struct js_PingPongService_Ping_Request;
// -- js_PingPongService_Ping_Request --
// Enums
// Constants
// Struct definition
struct js_PingPongService_Ping_Request {
  struct MojomStructHeader header_;
  uint16_t ping_value;  // offset,bit = 0,0
  
};

struct js_PingPongService_Ping_Request* js_PingPongService_Ping_Request_New(struct MojomBuffer* in_buffer);

void js_PingPongService_Ping_Request_Init(
  struct js_PingPongService_Ping_Request* in_data);

void js_PingPongService_Ping_Request_CloseAllHandles(
  struct js_PingPongService_Ping_Request* in_data);

struct js_PingPongService_Ping_Request* js_PingPongService_Ping_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_PingPongService_Ping_Request* in_data);

size_t js_PingPongService_Ping_Request_ComputeSerializedSize(
  const struct js_PingPongService_Ping_Request* in_data);

MojomValidationResult js_PingPongService_Ping_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_PingPongService_Ping_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_PingPongService_Ping_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: PingTargetURL

#define js_PingPongService_PingTargetURL__Ordinal \
    ((uint32_t)2)
#define js_PingPongService_PingTargetURL__MinVersion \
    ((uint32_t)0)

struct js_PingPongService_PingTargetURL_Request;
// -- js_PingPongService_PingTargetURL_Request --
// Enums
// Constants
// Struct definition
struct js_PingPongService_PingTargetURL_Request {
  struct MojomStructHeader header_;
  union MojomStringPtr url;  // offset,bit = 0,0
  uint16_t count;  // offset,bit = 8,0
  
};

struct js_PingPongService_PingTargetURL_Request* js_PingPongService_PingTargetURL_Request_New(struct MojomBuffer* in_buffer);

void js_PingPongService_PingTargetURL_Request_Init(
  struct js_PingPongService_PingTargetURL_Request* in_data);

void js_PingPongService_PingTargetURL_Request_CloseAllHandles(
  struct js_PingPongService_PingTargetURL_Request* in_data);

struct js_PingPongService_PingTargetURL_Request* js_PingPongService_PingTargetURL_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_PingPongService_PingTargetURL_Request* in_data);

size_t js_PingPongService_PingTargetURL_Request_ComputeSerializedSize(
  const struct js_PingPongService_PingTargetURL_Request* in_data);

MojomValidationResult js_PingPongService_PingTargetURL_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_PingPongService_PingTargetURL_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_PingPongService_PingTargetURL_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct js_PingPongService_PingTargetURL_Response;
// -- js_PingPongService_PingTargetURL_Response --
// Enums
// Constants
// Struct definition
struct js_PingPongService_PingTargetURL_Response {
  struct MojomStructHeader header_;
  bool ok : 1;  // offset,bit = 0,0
  
};

struct js_PingPongService_PingTargetURL_Response* js_PingPongService_PingTargetURL_Response_New(struct MojomBuffer* in_buffer);

void js_PingPongService_PingTargetURL_Response_Init(
  struct js_PingPongService_PingTargetURL_Response* in_data);

void js_PingPongService_PingTargetURL_Response_CloseAllHandles(
  struct js_PingPongService_PingTargetURL_Response* in_data);

struct js_PingPongService_PingTargetURL_Response* js_PingPongService_PingTargetURL_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_PingPongService_PingTargetURL_Response* in_data);

size_t js_PingPongService_PingTargetURL_Response_ComputeSerializedSize(
  const struct js_PingPongService_PingTargetURL_Response* in_data);

MojomValidationResult js_PingPongService_PingTargetURL_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_PingPongService_PingTargetURL_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_PingPongService_PingTargetURL_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: PingTargetService

#define js_PingPongService_PingTargetService__Ordinal \
    ((uint32_t)3)
#define js_PingPongService_PingTargetService__MinVersion \
    ((uint32_t)0)

struct js_PingPongService_PingTargetService_Request;
// -- js_PingPongService_PingTargetService_Request --
// Enums
// Constants
// Struct definition
struct js_PingPongService_PingTargetService_Request {
  struct MojomStructHeader header_;
  struct MojomInterfaceData service;  // offset,bit = 0,0
  uint16_t count;  // offset,bit = 8,0
  
};

struct js_PingPongService_PingTargetService_Request* js_PingPongService_PingTargetService_Request_New(struct MojomBuffer* in_buffer);

void js_PingPongService_PingTargetService_Request_Init(
  struct js_PingPongService_PingTargetService_Request* in_data);

void js_PingPongService_PingTargetService_Request_CloseAllHandles(
  struct js_PingPongService_PingTargetService_Request* in_data);

struct js_PingPongService_PingTargetService_Request* js_PingPongService_PingTargetService_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_PingPongService_PingTargetService_Request* in_data);

size_t js_PingPongService_PingTargetService_Request_ComputeSerializedSize(
  const struct js_PingPongService_PingTargetService_Request* in_data);

MojomValidationResult js_PingPongService_PingTargetService_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_PingPongService_PingTargetService_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_PingPongService_PingTargetService_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct js_PingPongService_PingTargetService_Response;
// -- js_PingPongService_PingTargetService_Response --
// Enums
// Constants
// Struct definition
struct js_PingPongService_PingTargetService_Response {
  struct MojomStructHeader header_;
  bool ok : 1;  // offset,bit = 0,0
  
};

struct js_PingPongService_PingTargetService_Response* js_PingPongService_PingTargetService_Response_New(struct MojomBuffer* in_buffer);

void js_PingPongService_PingTargetService_Response_Init(
  struct js_PingPongService_PingTargetService_Response* in_data);

void js_PingPongService_PingTargetService_Response_CloseAllHandles(
  struct js_PingPongService_PingTargetService_Response* in_data);

struct js_PingPongService_PingTargetService_Response* js_PingPongService_PingTargetService_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_PingPongService_PingTargetService_Response* in_data);

size_t js_PingPongService_PingTargetService_Response_ComputeSerializedSize(
  const struct js_PingPongService_PingTargetService_Response* in_data);

MojomValidationResult js_PingPongService_PingTargetService_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_PingPongService_PingTargetService_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_PingPongService_PingTargetService_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: GetPingPongService

#define js_PingPongService_GetPingPongService__Ordinal \
    ((uint32_t)4)
#define js_PingPongService_GetPingPongService__MinVersion \
    ((uint32_t)0)

struct js_PingPongService_GetPingPongService_Request;
// -- js_PingPongService_GetPingPongService_Request --
// Enums
// Constants
// Struct definition
struct js_PingPongService_GetPingPongService_Request {
  struct MojomStructHeader header_;
  MojoHandle service;  // offset,bit = 0,0
  
};

struct js_PingPongService_GetPingPongService_Request* js_PingPongService_GetPingPongService_Request_New(struct MojomBuffer* in_buffer);

void js_PingPongService_GetPingPongService_Request_Init(
  struct js_PingPongService_GetPingPongService_Request* in_data);

void js_PingPongService_GetPingPongService_Request_CloseAllHandles(
  struct js_PingPongService_GetPingPongService_Request* in_data);

struct js_PingPongService_GetPingPongService_Request* js_PingPongService_GetPingPongService_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_PingPongService_GetPingPongService_Request* in_data);

size_t js_PingPongService_GetPingPongService_Request_ComputeSerializedSize(
  const struct js_PingPongService_GetPingPongService_Request* in_data);

MojomValidationResult js_PingPongService_GetPingPongService_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_PingPongService_GetPingPongService_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_PingPongService_GetPingPongService_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);





// --- js_PingPongClient ---
#define js_PingPongClient__ServiceName ((const char*)"")
#define js_PingPongClient__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: Pong

#define js_PingPongClient_Pong__Ordinal \
    ((uint32_t)0)
#define js_PingPongClient_Pong__MinVersion \
    ((uint32_t)0)

struct js_PingPongClient_Pong_Request;
// -- js_PingPongClient_Pong_Request --
// Enums
// Constants
// Struct definition
struct js_PingPongClient_Pong_Request {
  struct MojomStructHeader header_;
  uint16_t pong_value;  // offset,bit = 0,0
  
};

struct js_PingPongClient_Pong_Request* js_PingPongClient_Pong_Request_New(struct MojomBuffer* in_buffer);

void js_PingPongClient_Pong_Request_Init(
  struct js_PingPongClient_Pong_Request* in_data);

void js_PingPongClient_Pong_Request_CloseAllHandles(
  struct js_PingPongClient_Pong_Request* in_data);

struct js_PingPongClient_Pong_Request* js_PingPongClient_Pong_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_PingPongClient_Pong_Request* in_data);

size_t js_PingPongClient_Pong_Request_ComputeSerializedSize(
  const struct js_PingPongClient_Pong_Request* in_data);

MojomValidationResult js_PingPongClient_Pong_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_PingPongClient_Pong_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_PingPongClient_Pong_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry js_PingPongService_Quit_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_PingPongService_SetClient_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_PingPongService_Ping_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_PingPongService_PingTargetURL_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_PingPongService_PingTargetURL_Response__PointerTable[];
extern struct MojomPointerTableStructEntry js_PingPongService_PingTargetService_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_PingPongService_PingTargetService_Response__PointerTable[];
extern struct MojomPointerTableStructEntry js_PingPongService_GetPingPongService_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_PingPongClient_Pong_Request__PointerTable[];


#endif  // SERVICES_JS_TEST_PINGPONG_SERVICE_MOJOM_C_H_