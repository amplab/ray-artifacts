// NOTE: This file was generated by the Mojo bindings generator.
#ifndef MOJO_SERVICES_NATIVE_VIEWPORT_INTERFACES_NATIVE_VIEWPORT_MOJOM_INTERNAL_H_
#define MOJO_SERVICES_NATIVE_VIEWPORT_INTERFACES_NATIVE_VIEWPORT_MOJOM_INTERNAL_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/union_accessor.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/system/buffer.h"
#include "mojo/public/cpp/system/data_pipe.h"
#include "mojo/public/cpp/system/handle.h"
#include "mojo/public/cpp/system/message_pipe.h"
#include "mojo/services/geometry/interfaces/geometry.mojom-internal.h"
#include "mojo/services/gpu/interfaces/context_provider.mojom-internal.h"
#include "mojo/services/native_viewport/interfaces/native_viewport_event_dispatcher.mojom-internal.h"

namespace mojo {
namespace internal {
class BoundsChecker;
}
}
namespace mojo {

class ViewportMetrics;
class SurfaceConfiguration;


namespace internal {

class ViewportMetrics_Data;
class SurfaceConfiguration_Data;



#pragma pack(push, 1)


class ViewportMetrics_Data {
 public:
  static ViewportMetrics_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StructPointer<mojo::internal::Size_Data> size;
  float device_pixel_ratio;
  uint8_t padfinal_[4];

 private:
  ViewportMetrics_Data();
  ~ViewportMetrics_Data() = delete;
};
static_assert(sizeof(ViewportMetrics_Data) == 24,
              "Bad sizeof(ViewportMetrics_Data)");

class SurfaceConfiguration_Data {
 public:
  static SurfaceConfiguration_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  uint8_t red_bits;
  uint8_t green_bits;
  uint8_t blue_bits;
  uint8_t alpha_bits;
  uint8_t depth_bits;
  uint8_t stencil_bits;
  uint8_t padfinal_[2];

 private:
  SurfaceConfiguration_Data();
  ~SurfaceConfiguration_Data() = delete;
};
static_assert(sizeof(SurfaceConfiguration_Data) == 16,
              "Bad sizeof(SurfaceConfiguration_Data)");


class NativeViewport_Create_Params_Data {
 public:
  static NativeViewport_Create_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StructPointer<mojo::internal::Size_Data> size;
  mojo::internal::StructPointer<internal::SurfaceConfiguration_Data> requested_configuration;

 private:
  NativeViewport_Create_Params_Data();
  ~NativeViewport_Create_Params_Data() = delete;
};
static_assert(sizeof(NativeViewport_Create_Params_Data) == 24,
              "Bad sizeof(NativeViewport_Create_Params_Data)");

class NativeViewport_Create_ResponseParams_Data {
 public:
  static NativeViewport_Create_ResponseParams_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StructPointer<internal::ViewportMetrics_Data> metrics;

 private:
  NativeViewport_Create_ResponseParams_Data();
  ~NativeViewport_Create_ResponseParams_Data() = delete;
};
static_assert(sizeof(NativeViewport_Create_ResponseParams_Data) == 16,
              "Bad sizeof(NativeViewport_Create_ResponseParams_Data)");


class NativeViewport_Show_Params_Data {
 public:
  static NativeViewport_Show_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;

 private:
  NativeViewport_Show_Params_Data();
  ~NativeViewport_Show_Params_Data() = delete;
};
static_assert(sizeof(NativeViewport_Show_Params_Data) == 8,
              "Bad sizeof(NativeViewport_Show_Params_Data)");


class NativeViewport_Hide_Params_Data {
 public:
  static NativeViewport_Hide_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;

 private:
  NativeViewport_Hide_Params_Data();
  ~NativeViewport_Hide_Params_Data() = delete;
};
static_assert(sizeof(NativeViewport_Hide_Params_Data) == 8,
              "Bad sizeof(NativeViewport_Hide_Params_Data)");


class NativeViewport_Close_Params_Data {
 public:
  static NativeViewport_Close_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;

 private:
  NativeViewport_Close_Params_Data();
  ~NativeViewport_Close_Params_Data() = delete;
};
static_assert(sizeof(NativeViewport_Close_Params_Data) == 8,
              "Bad sizeof(NativeViewport_Close_Params_Data)");


class NativeViewport_SetSize_Params_Data {
 public:
  static NativeViewport_SetSize_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StructPointer<mojo::internal::Size_Data> size;

 private:
  NativeViewport_SetSize_Params_Data();
  ~NativeViewport_SetSize_Params_Data() = delete;
};
static_assert(sizeof(NativeViewport_SetSize_Params_Data) == 16,
              "Bad sizeof(NativeViewport_SetSize_Params_Data)");


class NativeViewport_SetEventDispatcher_Params_Data {
 public:
  static NativeViewport_SetEventDispatcher_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::Interface_Data dispatcher;

 private:
  NativeViewport_SetEventDispatcher_Params_Data();
  ~NativeViewport_SetEventDispatcher_Params_Data() = delete;
};
static_assert(sizeof(NativeViewport_SetEventDispatcher_Params_Data) == 16,
              "Bad sizeof(NativeViewport_SetEventDispatcher_Params_Data)");


class NativeViewport_GetContextProvider_Params_Data {
 public:
  static NativeViewport_GetContextProvider_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::MessagePipeHandle provider;
  uint8_t padfinal_[4];

 private:
  NativeViewport_GetContextProvider_Params_Data();
  ~NativeViewport_GetContextProvider_Params_Data() = delete;
};
static_assert(sizeof(NativeViewport_GetContextProvider_Params_Data) == 16,
              "Bad sizeof(NativeViewport_GetContextProvider_Params_Data)");


class NativeViewport_RequestMetrics_Params_Data {
 public:
  static NativeViewport_RequestMetrics_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;

 private:
  NativeViewport_RequestMetrics_Params_Data();
  ~NativeViewport_RequestMetrics_Params_Data() = delete;
};
static_assert(sizeof(NativeViewport_RequestMetrics_Params_Data) == 8,
              "Bad sizeof(NativeViewport_RequestMetrics_Params_Data)");

class NativeViewport_RequestMetrics_ResponseParams_Data {
 public:
  static NativeViewport_RequestMetrics_ResponseParams_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StructPointer<internal::ViewportMetrics_Data> metrics;

 private:
  NativeViewport_RequestMetrics_ResponseParams_Data();
  ~NativeViewport_RequestMetrics_ResponseParams_Data() = delete;
};
static_assert(sizeof(NativeViewport_RequestMetrics_ResponseParams_Data) == 16,
              "Bad sizeof(NativeViewport_RequestMetrics_ResponseParams_Data)");


#pragma pack(pop)

}  // namespace internal
}  // namespace mojo

#endif  // MOJO_SERVICES_NATIVE_VIEWPORT_INTERFACES_NATIVE_VIEWPORT_MOJOM_INTERNAL_H_
