// NOTE: This file was generated by the Mojo bindings generator.
#ifndef SERVICES_AUTHENTICATION_CREDENTIALS_IMPL_DB_MOJOM_INTERNAL_H_
#define SERVICES_AUTHENTICATION_CREDENTIALS_IMPL_DB_MOJOM_INTERNAL_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/union_accessor.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/system/buffer.h"
#include "mojo/public/cpp/system/data_pipe.h"
#include "mojo/public/cpp/system/handle.h"
#include "mojo/public/cpp/system/message_pipe.h"

namespace mojo {
namespace internal {
class BoundsChecker;
}
}
namespace authentication {

class Credentials;
class CredentialStore;


namespace internal {

class Credentials_Data;
class CredentialStore_Data;



#pragma pack(push, 1)


class Credentials_Data {
 public:
  static Credentials_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t auth_provider;
  int32_t credential_type;
  mojo::internal::StringPointer token;
  mojo::internal::StringPointer scopes;

 private:
  Credentials_Data();
  ~Credentials_Data() = delete;
};
static_assert(sizeof(Credentials_Data) == 32,
              "Bad sizeof(Credentials_Data)");

class CredentialStore_Data {
 public:
  static CredentialStore_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  uint32_t version;
  uint8_t pad0_[4];
  mojo::internal::StructPointer<mojo::internal::Map_Data<mojo::internal::String_Data*, internal::Credentials_Data*>> credentials;

 private:
  CredentialStore_Data();
  ~CredentialStore_Data() = delete;
};
static_assert(sizeof(CredentialStore_Data) == 24,
              "Bad sizeof(CredentialStore_Data)");


#pragma pack(pop)

}  // namespace internal
}  // namespace authentication

#endif  // SERVICES_AUTHENTICATION_CREDENTIALS_IMPL_DB_MOJOM_INTERNAL_H_
