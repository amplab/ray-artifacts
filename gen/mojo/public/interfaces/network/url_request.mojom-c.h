// This file was auto-generated by the C bindings generator.

#ifndef MOJO_PUBLIC_INTERFACES_NETWORK_URL_REQUEST_MOJOM_C_H_
#define MOJO_PUBLIC_INTERFACES_NETWORK_URL_REQUEST_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.
#include "mojo/public/interfaces/network/http_header.mojom-c.h"


// Forward declarations for structs.
struct mojo_URLRequest;
union mojo_URLRequestPtr {
  struct mojo_URLRequest* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_URLRequestPtr) == 8,
              "union mojo_URLRequestPtr must be 8 bytes");

// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.
// -- mojo_URLRequest --
// Enums
typedef uint32_t mojo_URLRequest_CacheMode;
enum mojo_URLRequest_CacheMode_Enum {
  mojo_URLRequest_CacheMode_DEFAULT = 0,
  mojo_URLRequest_CacheMode_BYPASS_CACHE = 1,
  mojo_URLRequest_CacheMode_ONLY_FROM_CACHE = 2,
  
  mojo_URLRequest_CacheMode__UNKNOWN__ = 0xFFFFFFFF,
};

// Constants
// Struct definition
struct mojo_URLRequest {
  struct MojomStructHeader header_;
  union MojomStringPtr url;  // offset,bit = 0,0
  union MojomStringPtr method;  // offset,bit = 8,0
  union MojomArrayPtr headers;  // offset,bit = 16,0
  union MojomArrayPtr body;  // offset,bit = 24,0
  uint32_t response_body_buffer_size;  // offset,bit = 32,0
  bool auto_follow_redirects : 1;  // offset,bit = 36,0
  uint8_t pad5_[3];  // padding
  mojo_URLRequest_CacheMode cache_mode;  // offset,bit = 40,0
  
};

struct mojo_URLRequest* mojo_URLRequest_New(struct MojomBuffer* in_buffer);

void mojo_URLRequest_Init(
  struct mojo_URLRequest* in_data);

void mojo_URLRequest_CloseAllHandles(
  struct mojo_URLRequest* in_data);

struct mojo_URLRequest* mojo_URLRequest_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_URLRequest* in_data);

size_t mojo_URLRequest_ComputeSerializedSize(
  const struct mojo_URLRequest* in_data);

MojomValidationResult mojo_URLRequest_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_URLRequest_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_URLRequest_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);




// Interface definitions.


// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry mojo_URLRequest__PointerTable[];


#endif  // MOJO_PUBLIC_INTERFACES_NETWORK_URL_REQUEST_MOJOM_C_H_