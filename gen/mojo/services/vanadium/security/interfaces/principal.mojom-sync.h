// NOTE: This file was generated by the Mojo bindings generator.
#ifndef MOJO_SERVICES_VANADIUM_SECURITY_INTERFACES_PRINCIPAL_MOJOM_SYNC_H_
#define MOJO_SERVICES_VANADIUM_SECURITY_INTERFACES_PRINCIPAL_MOJOM_SYNC_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/array.h"
#include "mojo/public/cpp/bindings/callback.h"
#include "mojo/public/cpp/bindings/interface_handle.h"
#include "mojo/public/cpp/bindings/interface_request.h"
#include "mojo/public/cpp/bindings/map.h"
#include "mojo/public/cpp/bindings/message_validator.h"
#include "mojo/public/cpp/bindings/string.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/bindings/lib/synchronous_connector.h"
#include "mojo/services/vanadium/security/interfaces/principal.mojom-internal.h"
#include "mojo/services/vanadium/security/interfaces/principal.mojom-common.h"


namespace vanadium {

// --- Synchronous interface declaration ---

class PrincipalService_SynchronousProxy;
class PrincipalService_Synchronous
  : public internal::PrincipalService_Base {
 public:
  virtual ~PrincipalService_Synchronous() override {}
  
  using Proxy_ = PrincipalService_SynchronousProxy;
  virtual bool Login(
      UserPtr* out_user)= 0;
  virtual bool Logout(
      )const= 0;
  virtual bool GetUser(
      AppInstanceNamePtr in_app, UserPtr* out_user)= 0;
  virtual bool SetUser(
      UserPtr in_user, mojo::String* out_error)= 0;
  virtual bool GetLoggedInUsers(
      mojo::Array<UserPtr>* out_ids)= 0;
};

class PrincipalService_SynchronousProxy
    : public PrincipalService_Synchronous {
 public:
  explicit PrincipalService_SynchronousProxy(
      mojo::internal::SynchronousConnector* connector,
      mojo::internal::MessageValidatorList&& validators);
  bool Login(UserPtr* out_user) override;
  bool Logout() const  override;
  bool GetUser(AppInstanceNamePtr in_app, UserPtr* out_user) override;
  bool SetUser(UserPtr in_user, mojo::String* out_error) override;
  bool GetLoggedInUsers(mojo::Array<UserPtr>* out_ids) override;

 private:
  // |connector_| is passed to us, and is not owned by us.
  mojo::internal::SynchronousConnector* const connector_;
  mojo::internal::MessageValidatorList const validators_;
};

}  // namespace vanadium

#endif  // MOJO_SERVICES_VANADIUM_SECURITY_INTERFACES_PRINCIPAL_MOJOM_SYNC_H_
