// NOTE: This file was generated by the Mojo bindings generator.
#ifndef MOJO_SERVICES_ANDROID_INTERFACES_ACTIVITY_MOJOM_INTERNAL_H_
#define MOJO_SERVICES_ANDROID_INTERFACES_ACTIVITY_MOJOM_INTERNAL_H_

#include "mojo/public/cpp/bindings/lib/bindings_internal.h"
#include "mojo/public/cpp/bindings/lib/buffer.h"
#include "mojo/public/cpp/bindings/lib/union_accessor.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/system/buffer.h"
#include "mojo/public/cpp/system/data_pipe.h"
#include "mojo/public/cpp/system/handle.h"
#include "mojo/public/cpp/system/message_pipe.h"

namespace mojo {
namespace internal {
class BoundsChecker;
}
}
namespace activity {

class StringExtra;
class ComponentName;
class Intent;
class TaskDescription;


namespace internal {

class StringExtra_Data;
class ComponentName_Data;
class Intent_Data;
class TaskDescription_Data;



#pragma pack(push, 1)


class StringExtra_Data {
 public:
  static StringExtra_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StringPointer name;
  mojo::internal::StringPointer value;

 private:
  StringExtra_Data();
  ~StringExtra_Data() = delete;
};
static_assert(sizeof(StringExtra_Data) == 24,
              "Bad sizeof(StringExtra_Data)");

class ComponentName_Data {
 public:
  static ComponentName_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StringPointer package_name;
  mojo::internal::StringPointer class_name;

 private:
  ComponentName_Data();
  ~ComponentName_Data() = delete;
};
static_assert(sizeof(ComponentName_Data) == 24,
              "Bad sizeof(ComponentName_Data)");

class Intent_Data {
 public:
  static Intent_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StringPointer action;
  mojo::internal::StringPointer url;
  uint32_t flags;
  uint8_t pad2_[4];
  mojo::internal::StructPointer<internal::ComponentName_Data> component;
  mojo::internal::ArrayPointer<internal::StringExtra_Data*> string_extras;
  mojo::internal::StringPointer type;

 private:
  Intent_Data();
  ~Intent_Data() = delete;
};
static_assert(sizeof(Intent_Data) == 56,
              "Bad sizeof(Intent_Data)");

class TaskDescription_Data {
 public:
  static TaskDescription_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StringPointer label;
  uint32_t primaryColor;
  uint8_t padfinal_[4];

 private:
  TaskDescription_Data();
  ~TaskDescription_Data() = delete;
};
static_assert(sizeof(TaskDescription_Data) == 24,
              "Bad sizeof(TaskDescription_Data)");


class Activity_GetUserFeedback_Params_Data {
 public:
  static Activity_GetUserFeedback_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::MessagePipeHandle user_feedback;
  uint8_t padfinal_[4];

 private:
  Activity_GetUserFeedback_Params_Data();
  ~Activity_GetUserFeedback_Params_Data() = delete;
};
static_assert(sizeof(Activity_GetUserFeedback_Params_Data) == 16,
              "Bad sizeof(Activity_GetUserFeedback_Params_Data)");


class Activity_StartActivity_Params_Data {
 public:
  static Activity_StartActivity_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StructPointer<internal::Intent_Data> intent;

 private:
  Activity_StartActivity_Params_Data();
  ~Activity_StartActivity_Params_Data() = delete;
};
static_assert(sizeof(Activity_StartActivity_Params_Data) == 16,
              "Bad sizeof(Activity_StartActivity_Params_Data)");


class Activity_FinishCurrentActivity_Params_Data {
 public:
  static Activity_FinishCurrentActivity_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;

 private:
  Activity_FinishCurrentActivity_Params_Data();
  ~Activity_FinishCurrentActivity_Params_Data() = delete;
};
static_assert(sizeof(Activity_FinishCurrentActivity_Params_Data) == 8,
              "Bad sizeof(Activity_FinishCurrentActivity_Params_Data)");


class Activity_SetTaskDescription_Params_Data {
 public:
  static Activity_SetTaskDescription_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StructPointer<internal::TaskDescription_Data> description;

 private:
  Activity_SetTaskDescription_Params_Data();
  ~Activity_SetTaskDescription_Params_Data() = delete;
};
static_assert(sizeof(Activity_SetTaskDescription_Params_Data) == 16,
              "Bad sizeof(Activity_SetTaskDescription_Params_Data)");


class Activity_SetSystemUIVisibility_Params_Data {
 public:
  static Activity_SetSystemUIVisibility_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t visibility;
  uint8_t padfinal_[4];

 private:
  Activity_SetSystemUIVisibility_Params_Data();
  ~Activity_SetSystemUIVisibility_Params_Data() = delete;
};
static_assert(sizeof(Activity_SetSystemUIVisibility_Params_Data) == 16,
              "Bad sizeof(Activity_SetSystemUIVisibility_Params_Data)");


class Activity_SetRequestedOrientation_Params_Data {
 public:
  static Activity_SetRequestedOrientation_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t orientation;
  uint8_t padfinal_[4];

 private:
  Activity_SetRequestedOrientation_Params_Data();
  ~Activity_SetRequestedOrientation_Params_Data() = delete;
};
static_assert(sizeof(Activity_SetRequestedOrientation_Params_Data) == 16,
              "Bad sizeof(Activity_SetRequestedOrientation_Params_Data)");


class PathService_GetAppDataDir_Params_Data {
 public:
  static PathService_GetAppDataDir_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;

 private:
  PathService_GetAppDataDir_Params_Data();
  ~PathService_GetAppDataDir_Params_Data() = delete;
};
static_assert(sizeof(PathService_GetAppDataDir_Params_Data) == 8,
              "Bad sizeof(PathService_GetAppDataDir_Params_Data)");

class PathService_GetAppDataDir_ResponseParams_Data {
 public:
  static PathService_GetAppDataDir_ResponseParams_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StringPointer path;

 private:
  PathService_GetAppDataDir_ResponseParams_Data();
  ~PathService_GetAppDataDir_ResponseParams_Data() = delete;
};
static_assert(sizeof(PathService_GetAppDataDir_ResponseParams_Data) == 16,
              "Bad sizeof(PathService_GetAppDataDir_ResponseParams_Data)");


class PathService_GetFilesDir_Params_Data {
 public:
  static PathService_GetFilesDir_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;

 private:
  PathService_GetFilesDir_Params_Data();
  ~PathService_GetFilesDir_Params_Data() = delete;
};
static_assert(sizeof(PathService_GetFilesDir_Params_Data) == 8,
              "Bad sizeof(PathService_GetFilesDir_Params_Data)");

class PathService_GetFilesDir_ResponseParams_Data {
 public:
  static PathService_GetFilesDir_ResponseParams_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StringPointer path;

 private:
  PathService_GetFilesDir_ResponseParams_Data();
  ~PathService_GetFilesDir_ResponseParams_Data() = delete;
};
static_assert(sizeof(PathService_GetFilesDir_ResponseParams_Data) == 16,
              "Bad sizeof(PathService_GetFilesDir_ResponseParams_Data)");


class PathService_GetCacheDir_Params_Data {
 public:
  static PathService_GetCacheDir_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;

 private:
  PathService_GetCacheDir_Params_Data();
  ~PathService_GetCacheDir_Params_Data() = delete;
};
static_assert(sizeof(PathService_GetCacheDir_Params_Data) == 8,
              "Bad sizeof(PathService_GetCacheDir_Params_Data)");

class PathService_GetCacheDir_ResponseParams_Data {
 public:
  static PathService_GetCacheDir_ResponseParams_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  mojo::internal::StringPointer path;

 private:
  PathService_GetCacheDir_ResponseParams_Data();
  ~PathService_GetCacheDir_ResponseParams_Data() = delete;
};
static_assert(sizeof(PathService_GetCacheDir_ResponseParams_Data) == 16,
              "Bad sizeof(PathService_GetCacheDir_ResponseParams_Data)");


class UserFeedback_PerformHapticFeedback_Params_Data {
 public:
  static UserFeedback_PerformHapticFeedback_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t type;
  uint8_t padfinal_[4];

 private:
  UserFeedback_PerformHapticFeedback_Params_Data();
  ~UserFeedback_PerformHapticFeedback_Params_Data() = delete;
};
static_assert(sizeof(UserFeedback_PerformHapticFeedback_Params_Data) == 16,
              "Bad sizeof(UserFeedback_PerformHapticFeedback_Params_Data)");


class UserFeedback_PerformAuralFeedback_Params_Data {
 public:
  static UserFeedback_PerformAuralFeedback_Params_Data* New(mojo::internal::Buffer* buf);

  static mojo::internal::ValidationError Validate(
      const void* data,
      mojo::internal::BoundsChecker* bounds_checker,
      std::string* err);

  void EncodePointersAndHandles(std::vector<mojo::Handle>* handles);
  void DecodePointersAndHandles(std::vector<mojo::Handle>* handles);

  mojo::internal::StructHeader header_;
  int32_t type;
  uint8_t padfinal_[4];

 private:
  UserFeedback_PerformAuralFeedback_Params_Data();
  ~UserFeedback_PerformAuralFeedback_Params_Data() = delete;
};
static_assert(sizeof(UserFeedback_PerformAuralFeedback_Params_Data) == 16,
              "Bad sizeof(UserFeedback_PerformAuralFeedback_Params_Data)");


#pragma pack(pop)

}  // namespace internal
}  // namespace activity

#endif  // MOJO_SERVICES_ANDROID_INTERFACES_ACTIVITY_MOJOM_INTERNAL_H_
