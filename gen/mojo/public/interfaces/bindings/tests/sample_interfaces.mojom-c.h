// This file was auto-generated by the C bindings generator.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_INTERFACES_MOJOM_C_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_INTERFACES_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.


// Forward declarations for structs.
// Forward declarations for unions.
// Top level constants.
const uint64_t sample_kLong;


// Top level enums.
typedef uint32_t sample_Enum;
enum sample_Enum_Enum {
  sample_Enum_VALUE = 0,
  
  sample_Enum__UNKNOWN__ = 0xFFFFFFFF,
};



// Union definitions.


// Struct definitions.


// Interface definitions.
// --- sample_Provider ---
#define sample_Provider__ServiceName ((const char*)"")
#define sample_Provider__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: EchoMessagePipeHandle

#define sample_Provider_EchoMessagePipeHandle__Ordinal \
    ((uint32_t)2)
#define sample_Provider_EchoMessagePipeHandle__MinVersion \
    ((uint32_t)0)

struct sample_Provider_EchoMessagePipeHandle_Request;
// -- sample_Provider_EchoMessagePipeHandle_Request --
// Enums
// Constants
// Struct definition
struct sample_Provider_EchoMessagePipeHandle_Request {
  struct MojomStructHeader header_;
  MojoHandle a;  // offset,bit = 0,0
  
};

struct sample_Provider_EchoMessagePipeHandle_Request* sample_Provider_EchoMessagePipeHandle_Request_New(struct MojomBuffer* in_buffer);

void sample_Provider_EchoMessagePipeHandle_Request_Init(
  struct sample_Provider_EchoMessagePipeHandle_Request* in_data);

void sample_Provider_EchoMessagePipeHandle_Request_CloseAllHandles(
  struct sample_Provider_EchoMessagePipeHandle_Request* in_data);

struct sample_Provider_EchoMessagePipeHandle_Request* sample_Provider_EchoMessagePipeHandle_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_Provider_EchoMessagePipeHandle_Request* in_data);

size_t sample_Provider_EchoMessagePipeHandle_Request_ComputeSerializedSize(
  const struct sample_Provider_EchoMessagePipeHandle_Request* in_data);

MojomValidationResult sample_Provider_EchoMessagePipeHandle_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_Provider_EchoMessagePipeHandle_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_Provider_EchoMessagePipeHandle_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct sample_Provider_EchoMessagePipeHandle_Response;
// -- sample_Provider_EchoMessagePipeHandle_Response --
// Enums
// Constants
// Struct definition
struct sample_Provider_EchoMessagePipeHandle_Response {
  struct MojomStructHeader header_;
  MojoHandle a;  // offset,bit = 0,0
  
};

struct sample_Provider_EchoMessagePipeHandle_Response* sample_Provider_EchoMessagePipeHandle_Response_New(struct MojomBuffer* in_buffer);

void sample_Provider_EchoMessagePipeHandle_Response_Init(
  struct sample_Provider_EchoMessagePipeHandle_Response* in_data);

void sample_Provider_EchoMessagePipeHandle_Response_CloseAllHandles(
  struct sample_Provider_EchoMessagePipeHandle_Response* in_data);

struct sample_Provider_EchoMessagePipeHandle_Response* sample_Provider_EchoMessagePipeHandle_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_Provider_EchoMessagePipeHandle_Response* in_data);

size_t sample_Provider_EchoMessagePipeHandle_Response_ComputeSerializedSize(
  const struct sample_Provider_EchoMessagePipeHandle_Response* in_data);

MojomValidationResult sample_Provider_EchoMessagePipeHandle_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_Provider_EchoMessagePipeHandle_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_Provider_EchoMessagePipeHandle_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: EchoEnum

#define sample_Provider_EchoEnum__Ordinal \
    ((uint32_t)3)
#define sample_Provider_EchoEnum__MinVersion \
    ((uint32_t)0)

struct sample_Provider_EchoEnum_Request;
// -- sample_Provider_EchoEnum_Request --
// Enums
// Constants
// Struct definition
struct sample_Provider_EchoEnum_Request {
  struct MojomStructHeader header_;
  sample_Enum a;  // offset,bit = 0,0
  
};

struct sample_Provider_EchoEnum_Request* sample_Provider_EchoEnum_Request_New(struct MojomBuffer* in_buffer);

void sample_Provider_EchoEnum_Request_Init(
  struct sample_Provider_EchoEnum_Request* in_data);

void sample_Provider_EchoEnum_Request_CloseAllHandles(
  struct sample_Provider_EchoEnum_Request* in_data);

struct sample_Provider_EchoEnum_Request* sample_Provider_EchoEnum_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_Provider_EchoEnum_Request* in_data);

size_t sample_Provider_EchoEnum_Request_ComputeSerializedSize(
  const struct sample_Provider_EchoEnum_Request* in_data);

MojomValidationResult sample_Provider_EchoEnum_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_Provider_EchoEnum_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_Provider_EchoEnum_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct sample_Provider_EchoEnum_Response;
// -- sample_Provider_EchoEnum_Response --
// Enums
// Constants
// Struct definition
struct sample_Provider_EchoEnum_Response {
  struct MojomStructHeader header_;
  sample_Enum a;  // offset,bit = 0,0
  
};

struct sample_Provider_EchoEnum_Response* sample_Provider_EchoEnum_Response_New(struct MojomBuffer* in_buffer);

void sample_Provider_EchoEnum_Response_Init(
  struct sample_Provider_EchoEnum_Response* in_data);

void sample_Provider_EchoEnum_Response_CloseAllHandles(
  struct sample_Provider_EchoEnum_Response* in_data);

struct sample_Provider_EchoEnum_Response* sample_Provider_EchoEnum_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_Provider_EchoEnum_Response* in_data);

size_t sample_Provider_EchoEnum_Response_ComputeSerializedSize(
  const struct sample_Provider_EchoEnum_Response* in_data);

MojomValidationResult sample_Provider_EchoEnum_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_Provider_EchoEnum_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_Provider_EchoEnum_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: EchoInt

#define sample_Provider_EchoInt__Ordinal \
    ((uint32_t)4)
#define sample_Provider_EchoInt__MinVersion \
    ((uint32_t)0)

struct sample_Provider_EchoInt_Request;
// -- sample_Provider_EchoInt_Request --
// Enums
// Constants
// Struct definition
struct sample_Provider_EchoInt_Request {
  struct MojomStructHeader header_;
  int32_t a;  // offset,bit = 0,0
  
};

struct sample_Provider_EchoInt_Request* sample_Provider_EchoInt_Request_New(struct MojomBuffer* in_buffer);

void sample_Provider_EchoInt_Request_Init(
  struct sample_Provider_EchoInt_Request* in_data);

void sample_Provider_EchoInt_Request_CloseAllHandles(
  struct sample_Provider_EchoInt_Request* in_data);

struct sample_Provider_EchoInt_Request* sample_Provider_EchoInt_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_Provider_EchoInt_Request* in_data);

size_t sample_Provider_EchoInt_Request_ComputeSerializedSize(
  const struct sample_Provider_EchoInt_Request* in_data);

MojomValidationResult sample_Provider_EchoInt_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_Provider_EchoInt_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_Provider_EchoInt_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct sample_Provider_EchoInt_Response;
// -- sample_Provider_EchoInt_Response --
// Enums
// Constants
// Struct definition
struct sample_Provider_EchoInt_Response {
  struct MojomStructHeader header_;
  int32_t a;  // offset,bit = 0,0
  
};

struct sample_Provider_EchoInt_Response* sample_Provider_EchoInt_Response_New(struct MojomBuffer* in_buffer);

void sample_Provider_EchoInt_Response_Init(
  struct sample_Provider_EchoInt_Response* in_data);

void sample_Provider_EchoInt_Response_CloseAllHandles(
  struct sample_Provider_EchoInt_Response* in_data);

struct sample_Provider_EchoInt_Response* sample_Provider_EchoInt_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_Provider_EchoInt_Response* in_data);

size_t sample_Provider_EchoInt_Response_ComputeSerializedSize(
  const struct sample_Provider_EchoInt_Response* in_data);

MojomValidationResult sample_Provider_EchoInt_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_Provider_EchoInt_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_Provider_EchoInt_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: EchoString

#define sample_Provider_EchoString__Ordinal \
    ((uint32_t)0)
#define sample_Provider_EchoString__MinVersion \
    ((uint32_t)0)

struct sample_Provider_EchoString_Request;
// -- sample_Provider_EchoString_Request --
// Enums
// Constants
// Struct definition
struct sample_Provider_EchoString_Request {
  struct MojomStructHeader header_;
  union MojomStringPtr a;  // offset,bit = 0,0
  
};

struct sample_Provider_EchoString_Request* sample_Provider_EchoString_Request_New(struct MojomBuffer* in_buffer);

void sample_Provider_EchoString_Request_Init(
  struct sample_Provider_EchoString_Request* in_data);

void sample_Provider_EchoString_Request_CloseAllHandles(
  struct sample_Provider_EchoString_Request* in_data);

struct sample_Provider_EchoString_Request* sample_Provider_EchoString_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_Provider_EchoString_Request* in_data);

size_t sample_Provider_EchoString_Request_ComputeSerializedSize(
  const struct sample_Provider_EchoString_Request* in_data);

MojomValidationResult sample_Provider_EchoString_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_Provider_EchoString_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_Provider_EchoString_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct sample_Provider_EchoString_Response;
// -- sample_Provider_EchoString_Response --
// Enums
// Constants
// Struct definition
struct sample_Provider_EchoString_Response {
  struct MojomStructHeader header_;
  union MojomStringPtr a;  // offset,bit = 0,0
  
};

struct sample_Provider_EchoString_Response* sample_Provider_EchoString_Response_New(struct MojomBuffer* in_buffer);

void sample_Provider_EchoString_Response_Init(
  struct sample_Provider_EchoString_Response* in_data);

void sample_Provider_EchoString_Response_CloseAllHandles(
  struct sample_Provider_EchoString_Response* in_data);

struct sample_Provider_EchoString_Response* sample_Provider_EchoString_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_Provider_EchoString_Response* in_data);

size_t sample_Provider_EchoString_Response_ComputeSerializedSize(
  const struct sample_Provider_EchoString_Response* in_data);

MojomValidationResult sample_Provider_EchoString_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_Provider_EchoString_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_Provider_EchoString_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: EchoStrings

#define sample_Provider_EchoStrings__Ordinal \
    ((uint32_t)1)
#define sample_Provider_EchoStrings__MinVersion \
    ((uint32_t)0)

struct sample_Provider_EchoStrings_Request;
// -- sample_Provider_EchoStrings_Request --
// Enums
// Constants
// Struct definition
struct sample_Provider_EchoStrings_Request {
  struct MojomStructHeader header_;
  union MojomStringPtr a;  // offset,bit = 0,0
  union MojomStringPtr b;  // offset,bit = 8,0
  
};

struct sample_Provider_EchoStrings_Request* sample_Provider_EchoStrings_Request_New(struct MojomBuffer* in_buffer);

void sample_Provider_EchoStrings_Request_Init(
  struct sample_Provider_EchoStrings_Request* in_data);

void sample_Provider_EchoStrings_Request_CloseAllHandles(
  struct sample_Provider_EchoStrings_Request* in_data);

struct sample_Provider_EchoStrings_Request* sample_Provider_EchoStrings_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_Provider_EchoStrings_Request* in_data);

size_t sample_Provider_EchoStrings_Request_ComputeSerializedSize(
  const struct sample_Provider_EchoStrings_Request* in_data);

MojomValidationResult sample_Provider_EchoStrings_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_Provider_EchoStrings_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_Provider_EchoStrings_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct sample_Provider_EchoStrings_Response;
// -- sample_Provider_EchoStrings_Response --
// Enums
// Constants
// Struct definition
struct sample_Provider_EchoStrings_Response {
  struct MojomStructHeader header_;
  union MojomStringPtr a;  // offset,bit = 0,0
  union MojomStringPtr b;  // offset,bit = 8,0
  
};

struct sample_Provider_EchoStrings_Response* sample_Provider_EchoStrings_Response_New(struct MojomBuffer* in_buffer);

void sample_Provider_EchoStrings_Response_Init(
  struct sample_Provider_EchoStrings_Response* in_data);

void sample_Provider_EchoStrings_Response_CloseAllHandles(
  struct sample_Provider_EchoStrings_Response* in_data);

struct sample_Provider_EchoStrings_Response* sample_Provider_EchoStrings_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_Provider_EchoStrings_Response* in_data);

size_t sample_Provider_EchoStrings_Response_ComputeSerializedSize(
  const struct sample_Provider_EchoStrings_Response* in_data);

MojomValidationResult sample_Provider_EchoStrings_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_Provider_EchoStrings_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_Provider_EchoStrings_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);





// --- sample_IntegerAccessor ---
#define sample_IntegerAccessor__ServiceName ((const char*)"")
#define sample_IntegerAccessor__CurrentVersion ((uint32_t)3)

// Enums
// Constants


// Message: GetInteger

#define sample_IntegerAccessor_GetInteger__Ordinal \
    ((uint32_t)0)
#define sample_IntegerAccessor_GetInteger__MinVersion \
    ((uint32_t)0)

struct sample_IntegerAccessor_GetInteger_Request;
// -- sample_IntegerAccessor_GetInteger_Request --
// Enums
// Constants
// Struct definition
struct sample_IntegerAccessor_GetInteger_Request {
  struct MojomStructHeader header_;
  
};

struct sample_IntegerAccessor_GetInteger_Request* sample_IntegerAccessor_GetInteger_Request_New(struct MojomBuffer* in_buffer);

void sample_IntegerAccessor_GetInteger_Request_Init(
  struct sample_IntegerAccessor_GetInteger_Request* in_data);

void sample_IntegerAccessor_GetInteger_Request_CloseAllHandles(
  struct sample_IntegerAccessor_GetInteger_Request* in_data);

struct sample_IntegerAccessor_GetInteger_Request* sample_IntegerAccessor_GetInteger_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_IntegerAccessor_GetInteger_Request* in_data);

size_t sample_IntegerAccessor_GetInteger_Request_ComputeSerializedSize(
  const struct sample_IntegerAccessor_GetInteger_Request* in_data);

MojomValidationResult sample_IntegerAccessor_GetInteger_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_IntegerAccessor_GetInteger_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_IntegerAccessor_GetInteger_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct sample_IntegerAccessor_GetInteger_Response;
// -- sample_IntegerAccessor_GetInteger_Response --
// Enums
// Constants
// Struct definition
struct sample_IntegerAccessor_GetInteger_Response {
  struct MojomStructHeader header_;
  int64_t data;  // offset,bit = 0,0
  sample_Enum type;  // offset,bit = 8,0
  
};

struct sample_IntegerAccessor_GetInteger_Response* sample_IntegerAccessor_GetInteger_Response_New(struct MojomBuffer* in_buffer);

void sample_IntegerAccessor_GetInteger_Response_Init(
  struct sample_IntegerAccessor_GetInteger_Response* in_data);

void sample_IntegerAccessor_GetInteger_Response_CloseAllHandles(
  struct sample_IntegerAccessor_GetInteger_Response* in_data);

struct sample_IntegerAccessor_GetInteger_Response* sample_IntegerAccessor_GetInteger_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_IntegerAccessor_GetInteger_Response* in_data);

size_t sample_IntegerAccessor_GetInteger_Response_ComputeSerializedSize(
  const struct sample_IntegerAccessor_GetInteger_Response* in_data);

MojomValidationResult sample_IntegerAccessor_GetInteger_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_IntegerAccessor_GetInteger_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_IntegerAccessor_GetInteger_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: SetInteger

#define sample_IntegerAccessor_SetInteger__Ordinal \
    ((uint32_t)1)
#define sample_IntegerAccessor_SetInteger__MinVersion \
    ((uint32_t)1)

struct sample_IntegerAccessor_SetInteger_Request;
// -- sample_IntegerAccessor_SetInteger_Request --
// Enums
// Constants
// Struct definition
struct sample_IntegerAccessor_SetInteger_Request {
  struct MojomStructHeader header_;
  int64_t data;  // offset,bit = 0,0
  sample_Enum type;  // offset,bit = 8,0
  
};

struct sample_IntegerAccessor_SetInteger_Request* sample_IntegerAccessor_SetInteger_Request_New(struct MojomBuffer* in_buffer);

void sample_IntegerAccessor_SetInteger_Request_Init(
  struct sample_IntegerAccessor_SetInteger_Request* in_data);

void sample_IntegerAccessor_SetInteger_Request_CloseAllHandles(
  struct sample_IntegerAccessor_SetInteger_Request* in_data);

struct sample_IntegerAccessor_SetInteger_Request* sample_IntegerAccessor_SetInteger_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_IntegerAccessor_SetInteger_Request* in_data);

size_t sample_IntegerAccessor_SetInteger_Request_ComputeSerializedSize(
  const struct sample_IntegerAccessor_SetInteger_Request* in_data);

MojomValidationResult sample_IntegerAccessor_SetInteger_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_IntegerAccessor_SetInteger_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_IntegerAccessor_SetInteger_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);





// --- sample_SampleInterface ---
#define sample_SampleInterface__ServiceName ((const char*)"")
#define sample_SampleInterface__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: SampleMethod0

#define sample_SampleInterface_SampleMethod0__Ordinal \
    ((uint32_t)0)
#define sample_SampleInterface_SampleMethod0__MinVersion \
    ((uint32_t)0)

struct sample_SampleInterface_SampleMethod0_Request;
// -- sample_SampleInterface_SampleMethod0_Request --
// Enums
// Constants
// Struct definition
struct sample_SampleInterface_SampleMethod0_Request {
  struct MojomStructHeader header_;
  
};

struct sample_SampleInterface_SampleMethod0_Request* sample_SampleInterface_SampleMethod0_Request_New(struct MojomBuffer* in_buffer);

void sample_SampleInterface_SampleMethod0_Request_Init(
  struct sample_SampleInterface_SampleMethod0_Request* in_data);

void sample_SampleInterface_SampleMethod0_Request_CloseAllHandles(
  struct sample_SampleInterface_SampleMethod0_Request* in_data);

struct sample_SampleInterface_SampleMethod0_Request* sample_SampleInterface_SampleMethod0_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_SampleInterface_SampleMethod0_Request* in_data);

size_t sample_SampleInterface_SampleMethod0_Request_ComputeSerializedSize(
  const struct sample_SampleInterface_SampleMethod0_Request* in_data);

MojomValidationResult sample_SampleInterface_SampleMethod0_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_SampleInterface_SampleMethod0_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_SampleInterface_SampleMethod0_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: SampleMethod1

#define sample_SampleInterface_SampleMethod1__Ordinal \
    ((uint32_t)1)
#define sample_SampleInterface_SampleMethod1__MinVersion \
    ((uint32_t)0)

struct sample_SampleInterface_SampleMethod1_Request;
// -- sample_SampleInterface_SampleMethod1_Request --
// Enums
// Constants
// Struct definition
struct sample_SampleInterface_SampleMethod1_Request {
  struct MojomStructHeader header_;
  int32_t in1;  // offset,bit = 0,0
  uint8_t pad0_[4];  // padding
  union MojomStringPtr in2;  // offset,bit = 8,0
  
};

struct sample_SampleInterface_SampleMethod1_Request* sample_SampleInterface_SampleMethod1_Request_New(struct MojomBuffer* in_buffer);

void sample_SampleInterface_SampleMethod1_Request_Init(
  struct sample_SampleInterface_SampleMethod1_Request* in_data);

void sample_SampleInterface_SampleMethod1_Request_CloseAllHandles(
  struct sample_SampleInterface_SampleMethod1_Request* in_data);

struct sample_SampleInterface_SampleMethod1_Request* sample_SampleInterface_SampleMethod1_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_SampleInterface_SampleMethod1_Request* in_data);

size_t sample_SampleInterface_SampleMethod1_Request_ComputeSerializedSize(
  const struct sample_SampleInterface_SampleMethod1_Request* in_data);

MojomValidationResult sample_SampleInterface_SampleMethod1_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_SampleInterface_SampleMethod1_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_SampleInterface_SampleMethod1_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


struct sample_SampleInterface_SampleMethod1_Response;
// -- sample_SampleInterface_SampleMethod1_Response --
// Enums
// Constants
// Struct definition
struct sample_SampleInterface_SampleMethod1_Response {
  struct MojomStructHeader header_;
  union MojomStringPtr out1;  // offset,bit = 0,0
  sample_Enum out2;  // offset,bit = 8,0
  
};

struct sample_SampleInterface_SampleMethod1_Response* sample_SampleInterface_SampleMethod1_Response_New(struct MojomBuffer* in_buffer);

void sample_SampleInterface_SampleMethod1_Response_Init(
  struct sample_SampleInterface_SampleMethod1_Response* in_data);

void sample_SampleInterface_SampleMethod1_Response_CloseAllHandles(
  struct sample_SampleInterface_SampleMethod1_Response* in_data);

struct sample_SampleInterface_SampleMethod1_Response* sample_SampleInterface_SampleMethod1_Response_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_SampleInterface_SampleMethod1_Response* in_data);

size_t sample_SampleInterface_SampleMethod1_Response_ComputeSerializedSize(
  const struct sample_SampleInterface_SampleMethod1_Response* in_data);

MojomValidationResult sample_SampleInterface_SampleMethod1_Response_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_SampleInterface_SampleMethod1_Response_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_SampleInterface_SampleMethod1_Response_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: SampleMethod2

#define sample_SampleInterface_SampleMethod2__Ordinal \
    ((uint32_t)2)
#define sample_SampleInterface_SampleMethod2__MinVersion \
    ((uint32_t)0)

struct sample_SampleInterface_SampleMethod2_Request;
// -- sample_SampleInterface_SampleMethod2_Request --
// Enums
// Constants
// Struct definition
struct sample_SampleInterface_SampleMethod2_Request {
  struct MojomStructHeader header_;
  
};

struct sample_SampleInterface_SampleMethod2_Request* sample_SampleInterface_SampleMethod2_Request_New(struct MojomBuffer* in_buffer);

void sample_SampleInterface_SampleMethod2_Request_Init(
  struct sample_SampleInterface_SampleMethod2_Request* in_data);

void sample_SampleInterface_SampleMethod2_Request_CloseAllHandles(
  struct sample_SampleInterface_SampleMethod2_Request* in_data);

struct sample_SampleInterface_SampleMethod2_Request* sample_SampleInterface_SampleMethod2_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct sample_SampleInterface_SampleMethod2_Request* in_data);

size_t sample_SampleInterface_SampleMethod2_Request_ComputeSerializedSize(
  const struct sample_SampleInterface_SampleMethod2_Request* in_data);

MojomValidationResult sample_SampleInterface_SampleMethod2_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult sample_SampleInterface_SampleMethod2_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult sample_SampleInterface_SampleMethod2_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry sample_Provider_EchoString_Request__PointerTable[];
extern struct MojomPointerTableStructEntry sample_Provider_EchoString_Response__PointerTable[];
extern struct MojomPointerTableStructEntry sample_Provider_EchoStrings_Request__PointerTable[];
extern struct MojomPointerTableStructEntry sample_Provider_EchoStrings_Response__PointerTable[];
extern struct MojomPointerTableStructEntry sample_Provider_EchoMessagePipeHandle_Request__PointerTable[];
extern struct MojomPointerTableStructEntry sample_Provider_EchoMessagePipeHandle_Response__PointerTable[];
extern struct MojomPointerTableStructEntry sample_Provider_EchoEnum_Request__PointerTable[];
extern struct MojomPointerTableStructEntry sample_Provider_EchoEnum_Response__PointerTable[];
extern struct MojomPointerTableStructEntry sample_Provider_EchoInt_Request__PointerTable[];
extern struct MojomPointerTableStructEntry sample_Provider_EchoInt_Response__PointerTable[];
extern struct MojomPointerTableStructEntry sample_IntegerAccessor_SetInteger_Request__PointerTable[];
extern struct MojomPointerTableStructEntry sample_IntegerAccessor_GetInteger_Request__PointerTable[];
extern struct MojomPointerTableStructEntry sample_IntegerAccessor_GetInteger_Response__PointerTable[];
extern struct MojomPointerTableStructEntry sample_SampleInterface_SampleMethod2_Request__PointerTable[];
extern struct MojomPointerTableStructEntry sample_SampleInterface_SampleMethod0_Request__PointerTable[];
extern struct MojomPointerTableStructEntry sample_SampleInterface_SampleMethod1_Request__PointerTable[];
extern struct MojomPointerTableStructEntry sample_SampleInterface_SampleMethod1_Response__PointerTable[];


#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_SAMPLE_INTERFACES_MOJOM_C_H_