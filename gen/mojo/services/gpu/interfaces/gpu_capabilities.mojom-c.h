// This file was auto-generated by the C bindings generator.

#ifndef MOJO_SERVICES_GPU_INTERFACES_GPU_CAPABILITIES_MOJOM_C_H_
#define MOJO_SERVICES_GPU_INTERFACES_GPU_CAPABILITIES_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.


// Forward declarations for structs.
struct mojo_GpuShaderPrecision;
union mojo_GpuShaderPrecisionPtr {
  struct mojo_GpuShaderPrecision* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_GpuShaderPrecisionPtr) == 8,
              "union mojo_GpuShaderPrecisionPtr must be 8 bytes");

struct mojo_GpuPerStagePrecisions;
union mojo_GpuPerStagePrecisionsPtr {
  struct mojo_GpuPerStagePrecisions* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_GpuPerStagePrecisionsPtr) == 8,
              "union mojo_GpuPerStagePrecisionsPtr must be 8 bytes");

struct mojo_GpuCapabilities;
union mojo_GpuCapabilitiesPtr {
  struct mojo_GpuCapabilities* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_GpuCapabilitiesPtr) == 8,
              "union mojo_GpuCapabilitiesPtr must be 8 bytes");

// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.
// -- mojo_GpuShaderPrecision --
// Enums
// Constants
// Struct definition
struct mojo_GpuShaderPrecision {
  struct MojomStructHeader header_;
  int32_t min_range;  // offset,bit = 0,0
  int32_t max_range;  // offset,bit = 4,0
  int32_t precision;  // offset,bit = 8,0
  
};

struct mojo_GpuShaderPrecision* mojo_GpuShaderPrecision_New(struct MojomBuffer* in_buffer);

void mojo_GpuShaderPrecision_Init(
  struct mojo_GpuShaderPrecision* in_data);

void mojo_GpuShaderPrecision_CloseAllHandles(
  struct mojo_GpuShaderPrecision* in_data);

struct mojo_GpuShaderPrecision* mojo_GpuShaderPrecision_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_GpuShaderPrecision* in_data);

size_t mojo_GpuShaderPrecision_ComputeSerializedSize(
  const struct mojo_GpuShaderPrecision* in_data);

MojomValidationResult mojo_GpuShaderPrecision_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_GpuShaderPrecision_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_GpuShaderPrecision_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_GpuPerStagePrecisions --
// Enums
// Constants
// Struct definition
struct mojo_GpuPerStagePrecisions {
  struct MojomStructHeader header_;
  union mojo_GpuShaderPrecisionPtr low_int;  // offset,bit = 0,0
  union mojo_GpuShaderPrecisionPtr medium_int;  // offset,bit = 8,0
  union mojo_GpuShaderPrecisionPtr high_int;  // offset,bit = 16,0
  union mojo_GpuShaderPrecisionPtr low_float;  // offset,bit = 24,0
  union mojo_GpuShaderPrecisionPtr medium_float;  // offset,bit = 32,0
  union mojo_GpuShaderPrecisionPtr high_float;  // offset,bit = 40,0
  
};

struct mojo_GpuPerStagePrecisions* mojo_GpuPerStagePrecisions_New(struct MojomBuffer* in_buffer);

void mojo_GpuPerStagePrecisions_Init(
  struct mojo_GpuPerStagePrecisions* in_data);

void mojo_GpuPerStagePrecisions_CloseAllHandles(
  struct mojo_GpuPerStagePrecisions* in_data);

struct mojo_GpuPerStagePrecisions* mojo_GpuPerStagePrecisions_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_GpuPerStagePrecisions* in_data);

size_t mojo_GpuPerStagePrecisions_ComputeSerializedSize(
  const struct mojo_GpuPerStagePrecisions* in_data);

MojomValidationResult mojo_GpuPerStagePrecisions_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_GpuPerStagePrecisions_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_GpuPerStagePrecisions_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_GpuCapabilities --
// Enums
// Constants
// Struct definition
struct mojo_GpuCapabilities {
  struct MojomStructHeader header_;
  union mojo_GpuPerStagePrecisionsPtr vertex_shader_precisions;  // offset,bit = 0,0
  union mojo_GpuPerStagePrecisionsPtr fragment_shader_precisions;  // offset,bit = 8,0
  int32_t max_combined_texture_image_units;  // offset,bit = 16,0
  int32_t max_cube_map_texture_size;  // offset,bit = 20,0
  int32_t max_fragment_uniform_vectors;  // offset,bit = 24,0
  int32_t max_renderbuffer_size;  // offset,bit = 28,0
  int32_t max_texture_image_units;  // offset,bit = 32,0
  int32_t max_texture_size;  // offset,bit = 36,0
  int32_t max_varying_vectors;  // offset,bit = 40,0
  int32_t max_vertex_attribs;  // offset,bit = 44,0
  int32_t max_vertex_texture_image_units;  // offset,bit = 48,0
  int32_t max_vertex_uniform_vectors;  // offset,bit = 52,0
  int32_t num_compressed_texture_formats;  // offset,bit = 56,0
  int32_t num_shader_binary_formats;  // offset,bit = 60,0
  int32_t bind_generates_resource_chromium;  // offset,bit = 64,0
  bool post_sub_buffer : 1;  // offset,bit = 68,0
  bool egl_image_external : 1;  // offset,bit = 68,1
  bool texture_format_bgra8888 : 1;  // offset,bit = 68,2
  bool texture_format_etc1 : 1;  // offset,bit = 68,3
  bool texture_format_etc1_npot : 1;  // offset,bit = 68,4
  bool texture_rectangle : 1;  // offset,bit = 68,5
  bool iosurface : 1;  // offset,bit = 68,6
  bool texture_usage : 1;  // offset,bit = 68,7
  bool texture_storage : 1;  // offset,bit = 69,0
  bool discard_framebuffer : 1;  // offset,bit = 69,1
  bool sync_query : 1;  // offset,bit = 69,2
  bool image : 1;  // offset,bit = 69,3
  bool future_sync_points : 1;  // offset,bit = 69,4
  bool blend_equation_advanced : 1;  // offset,bit = 69,5
  bool blend_equation_advanced_coherent : 1;  // offset,bit = 69,6
  uint8_t pad29_[3];  // padding
  
};

struct mojo_GpuCapabilities* mojo_GpuCapabilities_New(struct MojomBuffer* in_buffer);

void mojo_GpuCapabilities_Init(
  struct mojo_GpuCapabilities* in_data);

void mojo_GpuCapabilities_CloseAllHandles(
  struct mojo_GpuCapabilities* in_data);

struct mojo_GpuCapabilities* mojo_GpuCapabilities_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_GpuCapabilities* in_data);

size_t mojo_GpuCapabilities_ComputeSerializedSize(
  const struct mojo_GpuCapabilities* in_data);

MojomValidationResult mojo_GpuCapabilities_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_GpuCapabilities_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_GpuCapabilities_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);




// Interface definitions.


// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry mojo_GpuShaderPrecision__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_GpuPerStagePrecisions__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_GpuCapabilities__PointerTable[];


#endif  // MOJO_SERVICES_GPU_INTERFACES_GPU_CAPABILITIES_MOJOM_C_H_