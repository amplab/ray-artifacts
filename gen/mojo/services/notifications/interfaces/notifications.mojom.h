// NOTE: This file was generated by the Mojo bindings generator.
#ifndef MOJO_SERVICES_NOTIFICATIONS_INTERFACES_NOTIFICATIONS_MOJOM_H_
#define MOJO_SERVICES_NOTIFICATIONS_INTERFACES_NOTIFICATIONS_MOJOM_H_

#include <iosfwd>
#include <stdint.h>

#include "mojo/public/cpp/bindings/array.h"
#include "mojo/public/cpp/bindings/callback.h"
#include "mojo/public/cpp/bindings/interface_ptr.h"
#include "mojo/public/cpp/bindings/interface_handle.h"
#include "mojo/public/cpp/bindings/interface_request.h"
#include "mojo/public/cpp/bindings/lib/control_message_handler.h"
#include "mojo/public/cpp/bindings/lib/control_message_proxy.h"
#include "mojo/public/cpp/bindings/map.h"
#include "mojo/public/cpp/bindings/message_validator.h"
#include "mojo/public/cpp/bindings/no_interface.h"
#include "mojo/public/cpp/bindings/string.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/system/buffer.h"
#include "mojo/public/cpp/system/data_pipe.h"
#include "mojo/public/cpp/system/handle.h"
#include "mojo/public/cpp/system/message_pipe.h"
#include "mojo/services/notifications/interfaces/notifications.mojom-common.h"
namespace notifications {

// --- Interface Forward Declarations ---

using NotificationClientPtr = mojo::InterfacePtr<NotificationClient>;

using NotificationPtr = mojo::InterfacePtr<Notification>;

using NotificationServicePtr = mojo::InterfacePtr<NotificationService>;


// --- Interface Proxies ---


class NotificationClientProxy
    : public NotificationClient,
      public mojo::internal::ControlMessageProxy {
 public:
  explicit NotificationClientProxy(mojo::MessageReceiverWithResponder* receiver);
  void OnSelected(
      
  ) override;
  void OnDismissed(
      
  ) override;
};


class NotificationProxy
    : public Notification,
      public mojo::internal::ControlMessageProxy {
 public:
  explicit NotificationProxy(mojo::MessageReceiverWithResponder* receiver);
  void Update(
      NotificationDataPtr notification_data
  ) override;
  void Cancel(
      
  ) override;
};


class NotificationServiceProxy
    : public NotificationService,
      public mojo::internal::ControlMessageProxy {
 public:
  explicit NotificationServiceProxy(mojo::MessageReceiverWithResponder* receiver);
  void Post(
      NotificationDataPtr notification_data, mojo::InterfaceHandle<NotificationClient> client, mojo::InterfaceRequest<Notification> notification
  ) override;
};


// --- Interface Stubs ---

class NotificationClientStub : public mojo::MessageReceiverWithResponderStatus {
 public:
  NotificationClientStub();
  ~NotificationClientStub() override;
  void set_sink(NotificationClient* sink) { sink_ = sink; }
  NotificationClient* sink() { return sink_; }

  bool Accept(mojo::Message* message) override;
  bool AcceptWithResponder(mojo::Message* message,
      mojo::MessageReceiverWithStatus* responder) override;

 private:
  NotificationClient* sink_;
  mojo::internal::ControlMessageHandler control_message_handler_;
};

class NotificationStub : public mojo::MessageReceiverWithResponderStatus {
 public:
  NotificationStub();
  ~NotificationStub() override;
  void set_sink(Notification* sink) { sink_ = sink; }
  Notification* sink() { return sink_; }

  bool Accept(mojo::Message* message) override;
  bool AcceptWithResponder(mojo::Message* message,
      mojo::MessageReceiverWithStatus* responder) override;

 private:
  Notification* sink_;
  mojo::internal::ControlMessageHandler control_message_handler_;
};

class NotificationServiceStub : public mojo::MessageReceiverWithResponderStatus {
 public:
  NotificationServiceStub();
  ~NotificationServiceStub() override;
  void set_sink(NotificationService* sink) { sink_ = sink; }
  NotificationService* sink() { return sink_; }

  bool Accept(mojo::Message* message) override;
  bool AcceptWithResponder(mojo::Message* message,
      mojo::MessageReceiverWithStatus* responder) override;

 private:
  NotificationService* sink_;
  mojo::internal::ControlMessageHandler control_message_handler_;
};

}  // namespace notifications

#endif  // MOJO_SERVICES_NOTIFICATIONS_INTERFACES_NOTIFICATIONS_MOJOM_H_
