// NOTE: This file was generated by the Mojo bindings generator.
#ifndef PLASMA_SERVICE_PLASMA_MOJOM_SYNC_H_
#define PLASMA_SERVICE_PLASMA_MOJOM_SYNC_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/array.h"
#include "mojo/public/cpp/bindings/callback.h"
#include "mojo/public/cpp/bindings/interface_handle.h"
#include "mojo/public/cpp/bindings/interface_request.h"
#include "mojo/public/cpp/bindings/map.h"
#include "mojo/public/cpp/bindings/message_validator.h"
#include "mojo/public/cpp/bindings/string.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/bindings/lib/synchronous_connector.h"
#include "plasma/service/plasma.mojom-internal.h"
#include "plasma/service/plasma.mojom-common.h"


namespace plasma {
namespace service {

// --- Synchronous interface declaration ---

class Plasma_SynchronousProxy;
class Plasma_Synchronous
  : public internal::Plasma_Base {
 public:
  virtual ~Plasma_Synchronous() override {}
  
  using Proxy_ = Plasma_SynchronousProxy;
  virtual bool CreateObject(
      int64_t in_object_id, uint64_t in_size, const mojo::String& in_name, mojo::ScopedSharedBufferHandle* out_buffer)= 0;
  virtual bool ResizeObject(
      int64_t in_object_id, uint64_t in_new_size, mojo::ScopedSharedBufferHandle* out_buffer)= 0;
  virtual bool SealObject(
      int64_t in_object_id)const= 0;
  virtual bool GetObject(
      int64_t in_object_id, bool in_block, mojo::ScopedSharedBufferHandle* out_buffer, uint64_t* out_size)= 0;
  virtual bool ListObjects(
      mojo::Array<ObjectInfoPtr>* out_info)= 0;
};

class Plasma_SynchronousProxy
    : public Plasma_Synchronous {
 public:
  explicit Plasma_SynchronousProxy(
      mojo::internal::SynchronousConnector* connector,
      mojo::internal::MessageValidatorList&& validators);
  bool CreateObject(int64_t in_object_id, uint64_t in_size, const mojo::String& in_name, mojo::ScopedSharedBufferHandle* out_buffer) override;
  bool ResizeObject(int64_t in_object_id, uint64_t in_new_size, mojo::ScopedSharedBufferHandle* out_buffer) override;
  bool SealObject(int64_t in_object_id) const  override;
  bool GetObject(int64_t in_object_id, bool in_block, mojo::ScopedSharedBufferHandle* out_buffer, uint64_t* out_size) override;
  bool ListObjects(mojo::Array<ObjectInfoPtr>* out_info) override;

 private:
  // |connector_| is passed to us, and is not owned by us.
  mojo::internal::SynchronousConnector* const connector_;
  mojo::internal::MessageValidatorList const validators_;
};

}  // namespace service
}  // namespace plasma

#endif  // PLASMA_SERVICE_PLASMA_MOJOM_SYNC_H_
