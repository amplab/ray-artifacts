// This file was auto-generated by the C bindings generator.

#ifndef MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_ARRAYS_MOJOM_C_H_
#define MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_ARRAYS_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.


// Forward declarations for structs.
struct mojo_test_StructWithInterface;
union mojo_test_StructWithInterfacePtr {
  struct mojo_test_StructWithInterface* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructWithInterfacePtr) == 8,
              "union mojo_test_StructWithInterfacePtr must be 8 bytes");

struct mojo_test_StructWithInterfaceArray;
union mojo_test_StructWithInterfaceArrayPtr {
  struct mojo_test_StructWithInterfaceArray* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructWithInterfaceArrayPtr) == 8,
              "union mojo_test_StructWithInterfaceArrayPtr must be 8 bytes");

struct mojo_test_StructWithDataPipeConsumers;
union mojo_test_StructWithDataPipeConsumersPtr {
  struct mojo_test_StructWithDataPipeConsumers* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructWithDataPipeConsumersPtr) == 8,
              "union mojo_test_StructWithDataPipeConsumersPtr must be 8 bytes");

struct mojo_test_StructWithDataPipeProducers;
union mojo_test_StructWithDataPipeProducersPtr {
  struct mojo_test_StructWithDataPipeProducers* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructWithDataPipeProducersPtr) == 8,
              "union mojo_test_StructWithDataPipeProducersPtr must be 8 bytes");

struct mojo_test_StructWithSharedBuffers;
union mojo_test_StructWithSharedBuffersPtr {
  struct mojo_test_StructWithSharedBuffers* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructWithSharedBuffersPtr) == 8,
              "union mojo_test_StructWithSharedBuffersPtr must be 8 bytes");

struct mojo_test_StructWithMessagePipes;
union mojo_test_StructWithMessagePipesPtr {
  struct mojo_test_StructWithMessagePipes* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructWithMessagePipesPtr) == 8,
              "union mojo_test_StructWithMessagePipesPtr must be 8 bytes");

struct mojo_test_StructWithHandles;
union mojo_test_StructWithHandlesPtr {
  struct mojo_test_StructWithHandles* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructWithHandlesPtr) == 8,
              "union mojo_test_StructWithHandlesPtr must be 8 bytes");

struct mojo_test_StructWithInterfaceRequests;
union mojo_test_StructWithInterfaceRequestsPtr {
  struct mojo_test_StructWithInterfaceRequests* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union mojo_test_StructWithInterfaceRequestsPtr) == 8,
              "union mojo_test_StructWithInterfaceRequestsPtr must be 8 bytes");

// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.
// -- mojo_test_StructWithInterface --
// Enums
// Constants
// Struct definition
struct mojo_test_StructWithInterface {
  struct MojomStructHeader header_;
  struct MojomInterfaceData iptr;  // offset,bit = 0,0
  
};

struct mojo_test_StructWithInterface* mojo_test_StructWithInterface_New(struct MojomBuffer* in_buffer);

void mojo_test_StructWithInterface_Init(
  struct mojo_test_StructWithInterface* in_data);

void mojo_test_StructWithInterface_CloseAllHandles(
  struct mojo_test_StructWithInterface* in_data);

struct mojo_test_StructWithInterface* mojo_test_StructWithInterface_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructWithInterface* in_data);

size_t mojo_test_StructWithInterface_ComputeSerializedSize(
  const struct mojo_test_StructWithInterface* in_data);

MojomValidationResult mojo_test_StructWithInterface_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructWithInterface_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructWithInterface_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructWithInterfaceArray --
// Enums
// Constants
// Struct definition
struct mojo_test_StructWithInterfaceArray {
  struct MojomStructHeader header_;
  union MojomArrayPtr structs_array;  // offset,bit = 0,0
  union MojomArrayPtr structs_nullable_array;  // offset,bit = 8,0
  union MojomArrayPtr nullable_structs_array;  // offset,bit = 16,0
  union MojomArrayPtr nullable_structs_nullable_array;  // offset,bit = 24,0
  
};

struct mojo_test_StructWithInterfaceArray* mojo_test_StructWithInterfaceArray_New(struct MojomBuffer* in_buffer);

void mojo_test_StructWithInterfaceArray_Init(
  struct mojo_test_StructWithInterfaceArray* in_data);

void mojo_test_StructWithInterfaceArray_CloseAllHandles(
  struct mojo_test_StructWithInterfaceArray* in_data);

struct mojo_test_StructWithInterfaceArray* mojo_test_StructWithInterfaceArray_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructWithInterfaceArray* in_data);

size_t mojo_test_StructWithInterfaceArray_ComputeSerializedSize(
  const struct mojo_test_StructWithInterfaceArray* in_data);

MojomValidationResult mojo_test_StructWithInterfaceArray_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructWithInterfaceArray_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructWithInterfaceArray_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructWithDataPipeConsumers --
// Enums
// Constants
// Struct definition
struct mojo_test_StructWithDataPipeConsumers {
  struct MojomStructHeader header_;
  union MojomArrayPtr handles_array;  // offset,bit = 0,0
  union MojomArrayPtr handles_nullable_array;  // offset,bit = 8,0
  union MojomArrayPtr nullable_handles_array;  // offset,bit = 16,0
  union MojomArrayPtr nullable_handles_nullable_array;  // offset,bit = 24,0
  
};

struct mojo_test_StructWithDataPipeConsumers* mojo_test_StructWithDataPipeConsumers_New(struct MojomBuffer* in_buffer);

void mojo_test_StructWithDataPipeConsumers_Init(
  struct mojo_test_StructWithDataPipeConsumers* in_data);

void mojo_test_StructWithDataPipeConsumers_CloseAllHandles(
  struct mojo_test_StructWithDataPipeConsumers* in_data);

struct mojo_test_StructWithDataPipeConsumers* mojo_test_StructWithDataPipeConsumers_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructWithDataPipeConsumers* in_data);

size_t mojo_test_StructWithDataPipeConsumers_ComputeSerializedSize(
  const struct mojo_test_StructWithDataPipeConsumers* in_data);

MojomValidationResult mojo_test_StructWithDataPipeConsumers_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructWithDataPipeConsumers_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructWithDataPipeConsumers_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructWithDataPipeProducers --
// Enums
// Constants
// Struct definition
struct mojo_test_StructWithDataPipeProducers {
  struct MojomStructHeader header_;
  union MojomArrayPtr handles_array;  // offset,bit = 0,0
  union MojomArrayPtr handles_nullable_array;  // offset,bit = 8,0
  union MojomArrayPtr nullable_handles_array;  // offset,bit = 16,0
  union MojomArrayPtr nullable_handles_nullable_array;  // offset,bit = 24,0
  
};

struct mojo_test_StructWithDataPipeProducers* mojo_test_StructWithDataPipeProducers_New(struct MojomBuffer* in_buffer);

void mojo_test_StructWithDataPipeProducers_Init(
  struct mojo_test_StructWithDataPipeProducers* in_data);

void mojo_test_StructWithDataPipeProducers_CloseAllHandles(
  struct mojo_test_StructWithDataPipeProducers* in_data);

struct mojo_test_StructWithDataPipeProducers* mojo_test_StructWithDataPipeProducers_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructWithDataPipeProducers* in_data);

size_t mojo_test_StructWithDataPipeProducers_ComputeSerializedSize(
  const struct mojo_test_StructWithDataPipeProducers* in_data);

MojomValidationResult mojo_test_StructWithDataPipeProducers_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructWithDataPipeProducers_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructWithDataPipeProducers_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructWithSharedBuffers --
// Enums
// Constants
// Struct definition
struct mojo_test_StructWithSharedBuffers {
  struct MojomStructHeader header_;
  union MojomArrayPtr handles_array;  // offset,bit = 0,0
  union MojomArrayPtr handles_nullable_array;  // offset,bit = 8,0
  union MojomArrayPtr nullable_handles_array;  // offset,bit = 16,0
  union MojomArrayPtr nullable_handles_nullable_array;  // offset,bit = 24,0
  
};

struct mojo_test_StructWithSharedBuffers* mojo_test_StructWithSharedBuffers_New(struct MojomBuffer* in_buffer);

void mojo_test_StructWithSharedBuffers_Init(
  struct mojo_test_StructWithSharedBuffers* in_data);

void mojo_test_StructWithSharedBuffers_CloseAllHandles(
  struct mojo_test_StructWithSharedBuffers* in_data);

struct mojo_test_StructWithSharedBuffers* mojo_test_StructWithSharedBuffers_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructWithSharedBuffers* in_data);

size_t mojo_test_StructWithSharedBuffers_ComputeSerializedSize(
  const struct mojo_test_StructWithSharedBuffers* in_data);

MojomValidationResult mojo_test_StructWithSharedBuffers_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructWithSharedBuffers_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructWithSharedBuffers_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructWithMessagePipes --
// Enums
// Constants
// Struct definition
struct mojo_test_StructWithMessagePipes {
  struct MojomStructHeader header_;
  union MojomArrayPtr handles_array;  // offset,bit = 0,0
  union MojomArrayPtr handles_nullable_array;  // offset,bit = 8,0
  union MojomArrayPtr nullable_handles_array;  // offset,bit = 16,0
  union MojomArrayPtr nullable_handles_nullable_array;  // offset,bit = 24,0
  
};

struct mojo_test_StructWithMessagePipes* mojo_test_StructWithMessagePipes_New(struct MojomBuffer* in_buffer);

void mojo_test_StructWithMessagePipes_Init(
  struct mojo_test_StructWithMessagePipes* in_data);

void mojo_test_StructWithMessagePipes_CloseAllHandles(
  struct mojo_test_StructWithMessagePipes* in_data);

struct mojo_test_StructWithMessagePipes* mojo_test_StructWithMessagePipes_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructWithMessagePipes* in_data);

size_t mojo_test_StructWithMessagePipes_ComputeSerializedSize(
  const struct mojo_test_StructWithMessagePipes* in_data);

MojomValidationResult mojo_test_StructWithMessagePipes_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructWithMessagePipes_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructWithMessagePipes_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructWithHandles --
// Enums
// Constants
// Struct definition
struct mojo_test_StructWithHandles {
  struct MojomStructHeader header_;
  union MojomArrayPtr handles_array;  // offset,bit = 0,0
  union MojomArrayPtr handles_nullable_array;  // offset,bit = 8,0
  union MojomArrayPtr nullable_handles_array;  // offset,bit = 16,0
  union MojomArrayPtr nullable_handles_nullable_array;  // offset,bit = 24,0
  
};

struct mojo_test_StructWithHandles* mojo_test_StructWithHandles_New(struct MojomBuffer* in_buffer);

void mojo_test_StructWithHandles_Init(
  struct mojo_test_StructWithHandles* in_data);

void mojo_test_StructWithHandles_CloseAllHandles(
  struct mojo_test_StructWithHandles* in_data);

struct mojo_test_StructWithHandles* mojo_test_StructWithHandles_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructWithHandles* in_data);

size_t mojo_test_StructWithHandles_ComputeSerializedSize(
  const struct mojo_test_StructWithHandles* in_data);

MojomValidationResult mojo_test_StructWithHandles_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructWithHandles_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructWithHandles_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- mojo_test_StructWithInterfaceRequests --
// Enums
// Constants
// Struct definition
struct mojo_test_StructWithInterfaceRequests {
  struct MojomStructHeader header_;
  union MojomArrayPtr req_array;  // offset,bit = 0,0
  union MojomArrayPtr req_nullable_array;  // offset,bit = 8,0
  union MojomArrayPtr nullable_req_array;  // offset,bit = 16,0
  union MojomArrayPtr nullable_req_nullable_array;  // offset,bit = 24,0
  
};

struct mojo_test_StructWithInterfaceRequests* mojo_test_StructWithInterfaceRequests_New(struct MojomBuffer* in_buffer);

void mojo_test_StructWithInterfaceRequests_Init(
  struct mojo_test_StructWithInterfaceRequests* in_data);

void mojo_test_StructWithInterfaceRequests_CloseAllHandles(
  struct mojo_test_StructWithInterfaceRequests* in_data);

struct mojo_test_StructWithInterfaceRequests* mojo_test_StructWithInterfaceRequests_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_StructWithInterfaceRequests* in_data);

size_t mojo_test_StructWithInterfaceRequests_ComputeSerializedSize(
  const struct mojo_test_StructWithInterfaceRequests* in_data);

MojomValidationResult mojo_test_StructWithInterfaceRequests_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_StructWithInterfaceRequests_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_StructWithInterfaceRequests_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);




// Interface definitions.
// --- mojo_test_TestInterface ---
#define mojo_test_TestInterface__ServiceName ((const char*)"")
#define mojo_test_TestInterface__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: Foo

#define mojo_test_TestInterface_Foo__Ordinal \
    ((uint32_t)0)
#define mojo_test_TestInterface_Foo__MinVersion \
    ((uint32_t)0)

struct mojo_test_TestInterface_Foo_Request;
// -- mojo_test_TestInterface_Foo_Request --
// Enums
// Constants
// Struct definition
struct mojo_test_TestInterface_Foo_Request {
  struct MojomStructHeader header_;
  
};

struct mojo_test_TestInterface_Foo_Request* mojo_test_TestInterface_Foo_Request_New(struct MojomBuffer* in_buffer);

void mojo_test_TestInterface_Foo_Request_Init(
  struct mojo_test_TestInterface_Foo_Request* in_data);

void mojo_test_TestInterface_Foo_Request_CloseAllHandles(
  struct mojo_test_TestInterface_Foo_Request* in_data);

struct mojo_test_TestInterface_Foo_Request* mojo_test_TestInterface_Foo_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct mojo_test_TestInterface_Foo_Request* in_data);

size_t mojo_test_TestInterface_Foo_Request_ComputeSerializedSize(
  const struct mojo_test_TestInterface_Foo_Request* in_data);

MojomValidationResult mojo_test_TestInterface_Foo_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult mojo_test_TestInterface_Foo_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult mojo_test_TestInterface_Foo_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry mojo_test_StructWithInterface__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructWithInterfaceArray__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructWithDataPipeConsumers__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructWithDataPipeProducers__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructWithSharedBuffers__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructWithMessagePipes__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructWithHandles__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_StructWithInterfaceRequests__PointerTable[];
extern struct MojomPointerTableStructEntry mojo_test_TestInterface_Foo_Request__PointerTable[];


#endif  // MOJO_PUBLIC_INTERFACES_BINDINGS_TESTS_TEST_ARRAYS_MOJOM_C_H_