// NOTE: This file was generated by the Mojo bindings generator.
#ifndef SERVICES_TEST_SERVICE_TEST_SERVICE_MOJOM_SYNC_H_
#define SERVICES_TEST_SERVICE_TEST_SERVICE_MOJOM_SYNC_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/array.h"
#include "mojo/public/cpp/bindings/callback.h"
#include "mojo/public/cpp/bindings/interface_handle.h"
#include "mojo/public/cpp/bindings/interface_request.h"
#include "mojo/public/cpp/bindings/map.h"
#include "mojo/public/cpp/bindings/message_validator.h"
#include "mojo/public/cpp/bindings/string.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/bindings/lib/synchronous_connector.h"
#include "services/test_service/test_service.mojom-internal.h"
#include "services/test_service/test_service.mojom-common.h"


namespace mojo {
namespace test {

// --- Synchronous interface declaration ---

class TestService_SynchronousProxy;
class TestService_Synchronous
  : public internal::TestService_Base {
 public:
  virtual ~TestService_Synchronous() override {}
  
  using Proxy_ = TestService_SynchronousProxy;
  virtual bool Ping(
      )= 0;
  virtual bool ConnectToAppAndGetTime(
      const mojo::String& in_app_url, int64_t* out_time_usec)= 0;
  virtual bool StartTrackingRequests(
      )= 0;
};

class TestService_SynchronousProxy
    : public TestService_Synchronous {
 public:
  explicit TestService_SynchronousProxy(
      mojo::internal::SynchronousConnector* connector,
      mojo::internal::MessageValidatorList&& validators);
  bool Ping() override;
  bool ConnectToAppAndGetTime(const mojo::String& in_app_url, int64_t* out_time_usec) override;
  bool StartTrackingRequests() override;

 private:
  // |connector_| is passed to us, and is not owned by us.
  mojo::internal::SynchronousConnector* const connector_;
  mojo::internal::MessageValidatorList const validators_;
};

class TestTimeService_SynchronousProxy;
class TestTimeService_Synchronous
  : public internal::TestTimeService_Base {
 public:
  virtual ~TestTimeService_Synchronous() override {}
  
  using Proxy_ = TestTimeService_SynchronousProxy;
  virtual bool GetPartyTime(
      int64_t* out_time_usec)= 0;
  virtual bool StartTrackingRequests(
      )= 0;
};

class TestTimeService_SynchronousProxy
    : public TestTimeService_Synchronous {
 public:
  explicit TestTimeService_SynchronousProxy(
      mojo::internal::SynchronousConnector* connector,
      mojo::internal::MessageValidatorList&& validators);
  bool GetPartyTime(int64_t* out_time_usec) override;
  bool StartTrackingRequests() override;

 private:
  // |connector_| is passed to us, and is not owned by us.
  mojo::internal::SynchronousConnector* const connector_;
  mojo::internal::MessageValidatorList const validators_;
};

}  // namespace test
}  // namespace mojo

#endif  // SERVICES_TEST_SERVICE_TEST_SERVICE_MOJOM_SYNC_H_
