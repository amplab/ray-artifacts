// This file was auto-generated by the C bindings generator.

#ifndef SERVICES_JS_SYSTEM_TESTS_JS_TO_CPP_MOJOM_C_H_
#define SERVICES_JS_SYSTEM_TESTS_JS_TO_CPP_MOJOM_C_H_

#include <assert.h>
#include <math.h>
#include <stdbool.h>
#include <stdint.h>

#include "mojo/public/c/bindings/array.h"
#include "mojo/public/c/bindings/buffer.h"
#include "mojo/public/c/bindings/interface.h"
#include "mojo/public/c/bindings/lib/type_table.h"
#include "mojo/public/c/bindings/map.h"
#include "mojo/public/c/bindings/string.h"
#include "mojo/public/c/bindings/validation.h"
#include "mojo/public/c/system/handle.h"

// Imports.


// Forward declarations for structs.
struct js_to_cpp_EchoArgs;
union js_to_cpp_EchoArgsPtr {
  struct js_to_cpp_EchoArgs* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union js_to_cpp_EchoArgsPtr) == 8,
              "union js_to_cpp_EchoArgsPtr must be 8 bytes");

struct js_to_cpp_EchoArgsList;
union js_to_cpp_EchoArgsListPtr {
  struct js_to_cpp_EchoArgsList* ptr;
  uint64_t offset;
};
MOJO_STATIC_ASSERT(sizeof(union js_to_cpp_EchoArgsListPtr) == 8,
              "union js_to_cpp_EchoArgsListPtr must be 8 bytes");

// Forward declarations for unions.
// Top level constants.


// Top level enums.


// Union definitions.


// Struct definitions.
// -- js_to_cpp_EchoArgs --
// Enums
// Constants
// Struct definition
struct js_to_cpp_EchoArgs {
  struct MojomStructHeader header_;
  int64_t si64;  // offset,bit = 0,0
  int32_t si32;  // offset,bit = 8,0
  int16_t si16;  // offset,bit = 12,0
  int8_t si8;  // offset,bit = 14,0
  uint8_t ui8;  // offset,bit = 15,0
  uint64_t ui64;  // offset,bit = 16,0
  uint32_t ui32;  // offset,bit = 24,0
  uint16_t ui16;  // offset,bit = 28,0
  uint8_t pad7_[2];  // padding
  float float_val;  // offset,bit = 32,0
  float float_inf;  // offset,bit = 36,0
  float float_nan;  // offset,bit = 40,0
  MojoHandle message_handle;  // offset,bit = 44,0
  double double_val;  // offset,bit = 48,0
  double double_inf;  // offset,bit = 56,0
  double double_nan;  // offset,bit = 64,0
  union MojomStringPtr name;  // offset,bit = 72,0
  union MojomArrayPtr string_array;  // offset,bit = 80,0
  MojoHandle data_handle;  // offset,bit = 88,0
  
};

struct js_to_cpp_EchoArgs* js_to_cpp_EchoArgs_New(struct MojomBuffer* in_buffer);

void js_to_cpp_EchoArgs_Init(
  struct js_to_cpp_EchoArgs* in_data);

void js_to_cpp_EchoArgs_CloseAllHandles(
  struct js_to_cpp_EchoArgs* in_data);

struct js_to_cpp_EchoArgs* js_to_cpp_EchoArgs_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_EchoArgs* in_data);

size_t js_to_cpp_EchoArgs_ComputeSerializedSize(
  const struct js_to_cpp_EchoArgs* in_data);

MojomValidationResult js_to_cpp_EchoArgs_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_EchoArgs_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_EchoArgs_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);


// -- js_to_cpp_EchoArgsList --
// Enums
// Constants
// Struct definition
struct js_to_cpp_EchoArgsList {
  struct MojomStructHeader header_;
  union js_to_cpp_EchoArgsListPtr next;  // offset,bit = 0,0
  union js_to_cpp_EchoArgsPtr item;  // offset,bit = 8,0
  
};

struct js_to_cpp_EchoArgsList* js_to_cpp_EchoArgsList_New(struct MojomBuffer* in_buffer);

void js_to_cpp_EchoArgsList_Init(
  struct js_to_cpp_EchoArgsList* in_data);

void js_to_cpp_EchoArgsList_CloseAllHandles(
  struct js_to_cpp_EchoArgsList* in_data);

struct js_to_cpp_EchoArgsList* js_to_cpp_EchoArgsList_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_EchoArgsList* in_data);

size_t js_to_cpp_EchoArgsList_ComputeSerializedSize(
  const struct js_to_cpp_EchoArgsList* in_data);

MojomValidationResult js_to_cpp_EchoArgsList_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_EchoArgsList_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_EchoArgsList_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);




// Interface definitions.
// --- js_to_cpp_CppSide ---
#define js_to_cpp_CppSide__ServiceName ((const char*)"")
#define js_to_cpp_CppSide__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: StartTest

#define js_to_cpp_CppSide_StartTest__Ordinal \
    ((uint32_t)88888888)
#define js_to_cpp_CppSide_StartTest__MinVersion \
    ((uint32_t)0)

struct js_to_cpp_CppSide_StartTest_Request;
// -- js_to_cpp_CppSide_StartTest_Request --
// Enums
// Constants
// Struct definition
struct js_to_cpp_CppSide_StartTest_Request {
  struct MojomStructHeader header_;
  
};

struct js_to_cpp_CppSide_StartTest_Request* js_to_cpp_CppSide_StartTest_Request_New(struct MojomBuffer* in_buffer);

void js_to_cpp_CppSide_StartTest_Request_Init(
  struct js_to_cpp_CppSide_StartTest_Request* in_data);

void js_to_cpp_CppSide_StartTest_Request_CloseAllHandles(
  struct js_to_cpp_CppSide_StartTest_Request* in_data);

struct js_to_cpp_CppSide_StartTest_Request* js_to_cpp_CppSide_StartTest_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_CppSide_StartTest_Request* in_data);

size_t js_to_cpp_CppSide_StartTest_Request_ComputeSerializedSize(
  const struct js_to_cpp_CppSide_StartTest_Request* in_data);

MojomValidationResult js_to_cpp_CppSide_StartTest_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_CppSide_StartTest_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_CppSide_StartTest_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: TestFinished

#define js_to_cpp_CppSide_TestFinished__Ordinal \
    ((uint32_t)99999999)
#define js_to_cpp_CppSide_TestFinished__MinVersion \
    ((uint32_t)0)

struct js_to_cpp_CppSide_TestFinished_Request;
// -- js_to_cpp_CppSide_TestFinished_Request --
// Enums
// Constants
// Struct definition
struct js_to_cpp_CppSide_TestFinished_Request {
  struct MojomStructHeader header_;
  
};

struct js_to_cpp_CppSide_TestFinished_Request* js_to_cpp_CppSide_TestFinished_Request_New(struct MojomBuffer* in_buffer);

void js_to_cpp_CppSide_TestFinished_Request_Init(
  struct js_to_cpp_CppSide_TestFinished_Request* in_data);

void js_to_cpp_CppSide_TestFinished_Request_CloseAllHandles(
  struct js_to_cpp_CppSide_TestFinished_Request* in_data);

struct js_to_cpp_CppSide_TestFinished_Request* js_to_cpp_CppSide_TestFinished_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_CppSide_TestFinished_Request* in_data);

size_t js_to_cpp_CppSide_TestFinished_Request_ComputeSerializedSize(
  const struct js_to_cpp_CppSide_TestFinished_Request* in_data);

MojomValidationResult js_to_cpp_CppSide_TestFinished_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_CppSide_TestFinished_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_CppSide_TestFinished_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: PingResponse

#define js_to_cpp_CppSide_PingResponse__Ordinal \
    ((uint32_t)100000000)
#define js_to_cpp_CppSide_PingResponse__MinVersion \
    ((uint32_t)0)

struct js_to_cpp_CppSide_PingResponse_Request;
// -- js_to_cpp_CppSide_PingResponse_Request --
// Enums
// Constants
// Struct definition
struct js_to_cpp_CppSide_PingResponse_Request {
  struct MojomStructHeader header_;
  
};

struct js_to_cpp_CppSide_PingResponse_Request* js_to_cpp_CppSide_PingResponse_Request_New(struct MojomBuffer* in_buffer);

void js_to_cpp_CppSide_PingResponse_Request_Init(
  struct js_to_cpp_CppSide_PingResponse_Request* in_data);

void js_to_cpp_CppSide_PingResponse_Request_CloseAllHandles(
  struct js_to_cpp_CppSide_PingResponse_Request* in_data);

struct js_to_cpp_CppSide_PingResponse_Request* js_to_cpp_CppSide_PingResponse_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_CppSide_PingResponse_Request* in_data);

size_t js_to_cpp_CppSide_PingResponse_Request_ComputeSerializedSize(
  const struct js_to_cpp_CppSide_PingResponse_Request* in_data);

MojomValidationResult js_to_cpp_CppSide_PingResponse_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_CppSide_PingResponse_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_CppSide_PingResponse_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: EchoResponse

#define js_to_cpp_CppSide_EchoResponse__Ordinal \
    ((uint32_t)100000001)
#define js_to_cpp_CppSide_EchoResponse__MinVersion \
    ((uint32_t)0)

struct js_to_cpp_CppSide_EchoResponse_Request;
// -- js_to_cpp_CppSide_EchoResponse_Request --
// Enums
// Constants
// Struct definition
struct js_to_cpp_CppSide_EchoResponse_Request {
  struct MojomStructHeader header_;
  union js_to_cpp_EchoArgsListPtr list;  // offset,bit = 0,0
  
};

struct js_to_cpp_CppSide_EchoResponse_Request* js_to_cpp_CppSide_EchoResponse_Request_New(struct MojomBuffer* in_buffer);

void js_to_cpp_CppSide_EchoResponse_Request_Init(
  struct js_to_cpp_CppSide_EchoResponse_Request* in_data);

void js_to_cpp_CppSide_EchoResponse_Request_CloseAllHandles(
  struct js_to_cpp_CppSide_EchoResponse_Request* in_data);

struct js_to_cpp_CppSide_EchoResponse_Request* js_to_cpp_CppSide_EchoResponse_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_CppSide_EchoResponse_Request* in_data);

size_t js_to_cpp_CppSide_EchoResponse_Request_ComputeSerializedSize(
  const struct js_to_cpp_CppSide_EchoResponse_Request* in_data);

MojomValidationResult js_to_cpp_CppSide_EchoResponse_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_CppSide_EchoResponse_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_CppSide_EchoResponse_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: BitFlipResponse

#define js_to_cpp_CppSide_BitFlipResponse__Ordinal \
    ((uint32_t)100000002)
#define js_to_cpp_CppSide_BitFlipResponse__MinVersion \
    ((uint32_t)0)

struct js_to_cpp_CppSide_BitFlipResponse_Request;
// -- js_to_cpp_CppSide_BitFlipResponse_Request --
// Enums
// Constants
// Struct definition
struct js_to_cpp_CppSide_BitFlipResponse_Request {
  struct MojomStructHeader header_;
  union js_to_cpp_EchoArgsListPtr arg;  // offset,bit = 0,0
  
};

struct js_to_cpp_CppSide_BitFlipResponse_Request* js_to_cpp_CppSide_BitFlipResponse_Request_New(struct MojomBuffer* in_buffer);

void js_to_cpp_CppSide_BitFlipResponse_Request_Init(
  struct js_to_cpp_CppSide_BitFlipResponse_Request* in_data);

void js_to_cpp_CppSide_BitFlipResponse_Request_CloseAllHandles(
  struct js_to_cpp_CppSide_BitFlipResponse_Request* in_data);

struct js_to_cpp_CppSide_BitFlipResponse_Request* js_to_cpp_CppSide_BitFlipResponse_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_CppSide_BitFlipResponse_Request* in_data);

size_t js_to_cpp_CppSide_BitFlipResponse_Request_ComputeSerializedSize(
  const struct js_to_cpp_CppSide_BitFlipResponse_Request* in_data);

MojomValidationResult js_to_cpp_CppSide_BitFlipResponse_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_CppSide_BitFlipResponse_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_CppSide_BitFlipResponse_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: BackPointerResponse

#define js_to_cpp_CppSide_BackPointerResponse__Ordinal \
    ((uint32_t)100000003)
#define js_to_cpp_CppSide_BackPointerResponse__MinVersion \
    ((uint32_t)0)

struct js_to_cpp_CppSide_BackPointerResponse_Request;
// -- js_to_cpp_CppSide_BackPointerResponse_Request --
// Enums
// Constants
// Struct definition
struct js_to_cpp_CppSide_BackPointerResponse_Request {
  struct MojomStructHeader header_;
  union js_to_cpp_EchoArgsListPtr arg;  // offset,bit = 0,0
  
};

struct js_to_cpp_CppSide_BackPointerResponse_Request* js_to_cpp_CppSide_BackPointerResponse_Request_New(struct MojomBuffer* in_buffer);

void js_to_cpp_CppSide_BackPointerResponse_Request_Init(
  struct js_to_cpp_CppSide_BackPointerResponse_Request* in_data);

void js_to_cpp_CppSide_BackPointerResponse_Request_CloseAllHandles(
  struct js_to_cpp_CppSide_BackPointerResponse_Request* in_data);

struct js_to_cpp_CppSide_BackPointerResponse_Request* js_to_cpp_CppSide_BackPointerResponse_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_CppSide_BackPointerResponse_Request* in_data);

size_t js_to_cpp_CppSide_BackPointerResponse_Request_ComputeSerializedSize(
  const struct js_to_cpp_CppSide_BackPointerResponse_Request* in_data);

MojomValidationResult js_to_cpp_CppSide_BackPointerResponse_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_CppSide_BackPointerResponse_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_CppSide_BackPointerResponse_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);





// --- js_to_cpp_JsSide ---
#define js_to_cpp_JsSide__ServiceName ((const char*)"")
#define js_to_cpp_JsSide__CurrentVersion ((uint32_t)0)

// Enums
// Constants


// Message: SetCppSide

#define js_to_cpp_JsSide_SetCppSide__Ordinal \
    ((uint32_t)0)
#define js_to_cpp_JsSide_SetCppSide__MinVersion \
    ((uint32_t)0)

struct js_to_cpp_JsSide_SetCppSide_Request;
// -- js_to_cpp_JsSide_SetCppSide_Request --
// Enums
// Constants
// Struct definition
struct js_to_cpp_JsSide_SetCppSide_Request {
  struct MojomStructHeader header_;
  struct MojomInterfaceData cpp;  // offset,bit = 0,0
  
};

struct js_to_cpp_JsSide_SetCppSide_Request* js_to_cpp_JsSide_SetCppSide_Request_New(struct MojomBuffer* in_buffer);

void js_to_cpp_JsSide_SetCppSide_Request_Init(
  struct js_to_cpp_JsSide_SetCppSide_Request* in_data);

void js_to_cpp_JsSide_SetCppSide_Request_CloseAllHandles(
  struct js_to_cpp_JsSide_SetCppSide_Request* in_data);

struct js_to_cpp_JsSide_SetCppSide_Request* js_to_cpp_JsSide_SetCppSide_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_JsSide_SetCppSide_Request* in_data);

size_t js_to_cpp_JsSide_SetCppSide_Request_ComputeSerializedSize(
  const struct js_to_cpp_JsSide_SetCppSide_Request* in_data);

MojomValidationResult js_to_cpp_JsSide_SetCppSide_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_JsSide_SetCppSide_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_JsSide_SetCppSide_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Ping

#define js_to_cpp_JsSide_Ping__Ordinal \
    ((uint32_t)1)
#define js_to_cpp_JsSide_Ping__MinVersion \
    ((uint32_t)0)

struct js_to_cpp_JsSide_Ping_Request;
// -- js_to_cpp_JsSide_Ping_Request --
// Enums
// Constants
// Struct definition
struct js_to_cpp_JsSide_Ping_Request {
  struct MojomStructHeader header_;
  
};

struct js_to_cpp_JsSide_Ping_Request* js_to_cpp_JsSide_Ping_Request_New(struct MojomBuffer* in_buffer);

void js_to_cpp_JsSide_Ping_Request_Init(
  struct js_to_cpp_JsSide_Ping_Request* in_data);

void js_to_cpp_JsSide_Ping_Request_CloseAllHandles(
  struct js_to_cpp_JsSide_Ping_Request* in_data);

struct js_to_cpp_JsSide_Ping_Request* js_to_cpp_JsSide_Ping_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_JsSide_Ping_Request* in_data);

size_t js_to_cpp_JsSide_Ping_Request_ComputeSerializedSize(
  const struct js_to_cpp_JsSide_Ping_Request* in_data);

MojomValidationResult js_to_cpp_JsSide_Ping_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_JsSide_Ping_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_JsSide_Ping_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: Echo

#define js_to_cpp_JsSide_Echo__Ordinal \
    ((uint32_t)2)
#define js_to_cpp_JsSide_Echo__MinVersion \
    ((uint32_t)0)

struct js_to_cpp_JsSide_Echo_Request;
// -- js_to_cpp_JsSide_Echo_Request --
// Enums
// Constants
// Struct definition
struct js_to_cpp_JsSide_Echo_Request {
  struct MojomStructHeader header_;
  int32_t numIterations;  // offset,bit = 0,0
  uint8_t pad0_[4];  // padding
  union js_to_cpp_EchoArgsPtr arg;  // offset,bit = 8,0
  
};

struct js_to_cpp_JsSide_Echo_Request* js_to_cpp_JsSide_Echo_Request_New(struct MojomBuffer* in_buffer);

void js_to_cpp_JsSide_Echo_Request_Init(
  struct js_to_cpp_JsSide_Echo_Request* in_data);

void js_to_cpp_JsSide_Echo_Request_CloseAllHandles(
  struct js_to_cpp_JsSide_Echo_Request* in_data);

struct js_to_cpp_JsSide_Echo_Request* js_to_cpp_JsSide_Echo_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_JsSide_Echo_Request* in_data);

size_t js_to_cpp_JsSide_Echo_Request_ComputeSerializedSize(
  const struct js_to_cpp_JsSide_Echo_Request* in_data);

MojomValidationResult js_to_cpp_JsSide_Echo_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_JsSide_Echo_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_JsSide_Echo_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: BitFlip

#define js_to_cpp_JsSide_BitFlip__Ordinal \
    ((uint32_t)3)
#define js_to_cpp_JsSide_BitFlip__MinVersion \
    ((uint32_t)0)

struct js_to_cpp_JsSide_BitFlip_Request;
// -- js_to_cpp_JsSide_BitFlip_Request --
// Enums
// Constants
// Struct definition
struct js_to_cpp_JsSide_BitFlip_Request {
  struct MojomStructHeader header_;
  union js_to_cpp_EchoArgsPtr arg;  // offset,bit = 0,0
  
};

struct js_to_cpp_JsSide_BitFlip_Request* js_to_cpp_JsSide_BitFlip_Request_New(struct MojomBuffer* in_buffer);

void js_to_cpp_JsSide_BitFlip_Request_Init(
  struct js_to_cpp_JsSide_BitFlip_Request* in_data);

void js_to_cpp_JsSide_BitFlip_Request_CloseAllHandles(
  struct js_to_cpp_JsSide_BitFlip_Request* in_data);

struct js_to_cpp_JsSide_BitFlip_Request* js_to_cpp_JsSide_BitFlip_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_JsSide_BitFlip_Request* in_data);

size_t js_to_cpp_JsSide_BitFlip_Request_ComputeSerializedSize(
  const struct js_to_cpp_JsSide_BitFlip_Request* in_data);

MojomValidationResult js_to_cpp_JsSide_BitFlip_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_JsSide_BitFlip_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_JsSide_BitFlip_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);



// Message: BackPointer

#define js_to_cpp_JsSide_BackPointer__Ordinal \
    ((uint32_t)4)
#define js_to_cpp_JsSide_BackPointer__MinVersion \
    ((uint32_t)0)

struct js_to_cpp_JsSide_BackPointer_Request;
// -- js_to_cpp_JsSide_BackPointer_Request --
// Enums
// Constants
// Struct definition
struct js_to_cpp_JsSide_BackPointer_Request {
  struct MojomStructHeader header_;
  union js_to_cpp_EchoArgsPtr arg;  // offset,bit = 0,0
  
};

struct js_to_cpp_JsSide_BackPointer_Request* js_to_cpp_JsSide_BackPointer_Request_New(struct MojomBuffer* in_buffer);

void js_to_cpp_JsSide_BackPointer_Request_Init(
  struct js_to_cpp_JsSide_BackPointer_Request* in_data);

void js_to_cpp_JsSide_BackPointer_Request_CloseAllHandles(
  struct js_to_cpp_JsSide_BackPointer_Request* in_data);

struct js_to_cpp_JsSide_BackPointer_Request* js_to_cpp_JsSide_BackPointer_Request_DeepCopy(
  struct MojomBuffer* in_buffer,
  struct js_to_cpp_JsSide_BackPointer_Request* in_data);

size_t js_to_cpp_JsSide_BackPointer_Request_ComputeSerializedSize(
  const struct js_to_cpp_JsSide_BackPointer_Request* in_data);

MojomValidationResult js_to_cpp_JsSide_BackPointer_Request_EncodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size, MojoHandle* inout_handles,
  uint32_t in_num_handles, uint32_t* out_num_handles);

MojomValidationResult js_to_cpp_JsSide_BackPointer_Request_DecodePointersAndHandles(
  void* inout_buf, uint32_t in_buf_size,
  MojoHandle* inout_handles, uint32_t in_num_handles);

MojomValidationResult js_to_cpp_JsSide_BackPointer_Request_Validate(
  const void* in_buf, uint32_t in_buf_size,
  const MojoHandle* in_handles, uint32_t in_num_handles);







// Type tables declarations for structs and unions.



extern struct MojomPointerTableStructEntry js_to_cpp_EchoArgs__PointerTable[];
extern struct MojomPointerTableStructEntry js_to_cpp_EchoArgsList__PointerTable[];
extern struct MojomPointerTableStructEntry js_to_cpp_CppSide_StartTest_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_to_cpp_CppSide_TestFinished_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_to_cpp_CppSide_PingResponse_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_to_cpp_CppSide_EchoResponse_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_to_cpp_CppSide_BitFlipResponse_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_to_cpp_CppSide_BackPointerResponse_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_to_cpp_JsSide_SetCppSide_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_to_cpp_JsSide_Ping_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_to_cpp_JsSide_Echo_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_to_cpp_JsSide_BitFlip_Request__PointerTable[];
extern struct MojomPointerTableStructEntry js_to_cpp_JsSide_BackPointer_Request__PointerTable[];


#endif  // SERVICES_JS_SYSTEM_TESTS_JS_TO_CPP_MOJOM_C_H_