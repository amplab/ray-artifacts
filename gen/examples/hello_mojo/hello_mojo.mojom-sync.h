// NOTE: This file was generated by the Mojo bindings generator.
#ifndef EXAMPLES_HELLO_MOJO_HELLO_MOJO_MOJOM_SYNC_H_
#define EXAMPLES_HELLO_MOJO_HELLO_MOJO_MOJOM_SYNC_H_

#include <stdint.h>

#include "mojo/public/cpp/bindings/array.h"
#include "mojo/public/cpp/bindings/callback.h"
#include "mojo/public/cpp/bindings/interface_handle.h"
#include "mojo/public/cpp/bindings/interface_request.h"
#include "mojo/public/cpp/bindings/map.h"
#include "mojo/public/cpp/bindings/message_validator.h"
#include "mojo/public/cpp/bindings/string.h"
#include "mojo/public/cpp/bindings/struct_ptr.h"
#include "mojo/public/cpp/bindings/lib/synchronous_connector.h"
#include "examples/hello_mojo/hello_mojo.mojom-internal.h"
#include "examples/hello_mojo/hello_mojo.mojom-common.h"


namespace examples {

// --- Synchronous interface declaration ---

class HelloMojo_SynchronousProxy;
class HelloMojo_Synchronous
  : public internal::HelloMojo_Base {
 public:
  virtual ~HelloMojo_Synchronous() override {}
  
  using Proxy_ = HelloMojo_SynchronousProxy;
  virtual bool Say(
      const mojo::String& in_request, mojo::String* out_response)= 0;
};

class HelloMojo_SynchronousProxy
    : public HelloMojo_Synchronous {
 public:
  explicit HelloMojo_SynchronousProxy(
      mojo::internal::SynchronousConnector* connector,
      mojo::internal::MessageValidatorList&& validators);
  bool Say(const mojo::String& in_request, mojo::String* out_response) override;

 private:
  // |connector_| is passed to us, and is not owned by us.
  mojo::internal::SynchronousConnector* const connector_;
  mojo::internal::MessageValidatorList const validators_;
};

}  // namespace examples

#endif  // EXAMPLES_HELLO_MOJO_HELLO_MOJO_MOJOM_SYNC_H_
